{"version":3,"sources":["bootstrap-validator.bundle.js"],"names":["$","BootstrapValidator","form","options","this","$form","extend","fn","bootstrapValidator","DEFAULT_OPTIONS","$invalidFields","$submitButton","STATUS_NOT_VALIDATED","STATUS_VALIDATING","STATUS_INVALID","STATUS_VALID","ieVersion","v","div","document","createElement","a","all","innerHTML","el","_changeEvent","_submitIfValid","_cacheFields","_init","prototype","constructor","that","excluded","attr","trigger","message","container","group","submitButtons","threshold","live","onSuccess","onError","fields","feedbackIcons","valid","invalid","validating","addClass","elementClass","on","e","preventDefault","validate","find","each","$field","field","opts","_parseOptions","_initField","Event","bv","helpers","call","validator","enabled","optionName","optionValue","html5AttrName","html5AttrMap","validators","toLowerCase","enableByHtml5","html5Attributes","onerror","onsuccess","selector","onStatus","emptyOptions","isEmptyObject","emptyValidators","getFieldElements","length","validatorName","total","type","updateAll","event","eq","get","tagName","split","events","map","item","join","i","$parent","parents","$message","_getMessageContainer","remove","off","updateStatus","data","css","html","_getMessage","appendTo","removeClass","$icon","insertAfter","parent","top","z-index","_exceedThreshold","validateField","element","i18n","is","cssClasses","n","test","_submit","isValid","eventType","_onSuccess","_onError","_isExcluded","excludedAttr","trim","cannotType","inArray","val","isDefaultPrevented","f","$invalidField","tabId","$tabPane","tab","focus","disableSubmitButtons","defaultSubmit","_onFieldValidated","counter","numValidators","result","not","add","disabled","removeAttr","validateResult","reject","resolve","done","$f","removeData","updateMessage","undefined","$fields","status","$allErrors","$errors","filter","isValidField","$tab","show","isValidContainer","hide","tooltip","placement","title","popover","content","$container","submit","getInvalidFields","getSubmitButton","getMessages","messages","concat","getOptions","option","updateOption","value","addField","removeField","resetField","resetValue","resetForm","revalidateField","enableFieldValidators","getDynamicOption","destroy","end","params","arguments","$this","apply","Array","slice","Constructor","functionName","args","substring","ns","func","pop","context","window","format","parameters","isArray","replace","date","year","month","day","notInFuture","isNaN","parseInt","numDays","currentDate","Date","currentYear","getFullYear","currentMonth","getMonth","currentDay","getDate","luhn","mul","prodArr","sum","charAt","mod11And10","check","mod37And36","alphabet","modulus","Math","floor","indexOf","jQuery","base64","default","between","notInclusive","min","max","inclusive","isNumeric","parseFloat","callback","dfd","Deferred","response","choice","less","more","numChoices","creditCard","cards","AMERICAN_EXPRESS","prefix","DINERS_CLUB","DINERS_CLUB_US","DISCOVER","JCB","LASER","MAESTRO","MASTERCARD","SOLO","UNIONPAY","VISA","substr","cusip","toUpperCase","converted","code","charCodeAt","num","cvv","ccfield","creditCardField","creditCardType","separator","formats","dateFormat","timeFormat","amOrPm","sections","time","minutes","hours","seconds","different","compareWith","digits","ean","weight","emailAddress","emailRegExp","file","extension","maxsize","ext","extensions","types","html5","File","FileList","FileReader","files","maxSize","size","name","lastIndexOf","greaterThan","compareTo","grid","hex","hexColor","iban","countryNotSupported","country","countries","AD","AE","AL","AO","AT","AZ","BA","BE","BF","BG","BH","BI","BJ","BR","CH","CI","CM","CR","CV","CY","CZ","DE","DK","DO","DZ","EE","ES","FI","FO","FR","GB","GE","GI","GL","GR","GT","HR","HU","IE","IL","IR","IS","IT","JO","KW","KZ","LB","LI","LT","LU","LV","MC","MD","ME","MG","MK","ML","MR","MT","MU","MZ","NL","NO","PK","PL","PS","PT","QA","RO","RS","SA","SE","SI","SK","SM","SN","TN","TR","VG","REGEX","RegExp","temp","id","CL","ZA","COUNTRY_CODES","method","_validateJMBG","countryCode","rr","k","_ba","_mk","_me","_rs","_si","_bg","_br","d1","d2","_ch","_cl","_cz","_dk","_ee","_lt","_es","index","_fi","centuries","+","-","A","individual","_hr","_ie","getCheckDigit","_is","century","gender","_lv","_nl","_ro","1","2","3","4","5","6","_se","_sk","_sm","_za","identical","imei","integer","ip","ipv4","ipv6","isbn","checksum","chars","isin","regex","c","toString","ismn","issn","lessThan","mac","notEmpty","required","numeric","isFinite","phone","US","regexp","pattern","remote","url","xhr","ajax","dataType","then","fail","abort","rtn","sedol","siren","siret","tmp","step","base","baseValue","round","x","precision","m","pow","sign","isHalf","floatMod","y","dotX","dotY","mod","stringCase","upper","case","stringLength","maxLength","uri","allowlocal","allowLocal","urlExp","uuid","version","patterns","vat","EL","RU","_at","_be","egn","pnf","_cy","translation","0","7","8","9","_de","dni","nie","cif","first","_fr","_gb","firstTwo","lastThree","_gr","_el","_hu","_it","_lu","_mt","_no","_pl","_pt","_ru","sum1","weight1","sum2","weight2","vin","B","C","D","E","F","G","H","J","K","L","M","N","P","R","S","T","U","V","W","X","Y","Z","weights","reminder","zipCode","CA","SG","firstChar","secondChar","thirdChar","fourthChar","fifthChar","regexps","decimal_separator","thousands_separator","match"],"mappings":"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","file":"bootstrap-validator.bundle.min.js","sourcesContent":["/*!\r\n * BootstrapValidator (http://bootstrapvalidator.com)\r\n * The best jQuery plugin to validate form fields. Designed to use with Bootstrap 3\r\n *\r\n * @version     v0.5.0, built on 2014-07-14 4:31:02 PM\r\n * @author      https://twitter.com/nghuuphuoc\r\n * @copyright   (c) 2013 - 2014 Nguyen Huu Phuoc\r\n * @license     MIT\r\n */\r\n(function($) {\r\n\tvar BootstrapValidator = function(form, options) {\r\n\t\tthis.$form   = $(form);\r\n\t\tthis.options = $.extend({}, $.fn.bootstrapValidator.DEFAULT_OPTIONS, options);\r\n\r\n\t\tthis.$invalidFields = $([]);    // Array of invalid fields\r\n\t\tthis.$submitButton  = null;     // The submit button which is clicked to submit form\r\n\r\n\t\t// Validating status\r\n\t\tthis.STATUS_NOT_VALIDATED = 'NOT_VALIDATED';\r\n\t\tthis.STATUS_VALIDATING    = 'VALIDATING';\r\n\t\tthis.STATUS_INVALID       = 'INVALID';\r\n\t\tthis.STATUS_VALID         = 'VALID';\r\n\r\n\t\t// Determine the event that is fired when user change the field value\r\n\t\t// Most modern browsers supports input event except IE 7, 8.\r\n\t\t// IE 9 supports input event but the event is still not fired if I press the backspace key.\r\n\t\t// Get IE version\r\n\t\t// https://gist.github.com/padolsey/527683/#comment-7595\r\n\t\tvar ieVersion = (function() {\r\n\t\t\tvar v = 3, div = document.createElement('div'), a = div.all || [];\r\n\t\t\twhile (div.innerHTML = '<!--[if gt IE '+(++v)+']><br><![endif]-->', a[0]) {}\r\n\t\t\treturn v > 4 ? v : !v;\r\n\t\t}());\r\n\r\n\t\tvar el = document.createElement('div');\r\n\t\tthis._changeEvent = (ieVersion === 9 || !('oninput' in el)) ? 'keyup' : 'input';\r\n\r\n\t\t// The flag to indicate that the form is ready to submit when a remote/callback validator returns\r\n\t\tthis._submitIfValid = null;\r\n\r\n\t\t// Field elements\r\n\t\tthis._cacheFields = {};\r\n\r\n\t\tthis._init();\r\n\t};\r\n\r\n\tBootstrapValidator.prototype = {\r\n\t\tconstructor: BootstrapValidator,\r\n\r\n\t\t/**\r\n\t\t * Init form\r\n\t\t */\r\n\t\t_init: function() {\r\n\t\t\tvar that    = this,\r\n\t\t\t\toptions = {\r\n\t\t\t\t\texcluded:       this.$form.attr('data-bv-excluded'),\r\n\t\t\t\t\ttrigger:        this.$form.attr('data-bv-trigger'),\r\n\t\t\t\t\tmessage:        this.$form.attr('data-bv-message'),\r\n\t\t\t\t\tcontainer:      this.$form.attr('data-bv-container'),\r\n\t\t\t\t\tgroup:          this.$form.attr('data-bv-group'),\r\n\t\t\t\t\tsubmitButtons:  this.$form.attr('data-bv-submitbuttons'),\r\n\t\t\t\t\tthreshold:      this.$form.attr('data-bv-threshold'),\r\n\t\t\t\t\tlive:           this.$form.attr('data-bv-live'),\r\n\t\t\t\t\tonSuccess:      this.$form.attr('data-bv-onsuccess'),\r\n\t\t\t\t\tonError:        this.$form.attr('data-bv-onerror'),\r\n\t\t\t\t\tfields:         {},\r\n\t\t\t\t\tfeedbackIcons: {\r\n\t\t\t\t\t\tvalid:      this.$form.attr('data-bv-feedbackicons-valid'),\r\n\t\t\t\t\t\tinvalid:    this.$form.attr('data-bv-feedbackicons-invalid'),\r\n\t\t\t\t\t\tvalidating: this.$form.attr('data-bv-feedbackicons-validating')\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\tthis.$form\r\n\t\t\t\t// Disable client side validation in HTML 5\r\n\t\t\t\t.attr('novalidate', 'novalidate')\r\n\t\t\t\t.addClass(this.options.elementClass)\r\n\t\t\t\t// Disable the default submission first\r\n\t\t\t\t.on('submit.bv', function(e) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tthat.validate();\r\n\t\t\t\t})\r\n\t\t\t\t.on('click.bv', this.options.submitButtons, function() {\r\n\t\t\t\t\tthat.$submitButton  = $(this);\r\n\t\t\t\t\t// The user just click the submit button\r\n\t\t\t\t\tthat._submitIfValid = true;\r\n\t\t\t\t})\r\n\t\t\t\t// Find all fields which have either \"name\" or \"data-bv-field\" attribute\r\n\t\t\t\t.find('[name], [data-bv-field]')\r\n\t\t\t\t.each(function() {\r\n\t\t\t\t\tvar $field = $(this),\r\n\t\t\t\t\t\tfield  = $field.attr('name') || $field.attr('data-bv-field'),\r\n\t\t\t\t\t\topts   = that._parseOptions($field);\r\n\t\t\t\t\tif (opts) {\r\n\t\t\t\t\t\t$field.attr('data-bv-field', field);\r\n\t\t\t\t\t\toptions.fields[field] = $.extend({}, opts, options.fields[field]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\tthis.options = $.extend(true, this.options, options);\r\n\t\t\tfor (var field in this.options.fields) {\r\n\t\t\t\tthis._initField(field);\r\n\t\t\t}\r\n\r\n\t\t\tthis.$form.trigger($.Event('init.form.bv'), {\r\n\t\t\t\tbv: this,\r\n\t\t\t\toptions: this.options\r\n\t\t\t});\r\n\r\n\t\t\t// Prepare the events\r\n\t\t\tif (this.options.onSuccess) {\r\n\t\t\t\tthis.$form.on('success.form.bv', function(e) {\r\n\t\t\t\t\t$.fn.bootstrapValidator.helpers.call(that.options.onSuccess, [e]);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (this.options.onError) {\r\n\t\t\t\tthis.$form.on('error.form.bv', function(e) {\r\n\t\t\t\t\t$.fn.bootstrapValidator.helpers.call(that.options.onError, [e]);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Parse the validator options from HTML attributes\r\n\t\t *\r\n\t\t * @param {jQuery} $field The field element\r\n\t\t * @returns {Object}\r\n\t\t */\r\n\t\t_parseOptions: function($field) {\r\n\t\t\tvar field      = $field.attr('name') || $field.attr('data-bv-field'),\r\n\t\t\t\tvalidators = {},\r\n\t\t\t\tvalidator,\r\n\t\t\t\tv,          // Validator name\r\n\t\t\t\tenabled,\r\n\t\t\t\toptionName,\r\n\t\t\t\toptionValue,\r\n\t\t\t\thtml5AttrName,\r\n\t\t\t\thtml5AttrMap;\r\n\r\n\t\t\tfor (v in $.fn.bootstrapValidator.validators) {\r\n\t\t\t\tvalidator    = $.fn.bootstrapValidator.validators[v];\r\n\t\t\t\tenabled      = $field.attr('data-bv-' + v.toLowerCase()) + '';\r\n\t\t\t\thtml5AttrMap = ('function' === typeof validator.enableByHtml5) ? validator.enableByHtml5($field) : null;\r\n\r\n\t\t\t\tif ((html5AttrMap && enabled !== 'false')\r\n\t\t\t\t\t|| (html5AttrMap !== true && ('' === enabled || 'true' === enabled)))\r\n\t\t\t\t{\r\n\t\t\t\t\t// Try to parse the options via attributes\r\n\t\t\t\t\tvalidator.html5Attributes = $.extend({}, { message: 'message', onerror: 'onError', onsuccess: 'onSuccess' }, validator.html5Attributes);\r\n\t\t\t\t\tvalidators[v] = $.extend({}, html5AttrMap === true ? {} : html5AttrMap, validators[v]);\r\n\r\n\t\t\t\t\tfor (html5AttrName in validator.html5Attributes) {\r\n\t\t\t\t\t\toptionName  = validator.html5Attributes[html5AttrName];\r\n\t\t\t\t\t\toptionValue = $field.attr('data-bv-' + v.toLowerCase() + '-' + html5AttrName);\r\n\t\t\t\t\t\tif (optionValue) {\r\n\t\t\t\t\t\t\tif ('true' === optionValue) {\r\n\t\t\t\t\t\t\t\toptionValue = true;\r\n\t\t\t\t\t\t\t} else if ('false' === optionValue) {\r\n\t\t\t\t\t\t\t\toptionValue = false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvalidators[v][optionName] = optionValue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar opts = {\r\n\t\t\t\t\texcluded:      $field.attr('data-bv-excluded'),\r\n\t\t\t\t\tfeedbackIcons: $field.attr('data-bv-feedbackicons'),\r\n\t\t\t\t\ttrigger:       $field.attr('data-bv-trigger'),\r\n\t\t\t\t\tmessage:       $field.attr('data-bv-message'),\r\n\t\t\t\t\tcontainer:     $field.attr('data-bv-container'),\r\n\t\t\t\t\tgroup:         $field.attr('data-bv-group'),\r\n\t\t\t\t\tselector:      $field.attr('data-bv-selector'),\r\n\t\t\t\t\tthreshold:     $field.attr('data-bv-threshold'),\r\n\t\t\t\t\tonStatus:      $field.attr('data-bv-onstatus'),\r\n\t\t\t\t\tonSuccess:     $field.attr('data-bv-onsuccess'),\r\n\t\t\t\t\tonError:       $field.attr('data-bv-onerror'),\r\n\t\t\t\t\tvalidators:    validators\r\n\t\t\t\t},\r\n\t\t\t\temptyOptions    = $.isEmptyObject(opts),        // Check if the field options are set using HTML attributes\r\n\t\t\t\temptyValidators = $.isEmptyObject(validators);  // Check if the field validators are set using HTML attributes\r\n\r\n\t\t\tif (!emptyValidators || (!emptyOptions && this.options.fields && this.options.fields[field])) {\r\n\t\t\t\topts.validators = validators;\r\n\t\t\t\treturn opts;\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Init field\r\n\t\t *\r\n\t\t * @param {String|jQuery} field The field name or field element\r\n\t\t */\r\n\t\t_initField: function(field) {\r\n\t\t\tvar fields = $([]);\r\n\t\t\tswitch (typeof field) {\r\n\t\t\t\tcase 'object':\r\n\t\t\t\t\tfields = field;\r\n\t\t\t\t\tfield  = field.attr('data-bv-field');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'string':\r\n\t\t\t\t\tfields = this.getFieldElements(field);\r\n\t\t\t\t\tfields.attr('data-bv-field', field);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.options.fields[field] === null || this.options.fields[field].validators === null) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// We don't need to validate non-existing fields\r\n\t\t\tif (fields.length === 0) {\r\n\t\t\t\tdelete this.options.fields[field];\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar validatorName;\r\n\t\t\tfor (validatorName in this.options.fields[field].validators) {\r\n\t\t\t\tif (!$.fn.bootstrapValidator.validators[validatorName]) {\r\n\t\t\t\t\tdelete this.options.fields[field].validators[validatorName];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.options.fields[field].enabled === null) {\r\n\t\t\t\tthis.options.fields[field].enabled = true;\r\n\t\t\t}\r\n\r\n\t\t\tvar that      = this,\r\n\t\t\t\ttotal     = fields.length,\r\n\t\t\t\ttype      = fields.attr('type'),\r\n\t\t\t\tupdateAll = (total === 1) || ('radio' === type) || ('checkbox' === type),\r\n\t\t\t\tevent     = ('radio' === type || 'checkbox' === type || 'file' === type || 'SELECT' === fields.eq(0).get(0).tagName) ? 'change' : this._changeEvent,\r\n\t\t\t\ttrigger   = (this.options.fields[field].trigger || this.options.trigger || event).split(' '),\r\n\t\t\t\tevents    = $.map(trigger, function(item) {\r\n\t\t\t\t\treturn item + '.update.bv';\r\n\t\t\t\t}).join(' ');\r\n\r\n\t\t\tfor (var i = 0; i < total; i++) {\r\n\t\t\t\tvar $field    = fields.eq(i),\r\n\t\t\t\t\tgroup     = this.options.fields[field].group || this.options.group,\r\n\t\t\t\t\t$parent   = $field.parents(group),\r\n\t\t\t\t// Allow user to indicate where the error messages are shown\r\n\t\t\t\t\tcontainer = this.options.fields[field].container || this.options.container,\r\n\t\t\t\t\t$message  = (container && container !== 'tooltip' && container !== 'popover') ? $(container) : this._getMessageContainer($field, group);\r\n\r\n\t\t\t\tif (container && container !== 'tooltip' && container !== 'popover') {\r\n\t\t\t\t\t$message.addClass('has-error');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Remove all error messages and feedback icons\r\n\t\t\t\t$message.find('.help-block[data-bv-validator][data-bv-for=\"' + field + '\"]').remove();\r\n\t\t\t\t$parent.find('i[data-bv-icon-for=\"' + field + '\"]').remove();\r\n\r\n\t\t\t\t// Whenever the user change the field value, mark it as not validated yet\r\n\t\t\t\t$field.off(events).on(events, function() {\r\n\t\t\t\t\tthat.updateStatus($(this), that.STATUS_NOT_VALIDATED);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Create help block elements for showing the error messages\r\n\t\t\t\t$field.data('bv.messages', $message);\r\n\t\t\t\tfor (validatorName in this.options.fields[field].validators) {\r\n\t\t\t\t\t$field.data('bv.result.' + validatorName, this.STATUS_NOT_VALIDATED);\r\n\r\n\t\t\t\t\tif (!updateAll || i === total - 1) {\r\n\t\t\t\t\t\t$('<small/>')\r\n\t\t\t\t\t\t\t.css('display', 'none')\r\n\t\t\t\t\t\t\t.addClass('help-block')\r\n\t\t\t\t\t\t\t.attr('data-bv-validator', validatorName)\r\n\t\t\t\t\t\t\t.attr('data-bv-for', field)\r\n\t\t\t\t\t\t\t.attr('data-bv-result', this.STATUS_NOT_VALIDATED)\r\n\t\t\t\t\t\t\t.html(this._getMessage(field, validatorName))\r\n\t\t\t\t\t\t\t.appendTo($message);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Prepare the validator events\r\n\t\t\t\t\tif (this.options.fields[field].validators[validatorName].onSuccess) {\r\n\t\t\t\t\t\t$field.on('success.validator.bv', function(e, data) {\r\n\t\t\t\t\t\t\t$.fn.bootstrapValidator.helpers.call(that.options.fields[field].validators[validatorName].onSuccess, [e, data]);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.options.fields[field].validators[validatorName].onError) {\r\n\t\t\t\t\t\t$field.on('error.validator.bv', function(e, data) {\r\n\t\t\t\t\t\t\t$.fn.bootstrapValidator.helpers.call(that.options.fields[field].validators[validatorName].onError, [e, data]);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Prepare the feedback icons\r\n\t\t\t\t// Available from Bootstrap 3.1 (http://getbootstrap.com/css/#forms-control-validation)\r\n\t\t\t\tif (this.options.fields[field].feedbackIcons !== false && this.options.fields[field].feedbackIcons !== 'false'\r\n\t\t\t\t\t&& this.options.feedbackIcons\r\n\t\t\t\t\t&& this.options.feedbackIcons.validating && this.options.feedbackIcons.invalid && this.options.feedbackIcons.valid\r\n\t\t\t\t\t&& (!updateAll || i === total - 1))\r\n\t\t\t\t{\r\n\t\t\t\t\t$parent.removeClass('has-success').removeClass('has-error').addClass('has-feedback');\r\n\t\t\t\t\tvar $icon = $('<i/>')\r\n\t\t\t\t\t\t.css('display', 'none')\r\n\t\t\t\t\t\t.addClass('form-control-feedback')\r\n\t\t\t\t\t\t.attr('data-bv-icon-for', field)\r\n\t\t\t\t\t\t// Place it after the label containing the checkbox/radio\r\n\t\t\t\t\t\t// so when clicking the icon, it doesn't effect to the checkbox/radio element\r\n\t\t\t\t\t\t.insertAfter(('checkbox' === type || 'radio' === type) ? $field.parent() : $field);\r\n\r\n\t\t\t\t\t// The feedback icon does not render correctly if there is no label\r\n\t\t\t\t\t// https://github.com/twbs/bootstrap/issues/12873\r\n\t\t\t\t\tif ($parent.find('label').length === 0) {\r\n\t\t\t\t\t\t$icon.css('top', 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Fix feedback icons in input-group\r\n\t\t\t\t\tif ($parent.find('.input-group').length !== 0) {\r\n\t\t\t\t\t\t$icon.css({\r\n\t\t\t\t\t\t\t'top': 0,\r\n\t\t\t\t\t\t\t'z-index': 100\r\n\t\t\t\t\t\t}).insertAfter($parent.find('.input-group').eq(0));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Prepare the events\r\n\t\t\tif (this.options.fields[field].onSuccess) {\r\n\t\t\t\tfields.on('success.field.bv', function(e, data) {\r\n\t\t\t\t\t$.fn.bootstrapValidator.helpers.call(that.options.fields[field].onSuccess, [e, data]);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (this.options.fields[field].onError) {\r\n\t\t\t\tfields.on('error.field.bv', function(e, data) {\r\n\t\t\t\t\t$.fn.bootstrapValidator.helpers.call(that.options.fields[field].onError, [e, data]);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (this.options.fields[field].onStatus) {\r\n\t\t\t\tfields.on('status.field.bv', function(e, data) {\r\n\t\t\t\t\t$.fn.bootstrapValidator.helpers.call(that.options.fields[field].onStatus, [e, data]);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Set live mode\r\n\t\t\tevents = $.map(trigger, function(item) {\r\n\t\t\t\treturn item + '.live.bv';\r\n\t\t\t}).join(' ');\r\n\t\t\tswitch (this.options.live) {\r\n\t\t\t\tcase 'submitted':\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'disabled':\r\n\t\t\t\t\tfields.off(events);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'enabled':\r\n\t\t\t\t/* falls through */\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tfields.off(events).on(events, function() {\r\n\t\t\t\t\t\tif (that._exceedThreshold($(this))) {\r\n\t\t\t\t\t\t\tthat.validateField($(this));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tfields.trigger($.Event('init.field.bv'), {\r\n\t\t\t\tbv: this,\r\n\t\t\t\tfield: field,\r\n\t\t\t\telement: fields\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get the error message for given field and validator\r\n\t\t *\r\n\t\t * @param {String} field The field name\r\n\t\t * @param {String} validatorName The validator name\r\n\t\t * @returns {String}\r\n\t\t */\r\n\t\t_getMessage: function(field, validatorName) {\r\n\t\t\tif (!this.options.fields[field] || !$.fn.bootstrapValidator.validators[validatorName]\r\n\t\t\t\t|| !this.options.fields[field].validators || !this.options.fields[field].validators[validatorName])\r\n\t\t\t{\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\r\n\t\t\tvar options = this.options.fields[field].validators[validatorName];\r\n\t\t\tswitch (true) {\r\n\t\t\t\tcase (!!options.message):\r\n\t\t\t\t\treturn options.message;\r\n\t\t\t\tcase (!!this.options.fields[field].message):\r\n\t\t\t\t\treturn this.options.fields[field].message;\r\n\t\t\t\tcase (!!$.fn.bootstrapValidator.i18n[validatorName]):\r\n\t\t\t\t\treturn $.fn.bootstrapValidator.i18n[validatorName]['default'];\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn this.options.message;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get the element to place the error messages\r\n\t\t *\r\n\t\t * @param {jQuery} $field The field element\r\n\t\t * @param {String} group\r\n\t\t * @returns {jQuery}\r\n\t\t */\r\n\t\t_getMessageContainer: function($field, group) {\r\n\t\t\tvar $parent = $field.parent();\r\n\t\t\tif ($parent.is(group)) {\r\n\t\t\t\treturn $parent;\r\n\t\t\t}\r\n\r\n\t\t\tvar cssClasses = $parent.attr('class');\r\n\t\t\tif (!cssClasses) {\r\n\t\t\t\treturn this._getMessageContainer($parent, group);\r\n\t\t\t}\r\n\r\n\t\t\tcssClasses = cssClasses.split(' ');\r\n\t\t\tvar n = cssClasses.length;\r\n\t\t\tfor (var i = 0; i < n; i++) {\r\n\t\t\t\tif (/^col-(xs|sm|md|lg)-\\d+$/.test(cssClasses[i]) || /^col-(xs|sm|md|lg)-offset-\\d+$/.test(cssClasses[i])) {\r\n\t\t\t\t\treturn $parent;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn this._getMessageContainer($parent, group);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Called when all validations are completed\r\n\t\t */\r\n\t\t_submit: function() {\r\n\t\t\tvar isValid   = this.isValid(),\r\n\t\t\t\teventType = isValid ? 'success.form.bv' : 'error.form.bv',\r\n\t\t\t\te         = $.Event(eventType);\r\n\r\n\t\t\tthis.$form.trigger(e);\r\n\r\n\t\t\t// Call default handler\r\n\t\t\t// Check if whether the submit button is clicked\r\n\t\t\tif (this.$submitButton) {\r\n\t\t\t\tisValid ? this._onSuccess(e) : this._onError(e);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Check if the field is excluded.\r\n\t\t * Returning true means that the field will not be validated\r\n\t\t *\r\n\t\t * @param {jQuery} $field The field element\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_isExcluded: function($field) {\r\n\t\t\tvar excludedAttr = $field.attr('data-bv-excluded'),\r\n\t\t\t// I still need to check the 'name' attribute while initializing the field\r\n\t\t\t\tfield        = $field.attr('data-bv-field') || $field.attr('name');\r\n\r\n\t\t\tswitch (true) {\r\n\t\t\t\tcase (!!field && this.options.fields && this.options.fields[field] && (this.options.fields[field].excluded === 'true' || this.options.fields[field].excluded === true)):\r\n\t\t\t\tcase (excludedAttr === 'true'):\r\n\t\t\t\tcase (excludedAttr === ''):\r\n\t\t\t\t\treturn true;\r\n\r\n\t\t\t\tcase (!!field && this.options.fields && this.options.fields[field] && (this.options.fields[field].excluded === 'false' || this.options.fields[field].excluded === false)):\r\n\t\t\t\tcase (excludedAttr === 'false'):\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (this.options.excluded) {\r\n\t\t\t\t\t\t// Convert to array first\r\n\t\t\t\t\t\tif ('string' === typeof this.options.excluded) {\r\n\t\t\t\t\t\t\tthis.options.excluded = $.map(this.options.excluded.split(','), function(item) {\r\n\t\t\t\t\t\t\t\t// Trim the spaces\r\n\t\t\t\t\t\t\t\treturn $.trim(item);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar length = this.options.excluded.length;\r\n\t\t\t\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\t\t\t\tif (('string' === typeof this.options.excluded[i] && $field.is(this.options.excluded[i]))\r\n\t\t\t\t\t\t\t\t|| ('function' === typeof this.options.excluded[i] && this.options.excluded[i].call(this, $field, this) === true))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Check if the number of characters of field value exceed the threshold or not\r\n\t\t *\r\n\t\t * @param {jQuery} $field The field element\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_exceedThreshold: function($field) {\r\n\t\t\tvar field     = $field.attr('data-bv-field'),\r\n\t\t\t\tthreshold = this.options.fields[field].threshold || this.options.threshold;\r\n\t\t\tif (!threshold) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tvar cannotType = $.inArray($field.attr('type'), ['button', 'checkbox', 'file', 'hidden', 'image', 'radio', 'reset', 'submit']) !== -1;\r\n\t\t\treturn (cannotType || $field.val().length >= threshold);\r\n\t\t},\r\n\r\n\t\t// ---\r\n\t\t// Events\r\n\t\t// ---\r\n\r\n\t\t/**\r\n\t\t * The default handler of error.form.bv event.\r\n\t\t * It will be called when there is a invalid field\r\n\t\t *\r\n\t\t * @param {jQuery.Event} e The jQuery event object\r\n\t\t */\r\n\t\t_onError: function(e) {\r\n\t\t\tif (e.isDefaultPrevented()) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif ('submitted' === this.options.live) {\r\n\t\t\t\t// Enable live mode\r\n\t\t\t\tthis.options.live = 'enabled';\r\n\t\t\t\tvar that = this;\r\n\t\t\t\tfor (var field in this.options.fields) {\r\n\t\t\t\t\t(function(f) {\r\n\t\t\t\t\t\tvar fields  = that.getFieldElements(f);\r\n\t\t\t\t\t\tif (fields.length) {\r\n\t\t\t\t\t\t\tvar type    = $(fields[0]).attr('type'),\r\n\t\t\t\t\t\t\t\tevent   = ('radio' === type || 'checkbox' === type || 'file' === type || 'SELECT' === $(fields[0]).get(0).tagName) ? 'change' : that._changeEvent,\r\n\t\t\t\t\t\t\t\ttrigger = that.options.fields[field].trigger || that.options.trigger || event,\r\n\t\t\t\t\t\t\t\tevents  = $.map(trigger.split(' '), function(item) {\r\n\t\t\t\t\t\t\t\t\treturn item + '.live.bv';\r\n\t\t\t\t\t\t\t\t}).join(' ');\r\n\r\n\t\t\t\t\t\t\tfields.off(events).on(events, function() {\r\n\t\t\t\t\t\t\t\tif (that._exceedThreshold($(this))) {\r\n\t\t\t\t\t\t\t\t\tthat.validateField($(this));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})(field);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar $invalidField = this.$invalidFields.eq(0);\r\n\t\t\tif ($invalidField) {\r\n\t\t\t\t// Activate the tab containing the invalid field if exists\r\n\t\t\t\tvar $tabPane = $invalidField.parents('.tab-pane'), tabId;\r\n\t\t\t\tif ($tabPane && (tabId = $tabPane.attr('id'))) {\r\n\t\t\t\t\t$('a[href=\"#' + tabId + '\"][data-toggle=\"tab\"]').tab('show');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Focus to the first invalid field\r\n\t\t\t\t$invalidField.focus();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * The default handler of success.form.bv event.\r\n\t\t * It will be called when all the fields are valid\r\n\t\t *\r\n\t\t * @param {jQuery.Event} e The jQuery event object\r\n\t\t */\r\n\t\t_onSuccess: function(e) {\r\n\t\t\tif (e.isDefaultPrevented()) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Submit the form\r\n\t\t\tthis.disableSubmitButtons(true).defaultSubmit();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Called after validating a field element\r\n\t\t *\r\n\t\t * @param {jQuery} $field The field element\r\n\t\t * @param {String} [validatorName] The validator name\r\n\t\t */\r\n\t\t_onFieldValidated: function($field, validatorName) {\r\n\t\t\tvar field         = $field.attr('data-bv-field'),\r\n\t\t\t\tvalidators    = this.options.fields[field].validators,\r\n\t\t\t\tcounter       = {},\r\n\t\t\t\tnumValidators = 0,\r\n\t\t\t\tdata          = {\r\n\t\t\t\t\tbv: this,\r\n\t\t\t\t\tfield: field,\r\n\t\t\t\t\telement: $field,\r\n\t\t\t\t\tvalidator: validatorName\r\n\t\t\t\t};\r\n\r\n\t\t\t// Trigger an event after given validator completes\r\n\t\t\tif (validatorName) {\r\n\t\t\t\tswitch ($field.data('bv.result.' + validatorName)) {\r\n\t\t\t\t\tcase this.STATUS_INVALID:\r\n\t\t\t\t\t\t$field.trigger($.Event('error.validator.bv'), data);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase this.STATUS_VALID:\r\n\t\t\t\t\t\t$field.trigger($.Event('success.validator.bv'), data);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcounter[this.STATUS_NOT_VALIDATED] = 0;\r\n\t\t\tcounter[this.STATUS_VALIDATING]    = 0;\r\n\t\t\tcounter[this.STATUS_INVALID]       = 0;\r\n\t\t\tcounter[this.STATUS_VALID]         = 0;\r\n\r\n\t\t\tfor (var v in validators) {\r\n\t\t\t\tif (validators[v].enabled === false) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnumValidators++;\r\n\t\t\t\tvar result = $field.data('bv.result.' + v);\r\n\t\t\t\tif (result) {\r\n\t\t\t\t\tcounter[result]++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (counter[this.STATUS_VALID] === numValidators) {\r\n\t\t\t\t// Remove from the list of invalid fields\r\n\t\t\t\tthis.$invalidFields = this.$invalidFields.not($field);\r\n\r\n\t\t\t\t$field.trigger($.Event('success.field.bv'), data);\r\n\t\t\t}\r\n\t\t\t// If all validators are completed and there is at least one validator which doesn't pass\r\n\t\t\telse if (counter[this.STATUS_NOT_VALIDATED] === 0 && counter[this.STATUS_VALIDATING] === 0 && counter[this.STATUS_INVALID] > 0) {\r\n\t\t\t\t// Add to the list of invalid fields\r\n\t\t\t\tthis.$invalidFields = this.$invalidFields.add($field);\r\n\r\n\t\t\t\t$field.trigger($.Event('error.field.bv'), data);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// ---\r\n\t\t// Public methods\r\n\t\t// ---\r\n\r\n\t\t/**\r\n\t\t * Retrieve the field elements by given name\r\n\t\t *\r\n\t\t * @param {String} field The field name\r\n\t\t * @returns {null|jQuery[]}\r\n\t\t */\r\n\t\tgetFieldElements: function(field) {\r\n\t\t\tif (!this._cacheFields[field]) {\r\n\t\t\t\tthis._cacheFields[field] = (this.options.fields[field] && this.options.fields[field].selector)\r\n\t\t\t\t\t? $(this.options.fields[field].selector)\r\n\t\t\t\t\t: this.$form.find('[name=\"' + field + '\"]');\r\n\t\t\t}\r\n\r\n\t\t\treturn this._cacheFields[field];\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Disable/enable submit buttons\r\n\t\t *\r\n\t\t * @param {Boolean} disabled Can be true or false\r\n\t\t * @returns {BootstrapValidator}\r\n\t\t */\r\n\t\tdisableSubmitButtons: function(disabled) {\r\n\t\t\tif (!disabled) {\r\n\t\t\t\tthis.$form.find(this.options.submitButtons).removeAttr('disabled');\r\n\t\t\t} else if (this.options.live !== 'disabled') {\r\n\t\t\t\t// Don't disable if the live validating mode is disabled\r\n\t\t\t\tthis.$form.find(this.options.submitButtons).attr('disabled', 'disabled');\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate the form\r\n\t\t *\r\n\t\t * @returns {BootstrapValidator}\r\n\t\t */\r\n\t\tvalidate: function() {\r\n\t\t\tif (!this.options.fields) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\tthis.disableSubmitButtons(true);\r\n\r\n\t\t\tfor (var field in this.options.fields) {\r\n\t\t\t\tthis.validateField(field);\r\n\t\t\t}\r\n\r\n\t\t\tthis._submit();\r\n\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate given field\r\n\t\t *\r\n\t\t * @param {String|jQuery} field The field name or field element\r\n\t\t * @returns {BootstrapValidator}\r\n\t\t */\r\n\t\tvalidateField: function(field) {\r\n\t\t\tvar fields = $([]);\r\n\t\t\tswitch (typeof field) {\r\n\t\t\t\tcase 'object':\r\n\t\t\t\t\tfields = field;\r\n\t\t\t\t\tfield  = field.attr('data-bv-field');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'string':\r\n\t\t\t\t\tfields = this.getFieldElements(field);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.options.fields[field] && this.options.fields[field].enabled === false) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\tvar that       = this,\r\n\t\t\t\ttype       = fields.attr('type'),\r\n\t\t\t\ttotal      = ('radio' === type || 'checkbox' === type) ? 1 : fields.length,\r\n\t\t\t\tupdateAll  = ('radio' === type || 'checkbox' === type),\r\n\t\t\t\tvalidators = this.options.fields[field].validators,\r\n\t\t\t\tvalidatorName,\r\n\t\t\t\tvalidateResult;\r\n\r\n\t\t\tfor (var i = 0; i < total; i++) {\r\n\t\t\t\tvar $field = fields.eq(i);\r\n\t\t\t\tif (this._isExcluded($field)) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (validatorName in validators) {\r\n\t\t\t\t\tif ($field.data('bv.dfs.' + validatorName)) {\r\n\t\t\t\t\t\t$field.data('bv.dfs.' + validatorName).reject();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Don't validate field if it is already done\r\n\t\t\t\t\tvar result = $field.data('bv.result.' + validatorName);\r\n\t\t\t\t\tif (result === this.STATUS_VALID || result === this.STATUS_INVALID || validators[validatorName].enabled === false) {\r\n\t\t\t\t\t\tthis._onFieldValidated($field, validatorName);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$field.data('bv.result.' + validatorName, this.STATUS_VALIDATING);\r\n\t\t\t\t\tvalidateResult = $.fn.bootstrapValidator.validators[validatorName].validate(this, $field, validators[validatorName]);\r\n\r\n\t\t\t\t\t// validateResult can be a $.Deferred object ...\r\n\t\t\t\t\tif ('object' === typeof validateResult && validateResult.resolve) {\r\n\t\t\t\t\t\tthis.updateStatus(updateAll ? field : $field, this.STATUS_VALIDATING, validatorName);\r\n\t\t\t\t\t\t$field.data('bv.dfs.' + validatorName, validateResult);\r\n\r\n\t\t\t\t\t\tvalidateResult.done(function($f, v, isValid, message) {\r\n\t\t\t\t\t\t\t// v is validator name\r\n\t\t\t\t\t\t\t$f.removeData('bv.dfs.' + v);\r\n\t\t\t\t\t\t\tif (message) {\r\n\t\t\t\t\t\t\t\tthat.updateMessage($f, v, message);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tthat.updateStatus(updateAll ? $f.attr('data-bv-field') : $f, isValid ? that.STATUS_VALID : that.STATUS_INVALID, v);\r\n\r\n\t\t\t\t\t\t\tif (isValid && that._submitIfValid === true) {\r\n\t\t\t\t\t\t\t\t// If a remote validator returns true and the form is ready to submit, then do it\r\n\t\t\t\t\t\t\t\tthat._submit();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// ... or object { valid: true/false, message: 'dynamic message' }\r\n\t\t\t\t\telse if ('object' === typeof validateResult && validateResult.valid !== undefined && validateResult.message !== undefined) {\r\n\t\t\t\t\t\tthis.updateMessage(updateAll ? field : $field, validatorName, validateResult.message);\r\n\t\t\t\t\t\tthis.updateStatus(updateAll ? field : $field, validateResult.valid ? this.STATUS_VALID : this.STATUS_INVALID, validatorName);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// ... or a boolean value\r\n\t\t\t\t\telse if ('boolean' === typeof validateResult) {\r\n\t\t\t\t\t\tthis.updateStatus(updateAll ? field : $field, validateResult ? this.STATUS_VALID : this.STATUS_INVALID, validatorName);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update the error message\r\n\t\t *\r\n\t\t * @param {String|jQuery} field The field name or field element\r\n\t\t * @param {String} validator The validator name\r\n\t\t * @param {String} message The message\r\n\t\t * @returns {BootstrapValidator}\r\n\t\t */\r\n\t\tupdateMessage: function(field, validator, message) {\r\n\t\t\tvar $fields = $([]);\r\n\t\t\tswitch (typeof field) {\r\n\t\t\t\tcase 'object':\r\n\t\t\t\t\t$fields = field;\r\n\t\t\t\t\tfield   = field.attr('data-bv-field');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'string':\r\n\t\t\t\t\t$fields = this.getFieldElements(field);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t$fields.each(function() {\r\n\t\t\t\t$(this).data('bv.messages').find('.help-block[data-bv-validator=\"' + validator + '\"][data-bv-for=\"' + field + '\"]').html(message);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update all validating results of field\r\n\t\t *\r\n\t\t * @param {String|jQuery} field The field name or field element\r\n\t\t * @param {String} status The status. Can be 'NOT_VALIDATED', 'VALIDATING', 'INVALID' or 'VALID'\r\n\t\t * @param {String} [validatorName] The validator name. If null, the method updates validity result for all validators\r\n\t\t * @returns {BootstrapValidator}\r\n\t\t */\r\n\t\tupdateStatus: function(field, status, validatorName) {\r\n\t\t\tvar fields = $([]);\r\n\t\t\tswitch (typeof field) {\r\n\t\t\t\tcase 'object':\r\n\t\t\t\t\tfields = field;\r\n\t\t\t\t\tfield  = field.attr('data-bv-field');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'string':\r\n\t\t\t\t\tfields = this.getFieldElements(field);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (status === this.STATUS_NOT_VALIDATED) {\r\n\t\t\t\t// Reset the flag\r\n\t\t\t\tthis._submitIfValid = false;\r\n\t\t\t}\r\n\r\n\t\t\tvar that  = this,\r\n\t\t\t\ttype  = fields.attr('type'),\r\n\t\t\t\tgroup = this.options.fields[field].group || this.options.group,\r\n\t\t\t\ttotal = ('radio' === type || 'checkbox' === type) ? 1 : fields.length;\r\n\r\n\t\t\tfor (var i = 0; i < total; i++) {\r\n\t\t\t\tvar $field       = fields.eq(i);\r\n\t\t\t\tif (this._isExcluded($field)) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar $parent      = $field.parents(group),\r\n\t\t\t\t\t$message     = $field.data('bv.messages'),\r\n\t\t\t\t\t$allErrors   = $message.find('.help-block[data-bv-validator][data-bv-for=\"' + field + '\"]'),\r\n\t\t\t\t\t$errors      = validatorName ? $allErrors.filter('[data-bv-validator=\"' + validatorName + '\"]') : $allErrors,\r\n\t\t\t\t\t$icon        = $parent.find('.form-control-feedback[data-bv-icon-for=\"' + field + '\"]'),\r\n\t\t\t\t\tcontainer    = this.options.fields[field].container || this.options.container,\r\n\t\t\t\t\tisValidField = null;\r\n\r\n\t\t\t\t// Update status\r\n\t\t\t\tif (validatorName) {\r\n\t\t\t\t\t$field.data('bv.result.' + validatorName, status);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (var v in this.options.fields[field].validators) {\r\n\t\t\t\t\t\t$field.data('bv.result.' + v, status);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Show/hide error elements and feedback icons\r\n\t\t\t\t$errors.attr('data-bv-result', status);\r\n\r\n\t\t\t\t// Determine the tab containing the element\r\n\t\t\t\tvar $tabPane = $field.parents('.tab-pane'),\r\n\t\t\t\t\ttabId, $tab;\r\n\t\t\t\tif ($tabPane && (tabId = $tabPane.attr('id'))) {\r\n\t\t\t\t\t$tab = $('a[href=\"#' + tabId + '\"][data-toggle=\"tab\"]').parent();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tswitch (status) {\r\n\t\t\t\t\tcase this.STATUS_VALIDATING:\r\n\t\t\t\t\t\tisValidField = null;\r\n\t\t\t\t\t\tthis.disableSubmitButtons(true);\r\n\t\t\t\t\t\t$parent.removeClass('has-success').removeClass('has-error');\r\n\t\t\t\t\t\tif ($icon) {\r\n\t\t\t\t\t\t\t$icon.removeClass(this.options.feedbackIcons.valid).removeClass(this.options.feedbackIcons.invalid).addClass(this.options.feedbackIcons.validating).show();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ($tab) {\r\n\t\t\t\t\t\t\t$tab.removeClass('bv-tab-success').removeClass('bv-tab-error');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase this.STATUS_INVALID:\r\n\t\t\t\t\t\tisValidField = false;\r\n\t\t\t\t\t\tthis.disableSubmitButtons(true);\r\n\t\t\t\t\t\t$parent.removeClass('has-success').addClass('has-error');\r\n\t\t\t\t\t\tif ($icon) {\r\n\t\t\t\t\t\t\t$icon.removeClass(this.options.feedbackIcons.valid).removeClass(this.options.feedbackIcons.validating).addClass(this.options.feedbackIcons.invalid).show();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ($tab) {\r\n\t\t\t\t\t\t\t$tab.removeClass('bv-tab-success').addClass('bv-tab-error');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase this.STATUS_VALID:\r\n\t\t\t\t\t\t// If the field is valid (passes all validators)\r\n\t\t\t\t\t\tisValidField = ($allErrors.filter('[data-bv-result=\"' + this.STATUS_NOT_VALIDATED +'\"]').length === 0)\r\n\t\t\t\t\t\t\t? ($allErrors.filter('[data-bv-result=\"' + this.STATUS_VALID +'\"]').length === $allErrors.length)  // All validators are completed\r\n\t\t\t\t\t\t\t: null;                                                                                            // There are some validators that have not done\r\n\t\t\t\t\t\tif (isValidField !== null) {\r\n\t\t\t\t\t\t\tthis.disableSubmitButtons(this.$submitButton ? !this.isValid() : !isValidField);\r\n\t\t\t\t\t\t\tif ($icon) {\r\n\t\t\t\t\t\t\t\t$icon\r\n\t\t\t\t\t\t\t\t\t.removeClass(this.options.feedbackIcons.invalid).removeClass(this.options.feedbackIcons.validating).removeClass(this.options.feedbackIcons.valid)\r\n\t\t\t\t\t\t\t\t\t.addClass(isValidField ? this.options.feedbackIcons.valid : this.options.feedbackIcons.invalid)\r\n\t\t\t\t\t\t\t\t\t.show();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t$parent.removeClass('has-error has-success').addClass(this.isValidContainer($parent) ? 'has-success' : 'has-error');\r\n\t\t\t\t\t\tif ($tab) {\r\n\t\t\t\t\t\t\t$tab.removeClass('bv-tab-success').removeClass('bv-tab-error').addClass(this.isValidContainer($tabPane) ? 'bv-tab-success' : 'bv-tab-error');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase this.STATUS_NOT_VALIDATED:\r\n\t\t\t\t\t/* falls through */\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tisValidField = null;\r\n\t\t\t\t\t\tthis.disableSubmitButtons(false);\r\n\t\t\t\t\t\t$parent.removeClass('has-success').removeClass('has-error');\r\n\t\t\t\t\t\tif ($icon) {\r\n\t\t\t\t\t\t\t$icon.removeClass(this.options.feedbackIcons.valid).removeClass(this.options.feedbackIcons.invalid).removeClass(this.options.feedbackIcons.validating).hide();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ($tab) {\r\n\t\t\t\t\t\t\t$tab.removeClass('bv-tab-success').removeClass('bv-tab-error');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tswitch (true) {\r\n\t\t\t\t\t// Only show the first error message if it is placed inside a tooltip ...\r\n\t\t\t\t\tcase ($icon && 'tooltip' === container):\r\n\t\t\t\t\t\t(isValidField === false)\r\n\t\t\t\t\t\t\t? $icon.css('cursor', 'pointer').tooltip('destroy').tooltip({\r\n\t\t\t\t\t\t\thtml: true,\r\n\t\t\t\t\t\t\tplacement: 'top',\r\n\t\t\t\t\t\t\ttitle: $allErrors.filter('[data-bv-result=\"' + that.STATUS_INVALID + '\"]').eq(0).html()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t: $icon.css('cursor', '').tooltip('destroy');\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t// ... or popover\r\n\t\t\t\t\tcase ($icon && 'popover' === container):\r\n\t\t\t\t\t\t(isValidField === false)\r\n\t\t\t\t\t\t\t? $icon.css('cursor', 'pointer').popover('destroy').popover({\r\n\t\t\t\t\t\t\tcontent: $allErrors.filter('[data-bv-result=\"' + that.STATUS_INVALID + '\"]').eq(0).html(),\r\n\t\t\t\t\t\t\thtml: true,\r\n\t\t\t\t\t\t\tplacement: 'top',\r\n\t\t\t\t\t\t\ttrigger: 'hover click'\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t: $icon.css('cursor', '').popover('destroy');\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t(status === this.STATUS_INVALID) ? $errors.show() : $errors.hide();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Trigger an event\r\n\t\t\t\t$field.trigger($.Event('status.field.bv'), {\r\n\t\t\t\t\tbv: this,\r\n\t\t\t\t\tfield: field,\r\n\t\t\t\t\telement: $field,\r\n\t\t\t\t\tstatus: status\r\n\t\t\t\t});\r\n\t\t\t\tthis._onFieldValidated($field, validatorName);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Check the form validity\r\n\t\t *\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tisValid: function() {\r\n\t\t\tfor (var field in this.options.fields) {\r\n\t\t\t\tif (!this.isValidField(field)) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Check if the field is valid or not\r\n\t\t *\r\n\t\t * @param {String|jQuery} field The field name or field element\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tisValidField: function(field) {\r\n\t\t\tvar fields = $([]);\r\n\t\t\tswitch (typeof field) {\r\n\t\t\t\tcase 'object':\r\n\t\t\t\t\tfields = field;\r\n\t\t\t\t\tfield  = field.attr('data-bv-field');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'string':\r\n\t\t\t\t\tfields = this.getFieldElements(field);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (fields.length === 0 || this.options.fields[field] === null || this.options.fields[field].enabled === false) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tvar type  = fields.attr('type'),\r\n\t\t\t\ttotal = ('radio' === type || 'checkbox' === type) ? 1 : fields.length,\r\n\t\t\t\t$field, validatorName, status;\r\n\t\t\tfor (var i = 0; i < total; i++) {\r\n\t\t\t\t$field = fields.eq(i);\r\n\t\t\t\tif (this._isExcluded($field)) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (validatorName in this.options.fields[field].validators) {\r\n\t\t\t\t\tif (this.options.fields[field].validators[validatorName].enabled === false) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstatus = $field.data('bv.result.' + validatorName);\r\n\t\t\t\t\tif (status !== this.STATUS_VALID) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Check if all fields inside a given container are valid.\r\n\t\t * It's useful when working with a wizard-like such as tab, collapse\r\n\t\t *\r\n\t\t * @param {String|jQuery} container The container selector or element\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tisValidContainer: function(container) {\r\n\t\t\tvar that       = this,\r\n\t\t\t\tmap        = {},\r\n\t\t\t\t$container = ('string' === typeof container) ? $(container) : container;\r\n\t\t\tif ($container.length === 0) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t$container.find('[data-bv-field]').each(function() {\r\n\t\t\t\tvar $field = $(this),\r\n\t\t\t\t\tfield  = $field.attr('data-bv-field');\r\n\t\t\t\tif (!that._isExcluded($field) && !map[field]) {\r\n\t\t\t\t\tmap[field] = $field;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tfor (var field in map) {\r\n\t\t\t\tvar $f = map[field];\r\n\t\t\t\tif ($f.data('bv.messages')\r\n\t\t\t\t\t.find('.help-block[data-bv-validator][data-bv-for=\"' + field + '\"]')\r\n\t\t\t\t\t.filter(function() {\r\n\t\t\t\t\t\tvar v = $(this).attr('data-bv-validator'),\r\n\t\t\t\t\t\t\tf = $(this).attr('data-bv-for');\r\n\t\t\t\t\t\treturn (that.options.fields[f].validators[v].enabled !== false\r\n\t\t\t\t\t\t\t&& $f.data('bv.result.' + v) && $f.data('bv.result.' + v) !== that.STATUS_VALID);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.length !== 0)\r\n\t\t\t\t{\r\n\t\t\t\t\t// The field is not valid\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Submit the form using default submission.\r\n\t\t * It also does not perform any validations when submitting the form\r\n\t\t */\r\n\t\tdefaultSubmit: function() {\r\n\t\t\tif (this.$submitButton) {\r\n\t\t\t\t// Create hidden input to send the submit buttons\r\n\t\t\t\t$('<input/>')\r\n\t\t\t\t\t.attr('type', 'hidden')\r\n\t\t\t\t\t.attr('data-bv-submit-hidden', '')\r\n\t\t\t\t\t.attr('name', this.$submitButton.attr('name'))\r\n\t\t\t\t\t.val(this.$submitButton.val())\r\n\t\t\t\t\t.appendTo(this.$form);\r\n\t\t\t}\r\n\r\n\t\t\t// Submit form\r\n\t\t\tthis.$form.off('submit.bv').submit();\r\n\t\t},\r\n\r\n\t\t// ---\r\n\t\t// Useful APIs which aren't used internally\r\n\t\t// ---\r\n\r\n\t\t/**\r\n\t\t * Get the list of invalid fields\r\n\t\t *\r\n\t\t * @returns {jQuery[]}\r\n\t\t */\r\n\t\tgetInvalidFields: function() {\r\n\t\t\treturn this.$invalidFields;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Returns the clicked submit button\r\n\t\t *\r\n\t\t * @returns {jQuery}\r\n\t\t */\r\n\t\tgetSubmitButton: function() {\r\n\t\t\treturn this.$submitButton;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get the error messages\r\n\t\t *\r\n\t\t * @param {String|jQuery} [field] The field name or field element\r\n\t\t * If the field is not defined, the method returns all error messages of all fields\r\n\t\t * @param {String} [validator] The name of validator\r\n\t\t * If the validator is not defined, the method returns error messages of all validators\r\n\t\t * @returns {String[]}\r\n\t\t */\r\n\t\tgetMessages: function(field, validator) {\r\n\t\t\tvar that     = this,\r\n\t\t\t\tmessages = [],\r\n\t\t\t\t$fields  = $([]);\r\n\r\n\t\t\tswitch (true) {\r\n\t\t\t\tcase (field && 'object' === typeof field):\r\n\t\t\t\t\t$fields = field;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase (field && 'string' === typeof field):\r\n\t\t\t\t\tvar f = this.getFieldElements(field);\r\n\t\t\t\t\tif (f.length > 0) {\r\n\t\t\t\t\t\tvar type = f.attr('type');\r\n\t\t\t\t\t\t$fields = ('radio' === type || 'checkbox' === type) ? f.eq(0) : f;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t$fields = this.$invalidFields;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tvar filter = validator ? '[data-bv-validator=\"' + validator + '\"]' : '';\r\n\t\t\t$fields.each(function() {\r\n\t\t\t\tmessages = messages.concat(\r\n\t\t\t\t\t$(this)\r\n\t\t\t\t\t\t.data('bv.messages')\r\n\t\t\t\t\t\t.find('.help-block[data-bv-for=\"' + $(this).attr('data-bv-field') + '\"][data-bv-result=\"' + that.STATUS_INVALID + '\"]' + filter)\r\n\t\t\t\t\t\t.map(function() {\r\n\t\t\t\t\t\t\tvar v = $(this).attr('data-bv-validator'),\r\n\t\t\t\t\t\t\t\tf = $(this).attr('data-bv-for');\r\n\t\t\t\t\t\t\treturn (that.options.fields[f].validators[v].enabled === false) ? '' : $(this).html();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.get()\r\n\t\t\t\t);\r\n\t\t\t});\r\n\r\n\t\t\treturn messages;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get the field options\r\n\t\t *\r\n\t\t * @param {String|jQuery} [field] The field name or field element. If it is not set, the method returns the form options\r\n\t\t * @param {String} [validator] The name of validator. It null, the method returns form options\r\n\t\t * @param {String} [option] The option name\r\n\t\t * @return {String|Object}\r\n\t\t */\r\n\t\tgetOptions: function(field, validator, option) {\r\n\t\t\tif (!field) {\r\n\t\t\t\treturn this.options;\r\n\t\t\t}\r\n\t\t\tif ('object' === typeof field) {\r\n\t\t\t\tfield = field.attr('data-bv-field');\r\n\t\t\t}\r\n\t\t\tif (!this.options.fields[field]) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar options = this.options.fields[field];\r\n\t\t\tif (!validator) {\r\n\t\t\t\treturn options;\r\n\t\t\t}\r\n\t\t\tif (!options.validators || !options.validators[validator]) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\treturn option ? options.validators[validator][option] : options.validators[validator];\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update the option of a specific validator\r\n\t\t *\r\n\t\t * @param {String|jQuery} field The field name or field element\r\n\t\t * @param {String} validator The validator name\r\n\t\t * @param {String} option The option name\r\n\t\t * @param {String} value The value to set\r\n\t\t * @returns {BootstrapValidator}\r\n\t\t */\r\n\t\tupdateOption: function(field, validator, option, value) {\r\n\t\t\tif ('object' === typeof field) {\r\n\t\t\t\tfield = field.attr('data-bv-field');\r\n\t\t\t}\r\n\t\t\tif (this.options.fields[field] && this.options.fields[field].validators[validator]) {\r\n\t\t\t\tthis.options.fields[field].validators[validator][option] = value;\r\n\t\t\t\tthis.updateStatus(field, this.STATUS_NOT_VALIDATED, validator);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Add a new field\r\n\t\t *\r\n\t\t * @param {String|jQuery} field The field name or field element\r\n\t\t * @param {Object} [options] The validator rules\r\n\t\t * @returns {BootstrapValidator}\r\n\t\t */\r\n\t\taddField: function(field, options) {\r\n\t\t\tvar fields = $([]);\r\n\t\t\tswitch (typeof field) {\r\n\t\t\t\tcase 'object':\r\n\t\t\t\t\tfields = field;\r\n\t\t\t\t\tfield  = field.attr('data-bv-field') || field.attr('name');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'string':\r\n\t\t\t\t\tdelete this._cacheFields[field];\r\n\t\t\t\t\tfields = this.getFieldElements(field);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tfields.attr('data-bv-field', field);\r\n\r\n\t\t\tvar type  = fields.attr('type'),\r\n\t\t\t\ttotal = ('radio' === type || 'checkbox' === type) ? 1 : fields.length;\r\n\r\n\t\t\tfor (var i = 0; i < total; i++) {\r\n\t\t\t\tvar $field = fields.eq(i);\r\n\r\n\t\t\t\t// Try to parse the options from HTML attributes\r\n\t\t\t\tvar opts = this._parseOptions($field);\r\n\t\t\t\topts = (opts === null) ? options : $.extend(true, options, opts);\r\n\r\n\t\t\t\tthis.options.fields[field] = $.extend(true, this.options.fields[field], opts);\r\n\r\n\t\t\t\t// Update the cache\r\n\t\t\t\tthis._cacheFields[field] = this._cacheFields[field] ? this._cacheFields[field].add($field) : $field;\r\n\r\n\t\t\t\t// Init the element\r\n\t\t\t\tthis._initField(('checkbox' === type || 'radio' === type) ? field : $field);\r\n\t\t\t}\r\n\r\n\t\t\tthis.disableSubmitButtons(false);\r\n\t\t\t// Trigger an event\r\n\t\t\tthis.$form.trigger($.Event('added.field.bv'), {\r\n\t\t\t\tfield: field,\r\n\t\t\t\telement: fields,\r\n\t\t\t\toptions: this.options.fields[field]\r\n\t\t\t});\r\n\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Remove a given field\r\n\t\t *\r\n\t\t * @param {String|jQuery} field The field name or field element\r\n\t\t * @returns {BootstrapValidator}\r\n\t\t */\r\n\t\tremoveField: function(field) {\r\n\t\t\tvar fields = $([]);\r\n\t\t\tswitch (typeof field) {\r\n\t\t\t\tcase 'object':\r\n\t\t\t\t\tfields = field;\r\n\t\t\t\t\tfield  = field.attr('data-bv-field') || field.attr('name');\r\n\t\t\t\t\tfields.attr('data-bv-field', field);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'string':\r\n\t\t\t\t\tfields = this.getFieldElements(field);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (fields.length === 0) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\tvar type  = fields.attr('type'),\r\n\t\t\t\ttotal = ('radio' === type || 'checkbox' === type) ? 1 : fields.length;\r\n\r\n\t\t\tfor (var i = 0; i < total; i++) {\r\n\t\t\t\tvar $field = fields.eq(i);\r\n\r\n\t\t\t\t// Remove from the list of invalid fields\r\n\t\t\t\tthis.$invalidFields = this.$invalidFields.not($field);\r\n\r\n\t\t\t\t// Update the cache\r\n\t\t\t\tthis._cacheFields[field] = this._cacheFields[field].not($field);\r\n\t\t\t}\r\n\r\n\t\t\tif (!this._cacheFields[field] || this._cacheFields[field].length === 0) {\r\n\t\t\t\tdelete this.options.fields[field];\r\n\t\t\t}\r\n\t\t\tif ('checkbox' === type || 'radio' === type) {\r\n\t\t\t\tthis._initField(field);\r\n\t\t\t}\r\n\r\n\t\t\tthis.disableSubmitButtons(false);\r\n\t\t\t// Trigger an event\r\n\t\t\tthis.$form.trigger($.Event('removed.field.bv'), {\r\n\t\t\t\tfield: field,\r\n\t\t\t\telement: fields\r\n\t\t\t});\r\n\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Reset given field\r\n\t\t *\r\n\t\t * @param {String|jQuery} field The field name or field element\r\n\t\t * @param {Boolean} [resetValue] If true, the method resets field value to empty or remove checked/selected attribute (for radio/checkbox)\r\n\t\t * @returns {BootstrapValidator}\r\n\t\t */\r\n\t\tresetField: function(field, resetValue) {\r\n\t\t\tvar $fields = $([]);\r\n\t\t\tswitch (typeof field) {\r\n\t\t\t\tcase 'object':\r\n\t\t\t\t\t$fields = field;\r\n\t\t\t\t\tfield   = field.attr('data-bv-field');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'string':\r\n\t\t\t\t\t$fields = this.getFieldElements(field);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tvar total = $fields.length;\r\n\t\t\tif (this.options.fields[field]) {\r\n\t\t\t\tfor (var i = 0; i < total; i++) {\r\n\t\t\t\t\tfor (var validator in this.options.fields[field].validators) {\r\n\t\t\t\t\t\t$fields.eq(i).removeData('bv.dfs.' + validator);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Mark field as not validated yet\r\n\t\t\tthis.updateStatus(field, this.STATUS_NOT_VALIDATED);\r\n\r\n\t\t\tif (resetValue) {\r\n\t\t\t\tvar type = $fields.attr('type');\r\n\t\t\t\t('radio' === type || 'checkbox' === type) ? $fields.removeAttr('checked').removeAttr('selected') : $fields.val('');\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Reset the form\r\n\t\t *\r\n\t\t * @param {Boolean} [resetValue] If true, the method resets field value to empty or remove checked/selected attribute (for radio/checkbox)\r\n\t\t * @returns {BootstrapValidator}\r\n\t\t */\r\n\t\tresetForm: function(resetValue) {\r\n\t\t\tfor (var field in this.options.fields) {\r\n\t\t\t\tthis.resetField(field, resetValue);\r\n\t\t\t}\r\n\r\n\t\t\tthis.$invalidFields = $([]);\r\n\t\t\tthis.$submitButton  = null;\r\n\r\n\t\t\t// Enable submit buttons\r\n\t\t\tthis.disableSubmitButtons(false);\r\n\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Revalidate given field\r\n\t\t * It's used when you need to revalidate the field which its value is updated by other plugin\r\n\t\t *\r\n\t\t * @param {String|jQuery} field The field name of field element\r\n\t\t * @returns {BootstrapValidator}\r\n\t\t */\r\n\t\trevalidateField: function(field) {\r\n\t\t\tthis.updateStatus(field, this.STATUS_NOT_VALIDATED)\r\n\t\t\t\t.validateField(field);\r\n\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Enable/Disable all validators to given field\r\n\t\t *\r\n\t\t * @param {String} field The field name\r\n\t\t * @param {Boolean} enabled Enable/Disable field validators\r\n\t\t * @param {String} [validatorName] The validator name. If null, all validators will be enabled/disabled\r\n\t\t * @returns {BootstrapValidator}\r\n\t\t */\r\n\t\tenableFieldValidators: function(field, enabled, validatorName) {\r\n\t\t\tvar validators = this.options.fields[field].validators;\r\n\r\n\t\t\t// Enable/disable particular validator\r\n\t\t\tif (validatorName\r\n\t\t\t\t&& validators\r\n\t\t\t\t&& validators[validatorName] && validators[validatorName].enabled !== enabled)\r\n\t\t\t{\r\n\t\t\t\tthis.options.fields[field].validators[validatorName].enabled = enabled;\r\n\t\t\t\tthis.updateStatus(field, this.STATUS_NOT_VALIDATED, validatorName);\r\n\t\t\t}\r\n\t\t\t// Enable/disable all validators\r\n\t\t\telse if (!validatorName && this.options.fields[field].enabled !== enabled) {\r\n\t\t\t\tthis.options.fields[field].enabled = enabled;\r\n\t\t\t\tfor (var v in validators) {\r\n\t\t\t\t\tthis.enableFieldValidators(field, enabled, v);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Some validators have option which its value is dynamic.\r\n\t\t * For example, the zipCode validator has the country option which might be changed dynamically by a select element.\r\n\t\t *\r\n\t\t * @param {jQuery|String} field The field name or element\r\n\t\t * @param {String|Function} option The option which can be determined by:\r\n\t\t * - a string\r\n\t\t * - name of field which defines the value\r\n\t\t * - name of function which returns the value\r\n\t\t * - a function returns the value\r\n\t\t *\r\n\t\t * The callback function has the format of\r\n\t\t *      callback: function(value, validator, $field) {\r\n         *          // value is the value of field\r\n         *          // validator is the BootstrapValidator instance\r\n         *          // $field is the field element\r\n         *      }\r\n\t\t *\r\n\t\t * @returns {String}\r\n\t\t */\r\n\t\tgetDynamicOption: function(field, option) {\r\n\t\t\tvar $field = ('string' === typeof field) ? this.getFieldElements(field) : field,\r\n\t\t\t\tvalue  = $field.val();\r\n\r\n\t\t\t// Option can be determined by\r\n\t\t\t// ... a function\r\n\t\t\tif ('function' === typeof option) {\r\n\t\t\t\treturn $.fn.bootstrapValidator.helpers.call(option, [value, this, $field]);\r\n\t\t\t}\r\n\t\t\t// ... value of other field\r\n\t\t\telse if ('string' === typeof option) {\r\n\t\t\t\tvar $f = this.getFieldElements(option);\r\n\t\t\t\tif ($f.length) {\r\n\t\t\t\t\treturn $f.val();\r\n\t\t\t\t}\r\n\t\t\t\t// ... return value of callback\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn $.fn.bootstrapValidator.helpers.call(option, [value, this, $field]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Destroy the plugin\r\n\t\t * It will remove all error messages, feedback icons and turn off the events\r\n\t\t */\r\n\t\tdestroy: function() {\r\n\t\t\tvar field, fields, $field, validator, $icon, container, group;\r\n\t\t\tfor (field in this.options.fields) {\r\n\t\t\t\tfields    = this.getFieldElements(field);\r\n\t\t\t\tcontainer = this.options.fields[field].container || this.options.container,\r\n\t\t\t\t\tgroup     = this.options.fields[field].group || this.options.group;\r\n\t\t\t\tfor (var i = 0; i < fields.length; i++) {\r\n\t\t\t\t\t$field = fields.eq(i);\r\n\t\t\t\t\t$field\r\n\t\t\t\t\t\t// Remove all error messages\r\n\t\t\t\t\t\t.data('bv.messages')\r\n\t\t\t\t\t\t.find('.help-block[data-bv-validator][data-bv-for=\"' + field + '\"]').remove().end()\r\n\t\t\t\t\t\t.end()\r\n\t\t\t\t\t\t.removeData('bv.messages')\r\n\t\t\t\t\t\t// Remove feedback classes\r\n\t\t\t\t\t\t.parents(group)\r\n\t\t\t\t\t\t.removeClass('has-feedback has-error has-success')\r\n\t\t\t\t\t\t.end()\r\n\t\t\t\t\t\t// Turn off events\r\n\t\t\t\t\t\t.off('.bv')\r\n\t\t\t\t\t\t.removeAttr('data-bv-field');\r\n\r\n\t\t\t\t\t// Remove feedback icons, tooltip/popover container\r\n\t\t\t\t\t$icon = $field.parents(group).find('i[data-bv-icon-for=\"' + field + '\"]');\r\n\t\t\t\t\tif ($icon) {\r\n\t\t\t\t\t\tswitch (container) {\r\n\t\t\t\t\t\t\tcase 'tooltip':\r\n\t\t\t\t\t\t\t\t$icon.tooltip('destroy').remove();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 'popover':\r\n\t\t\t\t\t\t\t\t$icon.popover('destroy').remove();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t$icon.remove();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (validator in this.options.fields[field].validators) {\r\n\t\t\t\t\t\tif ($field.data('bv.dfs.' + validator)) {\r\n\t\t\t\t\t\t\t$field.data('bv.dfs.' + validator).reject();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t$field.removeData('bv.result.' + validator).removeData('bv.dfs.' + validator);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Enable submit buttons\r\n\t\t\tthis.disableSubmitButtons(false);\r\n\r\n\t\t\tthis.$form\r\n\t\t\t\t.removeClass(this.options.elementClass)\r\n\t\t\t\t.off('.bv')\r\n\t\t\t\t.removeData('bootstrapValidator')\r\n\t\t\t\t// Remove generated hidden elements\r\n\t\t\t\t.find('[data-bv-submit-hidden]').remove();\r\n\t\t}\r\n\t};\r\n\r\n\t// Plugin definition\r\n\t$.fn.bootstrapValidator = function(option) {\r\n\t\tvar params = arguments;\r\n\t\treturn this.each(function() {\r\n\t\t\tvar $this   = $(this),\r\n\t\t\t\tdata    = $this.data('bootstrapValidator'),\r\n\t\t\t\toptions = 'object' === typeof option && option;\r\n\t\t\tif (!data) {\r\n\t\t\t\tdata = new BootstrapValidator(this, options);\r\n\t\t\t\t$this.data('bootstrapValidator', data);\r\n\t\t\t}\r\n\r\n\t\t\t// Allow to call plugin method\r\n\t\t\tif ('string' === typeof option) {\r\n\t\t\t\tdata[option].apply(data, Array.prototype.slice.call(params, 1));\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\t// The default options\r\n\t$.fn.bootstrapValidator.DEFAULT_OPTIONS = {\r\n\t\t// The form CSS class\r\n\t\telementClass: 'bv-form',\r\n\r\n\t\t// Default invalid message\r\n\t\tmessage: 'This value is not valid',\r\n\r\n\t\t// The CSS selector for indicating the element consists the field\r\n\t\t// By default, each field is placed inside the <div class=\"form-group\"></div>\r\n\t\t// You should adjust this option if your form group consists of many fields which not all of them need to be validated\r\n\t\tgroup: '.form-group',\r\n\r\n\t\t//The error messages container. It can be:\r\n\t\t// - 'tooltip' if you want to use Bootstrap tooltip to show error messages\r\n\t\t// - 'popover' if you want to use Bootstrap popover to show error messages\r\n\t\t// - a CSS selector indicating the container\r\n\t\t// In the first two cases, since the tooltip/popover should be small enough, the plugin only shows only one error message\r\n\t\t// You also can define the message container for particular field\r\n\t\tcontainer: null,\r\n\r\n\t\t// The field will not be live validated if its length is less than this number of characters\r\n\t\tthreshold: null,\r\n\r\n\t\t// Indicate fields which won't be validated\r\n\t\t// By default, the plugin will not validate the following kind of fields:\r\n\t\t// - disabled\r\n\t\t// - hidden\r\n\t\t// - invisible\r\n\t\t//\r\n\t\t// The setting consists of jQuery filters. Accept 3 formats:\r\n\t\t// - A string. Use a comma to separate filter\r\n\t\t// - An array. Each element is a filter\r\n\t\t// - An array. Each element can be a callback function\r\n\t\t//      function($field, validator) {\r\n\t\t//          $field is jQuery object representing the field element\r\n\t\t//          validator is the BootstrapValidator instance\r\n\t\t//          return true or false;\r\n\t\t//      }\r\n\t\t//\r\n\t\t// The 3 following settings are equivalent:\r\n\t\t//\r\n\t\t// 1) ':disabled, :hidden, :not(:visible)'\r\n\t\t// 2) [':disabled', ':hidden', ':not(:visible)']\r\n\t\t// 3) [':disabled', ':hidden', function($field) {\r\n\t\t//        return !$field.is(':visible');\r\n\t\t//    }]\r\n\t\texcluded: [':disabled', ':hidden', ':not(:visible)'],\r\n\r\n\t\t// Shows ok/error/loading icons based on the field validity.\r\n\t\t// This feature requires Bootstrap v3.1.0 or later (http://getbootstrap.com/css/#forms-control-validation).\r\n\t\t// Since Bootstrap doesn't provide any methods to know its version, this option cannot be on/off automatically.\r\n\t\t// In other word, to use this feature you have to upgrade your Bootstrap to v3.1.0 or later.\r\n\t\t//\r\n\t\t// Examples:\r\n\t\t// - Use Glyphicons icons:\r\n\t\t//  feedbackIcons: {\r\n\t\t//      valid: 'glyphicon glyphicon-ok',\r\n\t\t//      invalid: 'glyphicon glyphicon-remove',\r\n\t\t//      validating: 'glyphicon glyphicon-refresh'\r\n\t\t//  }\r\n\t\t// - Use FontAwesome icons:\r\n\t\t//  feedbackIcons: {\r\n\t\t//      valid: 'fa fa-check',\r\n\t\t//      invalid: 'fa fa-times',\r\n\t\t//      validating: 'fa fa-refresh'\r\n\t\t//  }\r\n\t\tfeedbackIcons: {\r\n\t\t\tvalid:      null,\r\n\t\t\tinvalid:    null,\r\n\t\t\tvalidating: null\r\n\t\t},\r\n\r\n\t\t// The submit buttons selector\r\n\t\t// These buttons will be disabled to prevent the valid form from multiple submissions\r\n\t\tsubmitButtons: '[type=\"submit\"]',\r\n\r\n\t\t// Live validating option\r\n\t\t// Can be one of 3 values:\r\n\t\t// - enabled: The plugin validates fields as soon as they are changed\r\n\t\t// - disabled: Disable the live validating. The error messages are only shown after the form is submitted\r\n\t\t// - submitted: The live validating is enabled after the form is submitted\r\n\t\tlive: 'enabled',\r\n\r\n\t\t// Map the field name with validator rules\r\n\t\tfields: null\r\n\t};\r\n\r\n\t// Available validators\r\n\t$.fn.bootstrapValidator.validators  = {};\r\n\r\n\t// i18n\r\n\t$.fn.bootstrapValidator.i18n        = {};\r\n\r\n\t$.fn.bootstrapValidator.Constructor = BootstrapValidator;\r\n\r\n\t// Helper methods, which can be used in validator class\r\n\t$.fn.bootstrapValidator.helpers = {\r\n\t\t/**\r\n\t\t * Execute a callback function\r\n\t\t *\r\n\t\t * @param {String|Function} functionName Can be\r\n\t\t * - name of global function\r\n\t\t * - name of namespace function (such as A.B.C)\r\n\t\t * - a function\r\n\t\t * @param {Array} args The callback arguments\r\n\t\t */\r\n\t\tcall: function(functionName, args) {\r\n\t\t\tif ('function' === typeof functionName) {\r\n\t\t\t\treturn functionName.apply(this, args);\r\n\t\t\t} else if ('string' === typeof functionName) {\r\n\t\t\t\tif ('()' === functionName.substring(functionName.length - 2)) {\r\n\t\t\t\t\tfunctionName = functionName.substring(0, functionName.length - 2);\r\n\t\t\t\t}\r\n\t\t\t\tvar ns      = functionName.split('.'),\r\n\t\t\t\t\tfunc    = ns.pop(),\r\n\t\t\t\t\tcontext = window;\r\n\t\t\t\tfor (var i = 0; i < ns.length; i++) {\r\n\t\t\t\t\tcontext = context[ns[i]];\r\n\t\t\t\t}\r\n\t\t\t\treturn context[func].apply(this, args);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Format a string\r\n\t\t * It's used to format the error message\r\n\t\t * format('The field must between %s and %s', [10, 20]) = 'The field must between 10 and 20'\r\n\t\t *\r\n\t\t * @param {String} message\r\n\t\t * @param {Array} parameters\r\n\t\t * @returns {String}\r\n\t\t */\r\n\t\tformat: function(message, parameters) {\r\n\t\t\tif (!$.isArray(parameters)) {\r\n\t\t\t\tparameters = [parameters];\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i in parameters) {\r\n\t\t\t\tmessage = message.replace('%s', parameters[i]);\r\n\t\t\t}\r\n\r\n\t\t\treturn message;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate a date\r\n\t\t *\r\n\t\t * @param {Number} year The full year in 4 digits\r\n\t\t * @param {Number} month The month number\r\n\t\t * @param {Number} day The day number\r\n\t\t * @param {Boolean} [notInFuture] If true, the date must not be in the future\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tdate: function(year, month, day, notInFuture) {\r\n\t\t\tif (isNaN(year) || isNaN(month) || isNaN(day)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tday   = parseInt(day, 10);\r\n\t\t\tmonth = parseInt(month, 10);\r\n\t\t\tyear  = parseInt(year, 10);\r\n\r\n\t\t\tif (year < 1000 || year > 9999 || month <= 0 || month > 12) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar numDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\t\t\t// Update the number of days in Feb of leap year\r\n\t\t\tif (year % 400 === 0 || (year % 100 !== 0 && year % 4 === 0)) {\r\n\t\t\t\tnumDays[1] = 29;\r\n\t\t\t}\r\n\r\n\t\t\t// Check the day\r\n\t\t\tif (day <= 0 || day > numDays[month - 1]) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (notInFuture === true) {\r\n\t\t\t\tvar currentDate  = new Date(),\r\n\t\t\t\t\tcurrentYear  = currentDate.getFullYear(),\r\n\t\t\t\t\tcurrentMonth = currentDate.getMonth(),\r\n\t\t\t\t\tcurrentDay   = currentDate.getDate();\r\n\t\t\t\treturn (year < currentYear\r\n\t\t\t\t\t|| (year === currentYear && month - 1 < currentMonth)\r\n\t\t\t\t\t|| (year === currentYear && month - 1 === currentMonth && day < currentDay));\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Implement Luhn validation algorithm\r\n\t\t * Credit to https://gist.github.com/ShirtlessKirk/2134376\r\n\t\t *\r\n\t\t * @see http://en.wikipedia.org/wiki/Luhn\r\n\t\t * @param {String} value\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tluhn: function(value) {\r\n\t\t\tvar length  = value.length,\r\n\t\t\t\tmul     = 0,\r\n\t\t\t\tprodArr = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [0, 2, 4, 6, 8, 1, 3, 5, 7, 9]],\r\n\t\t\t\tsum     = 0;\r\n\r\n\t\t\twhile (length--) {\r\n\t\t\t\tsum += prodArr[mul][parseInt(value.charAt(length), 10)];\r\n\t\t\t\tmul ^= 1;\r\n\t\t\t}\r\n\r\n\t\t\treturn (sum % 10 === 0 && sum > 0);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Implement modulus 11, 10 (ISO 7064) algorithm\r\n\t\t *\r\n\t\t * @param {String} value\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tmod11And10: function(value) {\r\n\t\t\tvar check  = 5,\r\n\t\t\t\tlength = value.length;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tcheck = (((check || 10) * 2) % 11 + parseInt(value.charAt(i), 10)) % 10;\r\n\t\t\t}\r\n\t\t\treturn (check === 1);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Implements Mod 37, 36 (ISO 7064) algorithm\r\n\t\t * Usages:\r\n\t\t * mod37And36('A12425GABC1234002M')\r\n\t\t * mod37And36('002006673085', '0123456789')\r\n\t\t *\r\n\t\t * @param {String} value\r\n\t\t * @param {String} [alphabet]\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tmod37And36: function(value, alphabet) {\r\n\t\t\talphabet = alphabet || '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n\t\t\tvar modulus = alphabet.length,\r\n\t\t\t\tlength  = value.length,\r\n\t\t\t\tcheck   = Math.floor(modulus / 2);\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tcheck = (((check || modulus) * 2) % (modulus + 1) + alphabet.indexOf(value.charAt(i))) % modulus;\r\n\t\t\t}\r\n\t\t\treturn (check === 1);\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.base64 = $.extend($.fn.bootstrapValidator.i18n.base64 || {}, {\r\n\t\t'default': 'Please enter a valid base 64 encoded'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.base64 = {\r\n\t\t/**\r\n\t\t * Return true if the input value is a base 64 encoded string.\r\n\t\t *\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Can consist of the following keys:\r\n\t\t * - message: The invalid message\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\treturn /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$/.test(value);\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.between = $.extend($.fn.bootstrapValidator.i18n.between || {}, {\r\n\t\t'default': 'Please enter a value between %s and %s',\r\n\t\tnotInclusive: 'Please enter a value between %s and %s strictly'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.between = {\r\n\t\thtml5Attributes: {\r\n\t\t\tmessage: 'message',\r\n\t\t\tmin: 'min',\r\n\t\t\tmax: 'max',\r\n\t\t\tinclusive: 'inclusive'\r\n\t\t},\r\n\r\n\t\tenableByHtml5: function($field) {\r\n\t\t\tif ('range' === $field.attr('type')) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tmin: $field.attr('min'),\r\n\t\t\t\t\tmax: $field.attr('max')\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Return true if the input value is between (strictly or not) two given numbers\r\n\t\t *\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Can consist of the following keys:\r\n\t\t * - min\r\n\t\t * - max\r\n\t\t *\r\n\t\t * The min, max keys define the number which the field value compares to. min, max can be\r\n\t\t *      - A number\r\n\t\t *      - Name of field which its value defines the number\r\n\t\t *      - Name of callback function that returns the number\r\n\t\t *      - A callback function that returns the number\r\n\t\t *\r\n\t\t * - inclusive [optional]: Can be true or false. Default is true\r\n\t\t * - message: The invalid message\r\n\t\t * @returns {Boolean|Object}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tvar min = $.isNumeric(options.min) ? options.min : validator.getDynamicOption($field, options.min),\r\n\t\t\t\tmax = $.isNumeric(options.max) ? options.max : validator.getDynamicOption($field, options.max);\r\n\r\n\t\t\tvalue = parseFloat(value);\r\n\t\t\treturn (options.inclusive === true || options.inclusive === undefined)\r\n\t\t\t\t? {\r\n\t\t\t\tvalid: value >= min && value <= max,\r\n\t\t\t\tmessage: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.between['default'], [min, max])\r\n\t\t\t}\r\n\t\t\t\t: {\r\n\t\t\t\tvalid: value > min  && value <  max,\r\n\t\t\t\tmessage: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.between.notInclusive, [min, max])\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.callback = $.extend($.fn.bootstrapValidator.i18n.callback || {}, {\r\n\t\t'default': 'Please enter a valid value'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.callback = {\r\n\t\thtml5Attributes: {\r\n\t\t\tmessage: 'message',\r\n\t\t\tcallback: 'callback'\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Return result from the callback method\r\n\t\t *\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Can consist of the following keys:\r\n\t\t * - callback: The callback method that passes 2 parameters:\r\n\t\t *      callback: function(fieldValue, validator, $field) {\r\n         *          // fieldValue is the value of field\r\n         *          // validator is instance of BootstrapValidator\r\n         *          // $field is the field element\r\n         *      }\r\n\t\t * - message: The invalid message\r\n\t\t * @returns {Boolean|Deferred}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\r\n\t\t\tif (options.callback) {\r\n\t\t\t\tvar dfd      = new $.Deferred(),\r\n\t\t\t\t\tresponse = $.fn.bootstrapValidator.helpers.call(options.callback, [value, validator, $field]);\r\n\t\t\t\tdfd.resolve($field, 'callback', 'boolean' === typeof response ? response : response.valid, 'object' === typeof response && response.message ? response.message : null);\r\n\t\t\t\treturn dfd;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.choice = $.extend($.fn.bootstrapValidator.i18n.choice || {}, {\r\n\t\t'default': 'Please enter a valid value',\r\n\t\tless: 'Please choose %s options at minimum',\r\n\t\tmore: 'Please choose %s options at maximum',\r\n\t\tbetween: 'Please choose %s - %s options'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.choice = {\r\n\t\thtml5Attributes: {\r\n\t\t\tmessage: 'message',\r\n\t\t\tmin: 'min',\r\n\t\t\tmax: 'max'\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Check if the number of checked boxes are less or more than a given number\r\n\t\t *\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Consists of following keys:\r\n\t\t * - min\r\n\t\t * - max\r\n\t\t *\r\n\t\t * At least one of two keys is required\r\n\t\t * The min, max keys define the number which the field value compares to. min, max can be\r\n\t\t *      - A number\r\n\t\t *      - Name of field which its value defines the number\r\n\t\t *      - Name of callback function that returns the number\r\n\t\t *      - A callback function that returns the number\r\n\t\t *\r\n\t\t * - message: The invalid message\r\n\t\t * @returns {Object}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar numChoices = $field.is('select')\r\n\t\t\t\t\t? validator.getFieldElements($field.attr('data-bv-field')).find('option').filter(':selected').length\r\n\t\t\t\t\t: validator.getFieldElements($field.attr('data-bv-field')).filter(':checked').length,\r\n\t\t\t\tmin        = options.min ? ($.isNumeric(options.min) ? options.min : validator.getDynamicOption($field, options.min)) : null,\r\n\t\t\t\tmax        = options.max ? ($.isNumeric(options.max) ? options.max : validator.getDynamicOption($field, options.max)) : null,\r\n\t\t\t\tisValid    = true,\r\n\t\t\t\tmessage    = options.message || $.fn.bootstrapValidator.i18n.choice['default'];\r\n\r\n\t\t\tif ((min && numChoices < parseInt(min, 10)) || (max && numChoices > parseInt(max, 10))) {\r\n\t\t\t\tisValid = false;\r\n\t\t\t}\r\n\r\n\t\t\tswitch (true) {\r\n\t\t\t\tcase (!!min && !!max):\r\n\t\t\t\t\tmessage = $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.choice.between, [parseInt(min, 10), parseInt(max, 10)]);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase (!!min):\r\n\t\t\t\t\tmessage = $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.choice.less, parseInt(min, 10));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase (!!max):\r\n\t\t\t\t\tmessage = $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.choice.more, parseInt(max, 10));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\treturn { valid: isValid, message: message };\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.creditCard = $.extend($.fn.bootstrapValidator.i18n.creditCard || {}, {\r\n\t\t'default': 'Please enter a valid credit card number'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.creditCard = {\r\n\t\t/**\r\n\t\t * Return true if the input value is valid credit card number\r\n\t\t * Based on https://gist.github.com/DiegoSalazar/4075533\r\n\t\t *\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} [options] Can consist of the following key:\r\n\t\t * - message: The invalid message\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t// Accept only digits, dashes or spaces\r\n\t\t\tif (/[^0-9-\\s]+/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvalue = value.replace(/\\D/g, '');\r\n\r\n\t\t\tif (!$.fn.bootstrapValidator.helpers.luhn(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// Validate the card number based on prefix (IIN ranges) and length\r\n\t\t\tvar cards = {\r\n\t\t\t\tAMERICAN_EXPRESS: {\r\n\t\t\t\t\tlength: [15],\r\n\t\t\t\t\tprefix: ['34', '37']\r\n\t\t\t\t},\r\n\t\t\t\tDINERS_CLUB: {\r\n\t\t\t\t\tlength: [14],\r\n\t\t\t\t\tprefix: ['300', '301', '302', '303', '304', '305', '36']\r\n\t\t\t\t},\r\n\t\t\t\tDINERS_CLUB_US: {\r\n\t\t\t\t\tlength: [16],\r\n\t\t\t\t\tprefix: ['54', '55']\r\n\t\t\t\t},\r\n\t\t\t\tDISCOVER: {\r\n\t\t\t\t\tlength: [16],\r\n\t\t\t\t\tprefix: ['6011', '622126', '622127', '622128', '622129', '62213',\r\n\t\t\t\t\t\t'62214', '62215', '62216', '62217', '62218', '62219',\r\n\t\t\t\t\t\t'6222', '6223', '6224', '6225', '6226', '6227', '6228',\r\n\t\t\t\t\t\t'62290', '62291', '622920', '622921', '622922', '622923',\r\n\t\t\t\t\t\t'622924', '622925', '644', '645', '646', '647', '648',\r\n\t\t\t\t\t\t'649', '65']\r\n\t\t\t\t},\r\n\t\t\t\tJCB: {\r\n\t\t\t\t\tlength: [16],\r\n\t\t\t\t\tprefix: ['3528', '3529', '353', '354', '355', '356', '357', '358']\r\n\t\t\t\t},\r\n\t\t\t\tLASER: {\r\n\t\t\t\t\tlength: [16, 17, 18, 19],\r\n\t\t\t\t\tprefix: ['6304', '6706', '6771', '6709']\r\n\t\t\t\t},\r\n\t\t\t\tMAESTRO: {\r\n\t\t\t\t\tlength: [12, 13, 14, 15, 16, 17, 18, 19],\r\n\t\t\t\t\tprefix: ['5018', '5020', '5038', '6304', '6759', '6761', '6762', '6763', '6764', '6765', '6766']\r\n\t\t\t\t},\r\n\t\t\t\tMASTERCARD: {\r\n\t\t\t\t\tlength: [16],\r\n\t\t\t\t\tprefix: ['51', '52', '53', '54', '55']\r\n\t\t\t\t},\r\n\t\t\t\tSOLO: {\r\n\t\t\t\t\tlength: [16, 18, 19],\r\n\t\t\t\t\tprefix: ['6334', '6767']\r\n\t\t\t\t},\r\n\t\t\t\tUNIONPAY: {\r\n\t\t\t\t\tlength: [16, 17, 18, 19],\r\n\t\t\t\t\tprefix: ['622126', '622127', '622128', '622129', '62213', '62214',\r\n\t\t\t\t\t\t'62215', '62216', '62217', '62218', '62219', '6222', '6223',\r\n\t\t\t\t\t\t'6224', '6225', '6226', '6227', '6228', '62290', '62291',\r\n\t\t\t\t\t\t'622920', '622921', '622922', '622923', '622924', '622925']\r\n\t\t\t\t},\r\n\t\t\t\tVISA: {\r\n\t\t\t\t\tlength: [16],\r\n\t\t\t\t\tprefix: ['4']\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tvar type, i;\r\n\t\t\tfor (type in cards) {\r\n\t\t\t\tfor (i in cards[type].prefix) {\r\n\t\t\t\t\tif (value.substr(0, cards[type].prefix[i].length) === cards[type].prefix[i]     // Check the prefix\r\n\t\t\t\t\t\t&& $.inArray(value.length, cards[type].length) !== -1)                      // and length\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.cusip = $.extend($.fn.bootstrapValidator.i18n.cusip || {}, {\r\n\t\t'default': 'Please enter a valid CUSIP number'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.cusip = {\r\n\t\t/**\r\n\t\t * Validate a CUSIP\r\n\t\t * Examples:\r\n\t\t * - Valid: 037833100, 931142103, 14149YAR8, 126650BG6\r\n\t\t * - Invalid: 31430F200, 022615AC2\r\n\t\t *\r\n\t\t * @see http://en.wikipedia.org/wiki/CUSIP\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} [options] Can consist of the following keys:\r\n\t\t * - message: The invalid message\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = value.toUpperCase();\r\n\t\t\tif (!/^[0-9A-Z]{9}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvar converted = $.map(value.split(''), function(item) {\r\n\t\t\t\t\tvar code = item.charCodeAt(0);\r\n\t\t\t\t\treturn (code >= 'A'.charCodeAt(0) && code <= 'Z'.charCodeAt(0))\r\n\t\t\t\t\t\t// Replace A, B, C, ..., Z with 10, 11, ..., 35\r\n\t\t\t\t\t\t? (code - 'A'.charCodeAt(0) + 10)\r\n\t\t\t\t\t\t: item;\r\n\t\t\t\t}),\r\n\t\t\t\tlength    = converted.length,\r\n\t\t\t\tsum       = 0;\r\n\t\t\tfor (var i = 0; i < length - 1; i++) {\r\n\t\t\t\tvar num = parseInt(converted[i], 10);\r\n\t\t\t\tif (i % 2 !== 0) {\r\n\t\t\t\t\tnum *= 2;\r\n\t\t\t\t}\r\n\t\t\t\tif (num > 9) {\r\n\t\t\t\t\tnum -= 9;\r\n\t\t\t\t}\r\n\t\t\t\tsum += num;\r\n\t\t\t}\r\n\r\n\t\t\tsum = (10 - (sum % 10)) % 10;\r\n\t\t\treturn sum === converted[length - 1];\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.cvv = $.extend($.fn.bootstrapValidator.i18n.cvv || {}, {\r\n\t\t'default': 'Please enter a valid CVV number'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.cvv = {\r\n\t\thtml5Attributes: {\r\n\t\t\tmessage: 'message',\r\n\t\t\tccfield: 'creditCardField'\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Return true if the input value is a valid CVV number.\r\n\t\t *\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Can consist of the following keys:\r\n\t\t * - creditCardField: The credit card number field. It can be null\r\n\t\t * - message: The invalid message\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tif (!/^[0-9]{3,4}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (!options.creditCardField) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t// Get the credit card number\r\n\t\t\tvar creditCard = validator.getFieldElements(options.creditCardField).val();\r\n\t\t\tif (creditCard === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tcreditCard = creditCard.replace(/\\D/g, '');\r\n\r\n\t\t\t// Supported credit card types\r\n\t\t\tvar cards = {\r\n\t\t\t\tAMERICAN_EXPRESS: {\r\n\t\t\t\t\tlength: [15],\r\n\t\t\t\t\tprefix: ['34', '37']\r\n\t\t\t\t},\r\n\t\t\t\tDINERS_CLUB: {\r\n\t\t\t\t\tlength: [14],\r\n\t\t\t\t\tprefix: ['300', '301', '302', '303', '304', '305', '36']\r\n\t\t\t\t},\r\n\t\t\t\tDINERS_CLUB_US: {\r\n\t\t\t\t\tlength: [16],\r\n\t\t\t\t\tprefix: ['54', '55']\r\n\t\t\t\t},\r\n\t\t\t\tDISCOVER: {\r\n\t\t\t\t\tlength: [16],\r\n\t\t\t\t\tprefix: ['6011', '622126', '622127', '622128', '622129', '62213',\r\n\t\t\t\t\t\t'62214', '62215', '62216', '62217', '62218', '62219',\r\n\t\t\t\t\t\t'6222', '6223', '6224', '6225', '6226', '6227', '6228',\r\n\t\t\t\t\t\t'62290', '62291', '622920', '622921', '622922', '622923',\r\n\t\t\t\t\t\t'622924', '622925', '644', '645', '646', '647', '648',\r\n\t\t\t\t\t\t'649', '65']\r\n\t\t\t\t},\r\n\t\t\t\tJCB: {\r\n\t\t\t\t\tlength: [16],\r\n\t\t\t\t\tprefix: ['3528', '3529', '353', '354', '355', '356', '357', '358']\r\n\t\t\t\t},\r\n\t\t\t\tLASER: {\r\n\t\t\t\t\tlength: [16, 17, 18, 19],\r\n\t\t\t\t\tprefix: ['6304', '6706', '6771', '6709']\r\n\t\t\t\t},\r\n\t\t\t\tMAESTRO: {\r\n\t\t\t\t\tlength: [12, 13, 14, 15, 16, 17, 18, 19],\r\n\t\t\t\t\tprefix: ['5018', '5020', '5038', '6304', '6759', '6761', '6762', '6763', '6764', '6765', '6766']\r\n\t\t\t\t},\r\n\t\t\t\tMASTERCARD: {\r\n\t\t\t\t\tlength: [16],\r\n\t\t\t\t\tprefix: ['51', '52', '53', '54', '55']\r\n\t\t\t\t},\r\n\t\t\t\tSOLO: {\r\n\t\t\t\t\tlength: [16, 18, 19],\r\n\t\t\t\t\tprefix: ['6334', '6767']\r\n\t\t\t\t},\r\n\t\t\t\tUNIONPAY: {\r\n\t\t\t\t\tlength: [16, 17, 18, 19],\r\n\t\t\t\t\tprefix: ['622126', '622127', '622128', '622129', '62213', '62214',\r\n\t\t\t\t\t\t'62215', '62216', '62217', '62218', '62219', '6222', '6223',\r\n\t\t\t\t\t\t'6224', '6225', '6226', '6227', '6228', '62290', '62291',\r\n\t\t\t\t\t\t'622920', '622921', '622922', '622923', '622924', '622925']\r\n\t\t\t\t},\r\n\t\t\t\tVISA: {\r\n\t\t\t\t\tlength: [16],\r\n\t\t\t\t\tprefix: ['4']\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tvar type, i, creditCardType = null;\r\n\t\t\tfor (type in cards) {\r\n\t\t\t\tfor (i in cards[type].prefix) {\r\n\t\t\t\t\tif (creditCard.substr(0, cards[type].prefix[i].length) === cards[type].prefix[i]    // Check the prefix\r\n\t\t\t\t\t\t&& $.inArray(creditCard.length, cards[type].length) !== -1)                     // and length\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcreditCardType = type;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn (creditCardType === null)\r\n\t\t\t\t? false\r\n\t\t\t\t: (('AMERICAN_EXPRESS' === creditCardType) ? (value.length === 4) : (value.length === 3));\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.date = $.extend($.fn.bootstrapValidator.i18n.date || {}, {\r\n\t\t'default': 'Please enter a valid date'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.date = {\r\n\t\thtml5Attributes: {\r\n\t\t\tmessage: 'message',\r\n\t\t\tformat: 'format',\r\n\t\t\tseparator: 'separator'\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Return true if the input value is valid date\r\n\t\t *\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Can consist of the following keys:\r\n\t\t * - message: The invalid message\r\n\t\t * - separator: Use to separate the date, month, and year.\r\n\t\t * By default, it is /\r\n\t\t * - format: The date format. Default is MM/DD/YYYY\r\n\t\t * The format can be:\r\n\t\t *\r\n\t\t * i) date: Consist of DD, MM, YYYY parts which are separated by the separator option\r\n\t\t * ii) date and time:\r\n\t\t * The time can consist of h, m, s parts which are separated by :\r\n\t\t * ii) date, time and A (indicating AM or PM)\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\toptions.format = options.format || 'MM/DD/YYYY';\r\n\r\n\t\t\tvar formats    = options.format.split(' '),\r\n\t\t\t\tdateFormat = formats[0],\r\n\t\t\t\ttimeFormat = (formats.length > 1) ? formats[1] : null,\r\n\t\t\t\tamOrPm     = (formats.length > 2) ? formats[2] : null,\r\n\t\t\t\tsections   = value.split(' '),\r\n\t\t\t\tdate       = sections[0],\r\n\t\t\t\ttime       = (sections.length > 1) ? sections[1] : null;\r\n\r\n\t\t\tif (formats.length !== sections.length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// Determine the separator\r\n\t\t\tvar separator = options.separator;\r\n\t\t\tif (!separator) {\r\n\t\t\t\tseparator = (date.indexOf('/') !== -1) ? '/' : ((date.indexOf('-') !== -1) ? '-' : null);\r\n\t\t\t}\r\n\t\t\tif (separator === null || date.indexOf(separator) === -1) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// Determine the date\r\n\t\t\tdate       = date.split(separator);\r\n\t\t\tdateFormat = dateFormat.split(separator);\r\n\t\t\tif (date.length !== dateFormat.length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvar year  = date[$.inArray('YYYY', dateFormat)],\r\n\t\t\t\tmonth = date[$.inArray('MM', dateFormat)],\r\n\t\t\t\tday   = date[$.inArray('DD', dateFormat)];\r\n\r\n\t\t\tif (!year || !month || !day) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// Determine the time\r\n\t\t\tvar minutes = null, hours = null, seconds = null;\r\n\t\t\tif (timeFormat) {\r\n\t\t\t\ttimeFormat = timeFormat.split(':');\r\n\t\t\t\ttime       = time.split(':');\r\n\r\n\t\t\t\tif (timeFormat.length !== time.length) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\thours   = time.length > 0 ? time[0] : null;\r\n\t\t\t\tminutes = time.length > 1 ? time[1] : null;\r\n\t\t\t\tseconds = time.length > 2 ? time[2] : null;\r\n\r\n\t\t\t\t// Validate seconds\r\n\t\t\t\tif (seconds) {\r\n\t\t\t\t\tseconds = parseInt(seconds, 10);\r\n\t\t\t\t\tif (isNaN(seconds) || seconds < 0 || seconds > 60) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Validate hours\r\n\t\t\t\tif (hours) {\r\n\t\t\t\t\thours = parseInt(hours, 10);\r\n\t\t\t\t\tif (isNaN(hours) || hours < 0 || hours >= 24 || (amOrPm && hours > 12)) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Validate minutes\r\n\t\t\t\tif (minutes) {\r\n\t\t\t\t\tminutes = parseInt(minutes, 10);\r\n\t\t\t\t\tif (isNaN(minutes) || minutes < 0 || minutes > 59) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Validate day, month, and year\r\n\t\t\treturn $.fn.bootstrapValidator.helpers.date(year, month, day);\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.different = $.extend($.fn.bootstrapValidator.i18n.different || {}, {\r\n\t\t'default': 'Please enter a different value'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.different = {\r\n\t\thtml5Attributes: {\r\n\t\t\tmessage: 'message',\r\n\t\t\tfield: 'field'\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Return true if the input value is different with given field's value\r\n\t\t *\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Consists of the following key:\r\n\t\t * - field: The name of field that will be used to compare with current one\r\n\t\t * - message: The invalid message\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tvar compareWith = validator.getFieldElements(options.field);\r\n\t\t\tif (compareWith === null) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tif (value !== compareWith.val()) {\r\n\t\t\t\tvalidator.updateStatus(options.field, validator.STATUS_VALID, 'different');\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.digits = $.extend($.fn.bootstrapValidator.i18n.digits || {}, {\r\n\t\t'default': 'Please enter only digits'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.digits = {\r\n\t\t/**\r\n\t\t * Return true if the input value contains digits only\r\n\t\t *\r\n\t\t * @param {BootstrapValidator} validator Validate plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} [options]\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\treturn /^\\d+$/.test(value);\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.ean = $.extend($.fn.bootstrapValidator.i18n.ean || {}, {\r\n\t\t'default': 'Please enter a valid EAN number'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.ean = {\r\n\t\t/**\r\n\t\t * Validate EAN (International Article Number)\r\n\t\t * Examples:\r\n\t\t * - Valid: 73513537, 9780471117094, 4006381333931\r\n\t\t * - Invalid: 73513536\r\n\t\t *\r\n\t\t * @see http://en.wikipedia.org/wiki/European_Article_Number\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Can consist of the following keys:\r\n\t\t * - message: The invalid message\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tif (!/^(\\d{8}|\\d{12}|\\d{13})$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvar length = value.length,\r\n\t\t\t\tsum    = 0,\r\n\t\t\t\tweight = (length === 8) ? [3, 1] : [1, 3];\r\n\t\t\tfor (var i = 0; i < length - 1; i++) {\r\n\t\t\t\tsum += parseInt(value.charAt(i), 10) * weight[i % 2];\r\n\t\t\t}\r\n\t\t\tsum = (10 - sum % 10) % 10;\r\n\t\t\treturn (sum + '' === value.charAt(length - 1));\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.emailAddress = $.extend($.fn.bootstrapValidator.i18n.emailAddress || {}, {\r\n\t\t'default': 'Please enter a valid email address'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.emailAddress = {\r\n\t\tenableByHtml5: function($field) {\r\n\t\t\treturn ('email' === $field.attr('type'));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Return true if and only if the input value is a valid email address\r\n\t\t *\r\n\t\t * @param {BootstrapValidator} validator Validate plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} [options]\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t// Email address regular expression\r\n\t\t\t// http://stackoverflow.com/questions/46155/validate-email-address-in-javascript\r\n\t\t\tvar emailRegExp = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\t\t\treturn emailRegExp.test(value);\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.file = $.extend($.fn.bootstrapValidator.i18n.file || {}, {\r\n\t\t'default': 'Please choose a valid file'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.file = {\r\n\t\thtml5Attributes: {\r\n\t\t\textension: 'extension',\r\n\t\t\tmaxsize: 'maxSize',\r\n\t\t\tmessage: 'message',\r\n\t\t\ttype: 'type'\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate upload file. Use HTML 5 API if the browser supports\r\n\t\t *\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Can consist of the following keys:\r\n\t\t * - extension: The allowed extensions, separated by a comma\r\n\t\t * - maxSize: The maximum size in bytes\r\n\t\t * - message: The invalid message\r\n\t\t * - type: The allowed MIME type, separated by a comma\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tvar ext,\r\n\t\t\t\textensions = options.extension ? options.extension.toLowerCase().split(',') : null,\r\n\t\t\t\ttypes      = options.type      ? options.type.toLowerCase().split(',')      : null,\r\n\t\t\t\thtml5      = (window.File && window.FileList && window.FileReader);\r\n\r\n\t\t\tif (html5) {\r\n\t\t\t\t// Get FileList instance\r\n\t\t\t\tvar files = $field.get(0).files,\r\n\t\t\t\t\ttotal = files.length;\r\n\t\t\t\tfor (var i = 0; i < total; i++) {\r\n\t\t\t\t\t// Check file size\r\n\t\t\t\t\tif (options.maxSize && files[i].size > parseInt(options.maxSize, 10)) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Check file extension\r\n\t\t\t\t\text = files[i].name.substr(files[i].name.lastIndexOf('.') + 1);\r\n\t\t\t\t\tif (extensions && $.inArray(ext.toLowerCase(), extensions) === -1) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Check file type\r\n\t\t\t\t\tif (types && $.inArray(files[i].type.toLowerCase(), types) === -1) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Check file extension\r\n\t\t\t\text = value.substr(value.lastIndexOf('.') + 1);\r\n\t\t\t\tif (extensions && $.inArray(ext.toLowerCase(), extensions) === -1) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.greaterThan = $.extend($.fn.bootstrapValidator.i18n.greaterThan || {}, {\r\n\t\t'default': 'Please enter a value greater than or equal to %s',\r\n\t\tnotInclusive: 'Please enter a value greater than %s'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.greaterThan = {\r\n\t\thtml5Attributes: {\r\n\t\t\tmessage: 'message',\r\n\t\t\tvalue: 'value',\r\n\t\t\tinclusive: 'inclusive'\r\n\t\t},\r\n\r\n\t\tenableByHtml5: function($field) {\r\n\t\t\tvar min = $field.attr('min');\r\n\t\t\tif (min) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: min\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Return true if the input value is greater than or equals to given number\r\n\t\t *\r\n\t\t * @param {BootstrapValidator} validator Validate plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Can consist of the following keys:\r\n\t\t * - value: Define the number to compare with. It can be\r\n\t\t *      - A number\r\n\t\t *      - Name of field which its value defines the number\r\n\t\t *      - Name of callback function that returns the number\r\n\t\t *      - A callback function that returns the number\r\n\t\t *\r\n\t\t * - inclusive [optional]: Can be true or false. Default is true\r\n\t\t * - message: The invalid message\r\n\t\t * @returns {Boolean|Object}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tvar compareTo = $.isNumeric(options.value) ? options.value : validator.getDynamicOption($field, options.value);\r\n\r\n\t\t\tvalue = parseFloat(value);\r\n\t\t\treturn (options.inclusive === true || options.inclusive === undefined)\r\n\t\t\t\t? {\r\n\t\t\t\tvalid: value >= compareTo,\r\n\t\t\t\tmessage: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.greaterThan['default'], compareTo)\r\n\t\t\t}\r\n\t\t\t\t: {\r\n\t\t\t\tvalid: value > compareTo,\r\n\t\t\t\tmessage: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.greaterThan.notInclusive, compareTo)\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.grid = $.extend($.fn.bootstrapValidator.i18n.grid || {}, {\r\n\t\t'default': 'Please enter a valid GRId number'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.grid = {\r\n\t\t/**\r\n\t\t * Validate GRId (Global Release Identifier)\r\n\t\t * Examples:\r\n\t\t * - Valid: A12425GABC1234002M, A1-2425G-ABC1234002-M, A1 2425G ABC1234002 M, Grid:A1-2425G-ABC1234002-M\r\n\t\t * - Invalid: A1-2425G-ABC1234002-Q\r\n\t\t *\r\n\t\t * @see http://en.wikipedia.org/wiki/Global_Release_Identifier\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Can consist of the following keys:\r\n\t\t * - message: The invalid message\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = value.toUpperCase();\r\n\t\t\tif (!/^[GRID:]*([0-9A-Z]{2})[-\\s]*([0-9A-Z]{5})[-\\s]*([0-9A-Z]{10})[-\\s]*([0-9A-Z]{1})$/g.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvalue = value.replace(/\\s/g, '').replace(/-/g, '');\r\n\t\t\tif ('GRID:' === value.substr(0, 5)) {\r\n\t\t\t\tvalue = value.substr(5);\r\n\t\t\t}\r\n\t\t\treturn $.fn.bootstrapValidator.helpers.mod37And36(value);\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.hex = $.extend($.fn.bootstrapValidator.i18n.hex || {}, {\r\n\t\t'default': 'Please enter a valid hexadecimal number'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.hex = {\r\n\t\t/**\r\n\t\t * Return true if and only if the input value is a valid hexadecimal number\r\n\t\t *\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Consist of key:\r\n\t\t * - message: The invalid message\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\treturn /^[0-9a-fA-F]+$/.test(value);\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.hexColor = $.extend($.fn.bootstrapValidator.i18n.hexColor || {}, {\r\n\t\t'default': 'Please enter a valid hex color'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.hexColor = {\r\n\t\tenableByHtml5: function($field) {\r\n\t\t\treturn ('color' === $field.attr('type'));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Return true if the input value is a valid hex color\r\n\t\t *\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Can consist of the following keys:\r\n\t\t * - message: The invalid message\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(value);\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.iban = $.extend($.fn.bootstrapValidator.i18n.iban || {}, {\r\n\t\t'default': 'Please enter a valid IBAN number',\r\n\t\tcountryNotSupported: 'The country code %s is not supported',\r\n\t\tcountry: 'Please enter a valid IBAN number in %s',\r\n\t\tcountries: {\r\n\t\t\tAD: 'Andorra',\r\n\t\t\tAE: 'United Arab Emirates',\r\n\t\t\tAL: 'Albania',\r\n\t\t\tAO: 'Angola',\r\n\t\t\tAT: 'Austria',\r\n\t\t\tAZ: 'Azerbaijan',\r\n\t\t\tBA: 'Bosnia and Herzegovina',\r\n\t\t\tBE: 'Belgium',\r\n\t\t\tBF: 'Burkina Faso',\r\n\t\t\tBG: 'Bulgaria',\r\n\t\t\tBH: 'Bahrain',\r\n\t\t\tBI: 'Burundi',\r\n\t\t\tBJ: 'Benin',\r\n\t\t\tBR: 'Brazil',\r\n\t\t\tCH: 'Switzerland',\r\n\t\t\tCI: 'Ivory Coast',\r\n\t\t\tCM: 'Cameroon',\r\n\t\t\tCR: 'Costa Rica',\r\n\t\t\tCV: 'Cape Verde',\r\n\t\t\tCY: 'Cyprus',\r\n\t\t\tCZ: 'Czech Republic',\r\n\t\t\tDE: 'Germany',\r\n\t\t\tDK: 'Denmark',\r\n\t\t\tDO: 'Dominican Republic',\r\n\t\t\tDZ: 'Algeria',\r\n\t\t\tEE: 'Estonia',\r\n\t\t\tES: 'Spain',\r\n\t\t\tFI: 'Finland',\r\n\t\t\tFO: 'Faroe Islands',\r\n\t\t\tFR: 'France',\r\n\t\t\tGB: 'United Kingdom',\r\n\t\t\tGE: 'Georgia',\r\n\t\t\tGI: 'Gibraltar',\r\n\t\t\tGL: 'Greenland',\r\n\t\t\tGR: 'Greece',\r\n\t\t\tGT: 'Guatemala',\r\n\t\t\tHR: 'Croatia',\r\n\t\t\tHU: 'Hungary',\r\n\t\t\tIE: 'Ireland',\r\n\t\t\tIL: 'Israel',\r\n\t\t\tIR: 'Iran',\r\n\t\t\tIS: 'Iceland',\r\n\t\t\tIT: 'Italy',\r\n\t\t\tJO: 'Jordan',\r\n\t\t\tKW: 'Kuwait',\r\n\t\t\tKZ: 'Kazakhstan',\r\n\t\t\tLB: 'Lebanon',\r\n\t\t\tLI: 'Liechtenstein',\r\n\t\t\tLT: 'Lithuania',\r\n\t\t\tLU: 'Luxembourg',\r\n\t\t\tLV: 'Latvia',\r\n\t\t\tMC: 'Monaco',\r\n\t\t\tMD: 'Moldova',\r\n\t\t\tME: 'Montenegro',\r\n\t\t\tMG: 'Madagascar',\r\n\t\t\tMK: 'Macedonia',\r\n\t\t\tML: 'Mali',\r\n\t\t\tMR: 'Mauritania',\r\n\t\t\tMT: 'Malta',\r\n\t\t\tMU: 'Mauritius',\r\n\t\t\tMZ: 'Mozambique',\r\n\t\t\tNL: 'Netherlands',\r\n\t\t\tNO: 'Norway',\r\n\t\t\tPK: 'Pakistan',\r\n\t\t\tPL: 'Poland',\r\n\t\t\tPS: 'Palestinian',\r\n\t\t\tPT: 'Portugal',\r\n\t\t\tQA: 'Qatar',\r\n\t\t\tRO: 'Romania',\r\n\t\t\tRS: 'Serbia',\r\n\t\t\tSA: 'Saudi Arabia',\r\n\t\t\tSE: 'Sweden',\r\n\t\t\tSI: 'Slovenia',\r\n\t\t\tSK: 'Slovakia',\r\n\t\t\tSM: 'San Marino',\r\n\t\t\tSN: 'Senegal',\r\n\t\t\tTN: 'Tunisia',\r\n\t\t\tTR: 'Turkey',\r\n\t\t\tVG: 'Virgin Islands, British'\r\n\t\t}\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.iban = {\r\n\t\thtml5Attributes: {\r\n\t\t\tmessage: 'message',\r\n\t\t\tcountry: 'country'\r\n\t\t},\r\n\r\n\t\t// http://www.swift.com/dsp/resources/documents/IBAN_Registry.pdf\r\n\t\t// http://en.wikipedia.org/wiki/International_Bank_Account_Number#IBAN_formats_by_country\r\n\t\tREGEX: {\r\n\t\t\t'AD': 'AD[0-9]{2}[0-9]{4}[0-9]{4}[A-Z0-9]{12}',                     // Andorra\r\n\t\t\t'AE': 'AE[0-9]{2}[0-9]{3}[0-9]{16}',                                // United Arab Emirates\r\n\t\t\t'AL': 'AL[0-9]{2}[0-9]{8}[A-Z0-9]{16}',                             // Albania\r\n\t\t\t'AO': 'AO[0-9]{2}[0-9]{21}',                                        // Angola\r\n\t\t\t'AT': 'AT[0-9]{2}[0-9]{5}[0-9]{11}',                                // Austria\r\n\t\t\t'AZ': 'AZ[0-9]{2}[A-Z]{4}[A-Z0-9]{20}',                             // Azerbaijan\r\n\t\t\t'BA': 'BA[0-9]{2}[0-9]{3}[0-9]{3}[0-9]{8}[0-9]{2}',                 // Bosnia and Herzegovina\r\n\t\t\t'BE': 'BE[0-9]{2}[0-9]{3}[0-9]{7}[0-9]{2}',                         // Belgium\r\n\t\t\t'BF': 'BF[0-9]{2}[0-9]{23}',                                        // Burkina Faso\r\n\t\t\t'BG': 'BG[0-9]{2}[A-Z]{4}[0-9]{4}[0-9]{2}[A-Z0-9]{8}',              // Bulgaria\r\n\t\t\t'BH': 'BH[0-9]{2}[A-Z]{4}[A-Z0-9]{14}',                             // Bahrain\r\n\t\t\t'BI': 'BI[0-9]{2}[0-9]{12}',                                        // Burundi\r\n\t\t\t'BJ': 'BJ[0-9]{2}[A-Z]{1}[0-9]{23}',                                // Benin\r\n\t\t\t'BR': 'BR[0-9]{2}[0-9]{8}[0-9]{5}[0-9]{10}[A-Z][A-Z0-9]',           // Brazil\r\n\t\t\t'CH': 'CH[0-9]{2}[0-9]{5}[A-Z0-9]{12}',                             // Switzerland\r\n\t\t\t'CI': 'CI[0-9]{2}[A-Z]{1}[0-9]{23}',                                // Ivory Coast\r\n\t\t\t'CM': 'CM[0-9]{2}[0-9]{23}',                                        // Cameroon\r\n\t\t\t'CR': 'CR[0-9]{2}[0-9]{3}[0-9]{14}',                                // Costa Rica\r\n\t\t\t'CV': 'CV[0-9]{2}[0-9]{21}',                                        // Cape Verde\r\n\t\t\t'CY': 'CY[0-9]{2}[0-9]{3}[0-9]{5}[A-Z0-9]{16}',                     // Cyprus\r\n\t\t\t'CZ': 'CZ[0-9]{2}[0-9]{20}',                                        // Czech Republic\r\n\t\t\t'DE': 'DE[0-9]{2}[0-9]{8}[0-9]{10}',                                // Germany\r\n\t\t\t'DK': 'DK[0-9]{2}[0-9]{14}',                                        // Denmark\r\n\t\t\t'DO': 'DO[0-9]{2}[A-Z0-9]{4}[0-9]{20}',                             // Dominican Republic\r\n\t\t\t'DZ': 'DZ[0-9]{2}[0-9]{20}',                                        // Algeria\r\n\t\t\t'EE': 'EE[0-9]{2}[0-9]{2}[0-9]{2}[0-9]{11}[0-9]{1}',                // Estonia\r\n\t\t\t'ES': 'ES[0-9]{2}[0-9]{4}[0-9]{4}[0-9]{1}[0-9]{1}[0-9]{10}',        // Spain\r\n\t\t\t'FI': 'FI[0-9]{2}[0-9]{6}[0-9]{7}[0-9]{1}',                         // Finland\r\n\t\t\t'FO': 'FO[0-9]{2}[0-9]{4}[0-9]{9}[0-9]{1}',                         // Faroe Islands\r\n\t\t\t'FR': 'FR[0-9]{2}[0-9]{5}[0-9]{5}[A-Z0-9]{11}[0-9]{2}',             // France\r\n\t\t\t'GB': 'GB[0-9]{2}[A-Z]{4}[0-9]{6}[0-9]{8}',                         // United Kingdom\r\n\t\t\t'GE': 'GE[0-9]{2}[A-Z]{2}[0-9]{16}',                                // Georgia\r\n\t\t\t'GI': 'GI[0-9]{2}[A-Z]{4}[A-Z0-9]{15}',                             // Gibraltar\r\n\t\t\t'GL': 'GL[0-9]{2}[0-9]{4}[0-9]{9}[0-9]{1}',                         // Greenland\r\n\t\t\t'GR': 'GR[0-9]{2}[0-9]{3}[0-9]{4}[A-Z0-9]{16}',                     // Greece\r\n\t\t\t'GT': 'GT[0-9]{2}[A-Z0-9]{4}[A-Z0-9]{20}',                          // Guatemala\r\n\t\t\t'HR': 'HR[0-9]{2}[0-9]{7}[0-9]{10}',                                // Croatia\r\n\t\t\t'HU': 'HU[0-9]{2}[0-9]{3}[0-9]{4}[0-9]{1}[0-9]{15}[0-9]{1}',        // Hungary\r\n\t\t\t'IE': 'IE[0-9]{2}[A-Z]{4}[0-9]{6}[0-9]{8}',                         // Ireland\r\n\t\t\t'IL': 'IL[0-9]{2}[0-9]{3}[0-9]{3}[0-9]{13}',                        // Israel\r\n\t\t\t'IR': 'IR[0-9]{2}[0-9]{22}',                                        // Iran\r\n\t\t\t'IS': 'IS[0-9]{2}[0-9]{4}[0-9]{2}[0-9]{6}[0-9]{10}',                // Iceland\r\n\t\t\t'IT': 'IT[0-9]{2}[A-Z]{1}[0-9]{5}[0-9]{5}[A-Z0-9]{12}',             // Italy\r\n\t\t\t'JO': 'JO[0-9]{2}[A-Z]{4}[0-9]{4}[0]{8}[A-Z0-9]{10}',               // Jordan\r\n\t\t\t'KW': 'KW[0-9]{2}[A-Z]{4}[0-9]{22}',                                // Kuwait\r\n\t\t\t'KZ': 'KZ[0-9]{2}[0-9]{3}[A-Z0-9]{13}',                             // Kazakhstan\r\n\t\t\t'LB': 'LB[0-9]{2}[0-9]{4}[A-Z0-9]{20}',                             // Lebanon\r\n\t\t\t'LI': 'LI[0-9]{2}[0-9]{5}[A-Z0-9]{12}',                             // Liechtenstein\r\n\t\t\t'LT': 'LT[0-9]{2}[0-9]{5}[0-9]{11}',                                // Lithuania\r\n\t\t\t'LU': 'LU[0-9]{2}[0-9]{3}[A-Z0-9]{13}',                             // Luxembourg\r\n\t\t\t'LV': 'LV[0-9]{2}[A-Z]{4}[A-Z0-9]{13}',                             // Latvia\r\n\t\t\t'MC': 'MC[0-9]{2}[0-9]{5}[0-9]{5}[A-Z0-9]{11}[0-9]{2}',             // Monaco\r\n\t\t\t'MD': 'MD[0-9]{2}[A-Z0-9]{20}',                                     // Moldova\r\n\t\t\t'ME': 'ME[0-9]{2}[0-9]{3}[0-9]{13}[0-9]{2}',                        // Montenegro\r\n\t\t\t'MG': 'MG[0-9]{2}[0-9]{23}',                                        // Madagascar\r\n\t\t\t'MK': 'MK[0-9]{2}[0-9]{3}[A-Z0-9]{10}[0-9]{2}',                     // Macedonia\r\n\t\t\t'ML': 'ML[0-9]{2}[A-Z]{1}[0-9]{23}',                                // Mali\r\n\t\t\t'MR': 'MR13[0-9]{5}[0-9]{5}[0-9]{11}[0-9]{2}',                      // Mauritania\r\n\t\t\t'MT': 'MT[0-9]{2}[A-Z]{4}[0-9]{5}[A-Z0-9]{18}',                     // Malta\r\n\t\t\t'MU': 'MU[0-9]{2}[A-Z]{4}[0-9]{2}[0-9]{2}[0-9]{12}[0-9]{3}[A-Z]{3}',// Mauritius\r\n\t\t\t'MZ': 'MZ[0-9]{2}[0-9]{21}',                                        // Mozambique\r\n\t\t\t'NL': 'NL[0-9]{2}[A-Z]{4}[0-9]{10}',                                // Netherlands\r\n\t\t\t'NO': 'NO[0-9]{2}[0-9]{4}[0-9]{6}[0-9]{1}',                         // Norway\r\n\t\t\t'PK': 'PK[0-9]{2}[A-Z]{4}[A-Z0-9]{16}',                             // Pakistan\r\n\t\t\t'PL': 'PL[0-9]{2}[0-9]{8}[0-9]{16}',                                // Poland\r\n\t\t\t'PS': 'PS[0-9]{2}[A-Z]{4}[A-Z0-9]{21}',                             // Palestinian\r\n\t\t\t'PT': 'PT[0-9]{2}[0-9]{4}[0-9]{4}[0-9]{11}[0-9]{2}',                // Portugal\r\n\t\t\t'QA': 'QA[0-9]{2}[A-Z]{4}[A-Z0-9]{21}',                             // Qatar\r\n\t\t\t'RO': 'RO[0-9]{2}[A-Z]{4}[A-Z0-9]{16}',                             // Romania\r\n\t\t\t'RS': 'RS[0-9]{2}[0-9]{3}[0-9]{13}[0-9]{2}',                        // Serbia\r\n\t\t\t'SA': 'SA[0-9]{2}[0-9]{2}[A-Z0-9]{18}',                             // Saudi Arabia\r\n\t\t\t'SE': 'SE[0-9]{2}[0-9]{3}[0-9]{16}[0-9]{1}',                        // Sweden\r\n\t\t\t'SI': 'SI[0-9]{2}[0-9]{5}[0-9]{8}[0-9]{2}',                         // Slovenia\r\n\t\t\t'SK': 'SK[0-9]{2}[0-9]{4}[0-9]{6}[0-9]{10}',                        // Slovakia\r\n\t\t\t'SM': 'SM[0-9]{2}[A-Z]{1}[0-9]{5}[0-9]{5}[A-Z0-9]{12}',             // San Marino\r\n\t\t\t'SN': 'SN[0-9]{2}[A-Z]{1}[0-9]{23}',                                // Senegal\r\n\t\t\t'TN': 'TN59[0-9]{2}[0-9]{3}[0-9]{13}[0-9]{2}',                      // Tunisia\r\n\t\t\t'TR': 'TR[0-9]{2}[0-9]{5}[A-Z0-9]{1}[A-Z0-9]{16}',                  // Turkey\r\n\t\t\t'VG': 'VG[0-9]{2}[A-Z]{4}[0-9]{16}'                                 // Virgin Islands, British\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate an International Bank Account Number (IBAN)\r\n\t\t * To test it, take the sample IBAN from\r\n\t\t * http://www.nordea.com/Our+services/International+products+and+services/Cash+Management/IBAN+countries/908462.html\r\n\t\t *\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Can consist of the following keys:\r\n\t\t * - message: The invalid message\r\n\t\t * - country: The ISO 3166-1 country code. It can be\r\n\t\t *      - A country code\r\n\t\t *      - Name of field which its value defines the country code\r\n\t\t *      - Name of callback function that returns the country code\r\n\t\t *      - A callback function that returns the country code\r\n\t\t * @returns {Boolean|Object}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = value.replace(/[^a-zA-Z0-9]/g, '').toUpperCase();\r\n\t\t\tvar country = options.country;\r\n\t\t\tif (!country) {\r\n\t\t\t\tcountry = value.substr(0, 2);\r\n\t\t\t} else if (typeof country !== 'string' || !this.REGEX[country]) {\r\n\t\t\t\t// Determine the country code\r\n\t\t\t\tcountry = validator.getDynamicOption($field, country);\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.REGEX[country]) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalid: false,\r\n\t\t\t\t\tmessage: $.fn.bootstrapValidator.helpers.format($.fn.bootstrapValidator.i18n.iban.countryNotSupported, country)\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tif (!(new RegExp('^' + this.REGEX[country] + '$')).test(value)) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalid: false,\r\n\t\t\t\t\tmessage: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.iban.country, $.fn.bootstrapValidator.i18n.iban.countries[country])\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tvalue = value.substr(4) + value.substr(0, 4);\r\n\t\t\tvalue = $.map(value.split(''), function(n) {\r\n\t\t\t\tvar code = n.charCodeAt(0);\r\n\t\t\t\treturn (code >= 'A'.charCodeAt(0) && code <= 'Z'.charCodeAt(0))\r\n\t\t\t\t\t// Replace A, B, C, ..., Z with 10, 11, ..., 35\r\n\t\t\t\t\t? (code - 'A'.charCodeAt(0) + 10)\r\n\t\t\t\t\t: n;\r\n\t\t\t});\r\n\t\t\tvalue = value.join('');\r\n\r\n\t\t\tvar temp   = parseInt(value.substr(0, 1), 10),\r\n\t\t\t\tlength = value.length;\r\n\t\t\tfor (var i = 1; i < length; ++i) {\r\n\t\t\t\ttemp = (temp * 10 + parseInt(value.substr(i, 1), 10)) % 97;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tvalid: (temp === 1),\r\n\t\t\t\tmessage: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.iban.country, $.fn.bootstrapValidator.i18n.iban.countries[country])\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.id = $.extend($.fn.bootstrapValidator.i18n.id || {}, {\r\n\t\t'default': 'Please enter a valid identification number',\r\n\t\tcountryNotSupported: 'The country code %s is not supported',\r\n\t\tcountry: 'Please enter a valid %s identification number',\r\n\t\tcountries: {\r\n\t\t\tBA: 'Bosnia and Herzegovina',\r\n\t\t\tBG: 'Bulgarian',\r\n\t\t\tBR: 'Brazilian',\r\n\t\t\tCH: 'Swiss',\r\n\t\t\tCL: 'Chilean',\r\n\t\t\tCZ: 'Czech',\r\n\t\t\tDK: 'Danish',\r\n\t\t\tEE: 'Estonian',\r\n\t\t\tES: 'Spanish',\r\n\t\t\tFI: 'Finnish',\r\n\t\t\tHR: 'Croatian',\r\n\t\t\tIE: 'Irish',\r\n\t\t\tIS: 'Iceland',\r\n\t\t\tLT: 'Lithuanian',\r\n\t\t\tLV: 'Latvian',\r\n\t\t\tME: 'Montenegro',\r\n\t\t\tMK: 'Macedonian',\r\n\t\t\tNL: 'Dutch',\r\n\t\t\tRO: 'Romanian',\r\n\t\t\tRS: 'Serbian',\r\n\t\t\tSE: 'Swedish',\r\n\t\t\tSI: 'Slovenian',\r\n\t\t\tSK: 'Slovak',\r\n\t\t\tSM: 'San Marino',\r\n\t\t\tZA: 'South African'\r\n\t\t}\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.id = {\r\n\t\thtml5Attributes: {\r\n\t\t\tmessage: 'message',\r\n\t\t\tcountry: 'country'\r\n\t\t},\r\n\r\n\t\t// Supported country codes\r\n\t\tCOUNTRY_CODES: [\r\n\t\t\t'BA', 'BG', 'BR', 'CH', 'CL', 'CZ', 'DK', 'EE', 'ES', 'FI', 'HR', 'IE', 'IS', 'LT', 'LV', 'ME', 'MK', 'NL',\r\n\t\t\t'RO', 'RS', 'SE', 'SI', 'SK', 'SM', 'ZA'\r\n\t\t],\r\n\r\n\t\t/**\r\n\t\t * Validate identification number in different countries\r\n\t\t *\r\n\t\t * @see http://en.wikipedia.org/wiki/National_identification_number\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Consist of key:\r\n\t\t * - message: The invalid message\r\n\t\t * - country: The ISO 3166-1 country code. It can be\r\n\t\t *      - One of country code defined in COUNTRY_CODES\r\n\t\t *      - Name of field which its value defines the country code\r\n\t\t *      - Name of callback function that returns the country code\r\n\t\t *      - A callback function that returns the country code\r\n\t\t * @returns {Boolean|Object}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tvar country = options.country;\r\n\t\t\tif (!country) {\r\n\t\t\t\tcountry = value.substr(0, 2);\r\n\t\t\t} else if (typeof country !== 'string' || $.inArray(country.toUpperCase(), this.COUNTRY_CODES) === -1) {\r\n\t\t\t\t// Determine the country code\r\n\t\t\t\tcountry = validator.getDynamicOption($field, country);\r\n\t\t\t}\r\n\r\n\t\t\tif ($.inArray(country, this.COUNTRY_CODES) === -1) {\r\n\t\t\t\treturn { valid: false, message: $.fn.bootstrapValidator.helpers.format($.fn.bootstrapValidator.i18n.id.countryNotSupported, country) };\r\n\t\t\t}\r\n\r\n\t\t\tvar method  = ['_', country.toLowerCase()].join('');\r\n\t\t\treturn this[method](value)\r\n\t\t\t\t? true\r\n\t\t\t\t: {\r\n\t\t\t\tvalid: false,\r\n\t\t\t\tmessage: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.id.country, $.fn.bootstrapValidator.i18n.id.countries[country.toUpperCase()])\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Unique Master Citizen Number which uses in\r\n\t\t * - Bosnia and Herzegovina (country code: BA)\r\n\t\t * - Macedonia (MK)\r\n\t\t * - Montenegro (ME)\r\n\t\t * - Serbia (RS)\r\n\t\t * - Slovenia (SI)\r\n\t\t *\r\n\t\t * @see http://en.wikipedia.org/wiki/Unique_Master_Citizen_Number\r\n\t\t * @param {String} value The ID\r\n\t\t * @param {String} countryCode The ISO country code, can be BA, MK, ME, RS, SI\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_validateJMBG: function(value, countryCode) {\r\n\t\t\tif (!/^\\d{13}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar day   = parseInt(value.substr(0, 2), 10),\r\n\t\t\t\tmonth = parseInt(value.substr(2, 2), 10),\r\n\t\t\t\tyear  = parseInt(value.substr(4, 3), 10),\r\n\t\t\t\trr    = parseInt(value.substr(7, 2), 10),\r\n\t\t\t\tk     = parseInt(value.substr(12, 1), 10);\r\n\r\n\t\t\t// Validate date of birth\r\n\t\t\t// FIXME: Validate the year of birth\r\n\t\t\tif (day > 31 || month > 12) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// Validate checksum\r\n\t\t\tvar sum = 0;\r\n\t\t\tfor (var i = 0; i < 6; i++) {\r\n\t\t\t\tsum += (7 - i) * (parseInt(value.charAt(i), 10) + parseInt(value.charAt(i + 6), 10));\r\n\t\t\t}\r\n\t\t\tsum = 11 - sum % 11;\r\n\t\t\tif (sum === 10 || sum === 11) {\r\n\t\t\t\tsum = 0;\r\n\t\t\t}\r\n\t\t\tif (sum !== k) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// Validate political region\r\n\t\t\t// rr is the political region of birth, which can be in ranges:\r\n\t\t\t// 10-19: Bosnia and Herzegovina\r\n\t\t\t// 20-29: Montenegro\r\n\t\t\t// 30-39: Croatia (not used anymore)\r\n\t\t\t// 41-49: Macedonia\r\n\t\t\t// 50-59: Slovenia (only 50 is used)\r\n\t\t\t// 70-79: Central Serbia\r\n\t\t\t// 80-89: Serbian province of Vojvodina\r\n\t\t\t// 90-99: Kosovo\r\n\t\t\tswitch (countryCode.toUpperCase()) {\r\n\t\t\t\tcase 'BA':\r\n\t\t\t\t\treturn (10 <= rr && rr <= 19);\r\n\t\t\t\tcase 'MK':\r\n\t\t\t\t\treturn (41 <= rr && rr <= 49);\r\n\t\t\t\tcase 'ME':\r\n\t\t\t\t\treturn (20 <= rr && rr <= 29);\r\n\t\t\t\tcase 'RS':\r\n\t\t\t\t\treturn (70 <= rr && rr <= 99);\r\n\t\t\t\tcase 'SI':\r\n\t\t\t\t\treturn (50 <= rr && rr <= 59);\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_ba: function(value) {\r\n\t\t\treturn this._validateJMBG(value, 'BA');\r\n\t\t},\r\n\t\t_mk: function(value) {\r\n\t\t\treturn this._validateJMBG(value, 'MK');\r\n\t\t},\r\n\t\t_me: function(value) {\r\n\t\t\treturn this._validateJMBG(value, 'ME');\r\n\t\t},\r\n\t\t_rs: function(value) {\r\n\t\t\treturn this._validateJMBG(value, 'RS');\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Examples: 0101006500006\r\n\t\t */\r\n\t\t_si: function(value) {\r\n\t\t\treturn this._validateJMBG(value, 'SI');\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Bulgarian national identification number (EGN)\r\n\t\t * Examples:\r\n\t\t * - Valid: 7523169263, 8032056031, 803205 603 1, 8001010008, 7501020018, 7552010005, 7542011030\r\n\t\t * - Invalid: 8019010008\r\n\t\t *\r\n\t\t * @see http://en.wikipedia.org/wiki/Uniform_civil_number\r\n\t\t * @param {String} value The ID\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_bg: function(value) {\r\n\t\t\tif (!/^\\d{10}$/.test(value) && !/^\\d{6}\\s\\d{3}\\s\\d{1}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvalue = value.replace(/\\s/g, '');\r\n\t\t\t// Check the birth date\r\n\t\t\tvar year  = parseInt(value.substr(0, 2), 10) + 1900,\r\n\t\t\t\tmonth = parseInt(value.substr(2, 2), 10),\r\n\t\t\t\tday   = parseInt(value.substr(4, 2), 10);\r\n\t\t\tif (month > 40) {\r\n\t\t\t\tyear += 100;\r\n\t\t\t\tmonth -= 40;\r\n\t\t\t} else if (month > 20) {\r\n\t\t\t\tyear -= 100;\r\n\t\t\t\tmonth -= 20;\r\n\t\t\t}\r\n\r\n\t\t\tif (!$.fn.bootstrapValidator.helpers.date(year, month, day)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvar sum    = 0,\r\n\t\t\t\tweight = [2, 4, 8, 5, 10, 9, 7, 3, 6];\r\n\t\t\tfor (var i = 0; i < 9; i++) {\r\n\t\t\t\tsum += parseInt(value.charAt(i), 10) * weight[i];\r\n\t\t\t}\r\n\t\t\tsum = (sum % 11) % 10;\r\n\t\t\treturn (sum + '' === value.substr(9, 1));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Brazilian national identification number (CPF)\r\n\t\t * Examples:\r\n\t\t * - Valid: 39053344705, 390.533.447-05, 111.444.777-35\r\n\t\t * - Invalid: 231.002.999-00\r\n\t\t *\r\n\t\t * @see http://en.wikipedia.org/wiki/Cadastro_de_Pessoas_F%C3%ADsicas\r\n\t\t * @param {String} value The ID\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_br: function(value) {\r\n\t\t\tif (/^1{11}|2{11}|3{11}|4{11}|5{11}|6{11}|7{11}|8{11}|9{11}|0{11}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (!/^\\d{11}$/.test(value) && !/^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvalue = value.replace(/\\./g, '').replace(/-/g, '');\r\n\r\n\t\t\tvar d1 = 0;\r\n\t\t\tfor (var i = 0; i < 9; i++) {\r\n\t\t\t\td1 += (10 - i) * parseInt(value.charAt(i), 10);\r\n\t\t\t}\r\n\t\t\td1 = 11 - d1 % 11;\r\n\t\t\tif (d1 === 10 || d1 === 11) {\r\n\t\t\t\td1 = 0;\r\n\t\t\t}\r\n\t\t\tif (d1 + '' !== value.charAt(9)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvar d2 = 0;\r\n\t\t\tfor (i = 0; i < 10; i++) {\r\n\t\t\t\td2 += (11 - i) * parseInt(value.charAt(i), 10);\r\n\t\t\t}\r\n\t\t\td2 = 11 - d2 % 11;\r\n\t\t\tif (d2 === 10 || d2 === 11) {\r\n\t\t\t\td2 = 0;\r\n\t\t\t}\r\n\r\n\t\t\treturn (d2 + '' === value.charAt(10));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Swiss Social Security Number (AHV-Nr/No AVS)\r\n\t\t * Examples:\r\n\t\t * - Valid: 756.1234.5678.95, 7561234567895\r\n\t\t *\r\n\t\t * @see http://en.wikipedia.org/wiki/National_identification_number#Switzerland\r\n\t\t * @see http://www.bsv.admin.ch/themen/ahv/00011/02185/index.html?lang=de\r\n\t\t * @param {String} value The ID\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_ch: function(value) {\r\n\t\t\tif (!/^756[\\.]{0,1}[0-9]{4}[\\.]{0,1}[0-9]{4}[\\.]{0,1}[0-9]{2}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvalue = value.replace(/\\D/g, '').substr(3);\r\n\t\t\tvar length = value.length,\r\n\t\t\t\tsum    = 0,\r\n\t\t\t\tweight = (length === 8) ? [3, 1] : [1, 3];\r\n\t\t\tfor (var i = 0; i < length - 1; i++) {\r\n\t\t\t\tsum += parseInt(value.charAt(i), 10) * weight[i % 2];\r\n\t\t\t}\r\n\t\t\tsum = 10 - sum % 10;\r\n\t\t\treturn (sum + '' === value.charAt(length - 1));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Chilean national identification number (RUN/RUT)\r\n\t\t * Examples:\r\n\t\t * - Valid: 76086428-5, 22060449-7, 12531909-2\r\n\t\t *\r\n\t\t * @see http://en.wikipedia.org/wiki/National_identification_number#Chile\r\n\t\t * @see https://palena.sii.cl/cvc/dte/ee_empresas_emisoras.html for samples\r\n\t\t * @param {String} value The ID\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_cl: function(value) {\r\n\t\t\tif (!/^\\d{7,8}[-]{0,1}[0-9K]$/i.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvalue = value.replace(/\\-/g, '');\r\n\t\t\twhile (value.length < 9) {\r\n\t\t\t\tvalue = '0' + value;\r\n\t\t\t}\r\n\t\t\tvar sum    = 0,\r\n\t\t\t\tweight = [3, 2, 7, 6, 5, 4, 3, 2];\r\n\t\t\tfor (var i = 0; i < 8; i++) {\r\n\t\t\t\tsum += parseInt(value.charAt(i), 10) * weight[i];\r\n\t\t\t}\r\n\t\t\tsum = 11 - sum % 11;\r\n\t\t\tif (sum === 11) {\r\n\t\t\t\tsum = 0;\r\n\t\t\t} else if (sum === 10) {\r\n\t\t\t\tsum = 'K';\r\n\t\t\t}\r\n\t\t\treturn sum + '' === value.charAt(8).toUpperCase();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Czech national identification number (RC)\r\n\t\t * Examples:\r\n\t\t * - Valid: 7103192745, 991231123\r\n\t\t * - Invalid: 1103492745, 590312123\r\n\t\t *\r\n\t\t * @param {String} value The ID\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_cz: function(value) {\r\n\t\t\tif (!/^\\d{9,10}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar year  = 1900 + parseInt(value.substr(0, 2), 10),\r\n\t\t\t\tmonth = parseInt(value.substr(2, 2), 10) % 50 % 20,\r\n\t\t\t\tday   = parseInt(value.substr(4, 2), 10);\r\n\t\t\tif (value.length === 9) {\r\n\t\t\t\tif (year >= 1980) {\r\n\t\t\t\t\tyear -= 100;\r\n\t\t\t\t}\r\n\t\t\t\tif (year > 1953) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t} else if (year < 1954) {\r\n\t\t\t\tyear += 100;\r\n\t\t\t}\r\n\r\n\t\t\tif (!$.fn.bootstrapValidator.helpers.date(year, month, day)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// Check that the birth date is not in the future\r\n\t\t\tif (value.length === 10) {\r\n\t\t\t\tvar check = parseInt(value.substr(0, 9), 10) % 11;\r\n\t\t\t\tif (year < 1985) {\r\n\t\t\t\t\tcheck = check % 10;\r\n\t\t\t\t}\r\n\t\t\t\treturn (check + '' === value.substr(9, 1));\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Danish Personal Identification number (CPR)\r\n\t\t * Examples:\r\n\t\t * - Valid: 2110625629, 211062-5629\r\n\t\t * - Invalid: 511062-5629\r\n\t\t *\r\n\t\t * @see https://en.wikipedia.org/wiki/Personal_identification_number_(Denmark)\r\n\t\t * @param {String} value The ID\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_dk: function(value) {\r\n\t\t\tif (!/^[0-9]{6}[-]{0,1}[0-9]{4}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvalue = value.replace(/-/g, '');\r\n\t\t\tvar day   = parseInt(value.substr(0, 2), 10),\r\n\t\t\t\tmonth = parseInt(value.substr(2, 2), 10),\r\n\t\t\t\tyear  = parseInt(value.substr(4, 2), 10);\r\n\r\n\t\t\tswitch (true) {\r\n\t\t\t\tcase ('5678'.indexOf(value.charAt(6)) !== -1 && year >= 58):\r\n\t\t\t\t\tyear += 1800;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase ('0123'.indexOf(value.charAt(6)) !== -1):\r\n\t\t\t\tcase ('49'.indexOf(value.charAt(6)) !== -1 && year >= 37):\r\n\t\t\t\t\tyear += 1900;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tyear += 2000;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\treturn $.fn.bootstrapValidator.helpers.date(year, month, day);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Estonian Personal Identification Code (isikukood)\r\n\t\t * Examples:\r\n\t\t * - Valid: 37605030299\r\n\t\t *\r\n\t\t * @see http://et.wikipedia.org/wiki/Isikukood\r\n\t\t * @param {String} value The ID\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_ee: function(value) {\r\n\t\t\t// Use the same format as Lithuanian Personal Code\r\n\t\t\treturn this._lt(value);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Spanish personal identity code (DNI)\r\n\t\t * Support i) DNI (for Spanish citizens) and ii) NIE (for foreign people)\r\n\t\t *\r\n\t\t * Examples:\r\n\t\t * - Valid: i) 54362315K, 54362315-K; ii) X2482300W, X-2482300W, X-2482300-W\r\n\t\t * - Invalid: i) 54362315Z; ii) X-2482300A\r\n\t\t *\r\n\t\t * @see https://en.wikipedia.org/wiki/National_identification_number#Spain\r\n\t\t * @param {String} value The ID\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_es: function(value) {\r\n\t\t\tif (!/^[0-9A-Z]{8}[-]{0,1}[0-9A-Z]$/.test(value)                    // DNI\r\n\t\t\t\t&& !/^[XYZ][-]{0,1}[0-9]{7}[-]{0,1}[0-9A-Z]$/.test(value)) {    // NIE\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = value.replace(/-/g, '');\r\n\t\t\tvar index = 'XYZ'.indexOf(value.charAt(0));\r\n\t\t\tif (index !== -1) {\r\n\t\t\t\t// It is NIE number\r\n\t\t\t\tvalue = index + value.substr(1) + '';\r\n\t\t\t}\r\n\r\n\t\t\tvar check = parseInt(value.substr(0, 8), 10);\r\n\t\t\tcheck = 'TRWAGMYFPDXBNJZSQVHLCKE'[check % 23];\r\n\t\t\treturn (check === value.substr(8, 1));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Finnish Personal Identity Code (HETU)\r\n\t\t * Examples:\r\n\t\t * - Valid: 311280-888Y, 131052-308T\r\n\t\t * - Invalid: 131052-308U, 310252-308Y\r\n\t\t *\r\n\t\t * @param {String} value The ID\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_fi: function(value) {\r\n\t\t\tif (!/^[0-9]{6}[-+A][0-9]{3}[0-9ABCDEFHJKLMNPRSTUVWXY]$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar day       = parseInt(value.substr(0, 2), 10),\r\n\t\t\t\tmonth     = parseInt(value.substr(2, 2), 10),\r\n\t\t\t\tyear      = parseInt(value.substr(4, 2), 10),\r\n\t\t\t\tcenturies = {\r\n\t\t\t\t\t'+': 1800,\r\n\t\t\t\t\t'-': 1900,\r\n\t\t\t\t\t'A': 2000\r\n\t\t\t\t};\r\n\t\t\tyear = centuries[value.charAt(6)] + year;\r\n\r\n\t\t\tif (!$.fn.bootstrapValidator.helpers.date(year, month, day)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvar individual = parseInt(value.substr(7, 3), 10);\r\n\t\t\tif (individual < 2) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar n = value.substr(0, 6) + value.substr(7, 3) + '';\r\n\t\t\tn = parseInt(n, 10);\r\n\t\t\treturn '0123456789ABCDEFHJKLMNPRSTUVWXY'.charAt(n % 31) === value.charAt(10);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Croatian personal identification number (OIB)\r\n\t\t * Examples:\r\n\t\t * - Valid: 33392005961\r\n\t\t * - Invalid: 33392005962\r\n\t\t *\r\n\t\t * @param {String} value The ID\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_hr: function(value) {\r\n\t\t\tif (!/^[0-9]{11}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn $.fn.bootstrapValidator.helpers.mod11And10(value);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Irish Personal Public Service Number (PPS)\r\n\t\t * Examples:\r\n\t\t * - Valid: 6433435F, 6433435FT, 6433435FW, 6433435OA, 6433435IH, 1234567TW, 1234567FA\r\n\t\t * - Invalid: 6433435E, 6433435VH\r\n\t\t *\r\n\t\t * @see https://en.wikipedia.org/wiki/Personal_Public_Service_Number\r\n\t\t * @param {String} value The ID\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_ie: function(value) {\r\n\t\t\tif (!/^\\d{7}[A-W][AHWTX]?$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvar getCheckDigit = function(value) {\r\n\t\t\t\twhile (value.length < 7) {\r\n\t\t\t\t\tvalue = '0' + value;\r\n\t\t\t\t}\r\n\t\t\t\tvar alphabet = 'WABCDEFGHIJKLMNOPQRSTUV',\r\n\t\t\t\t\tsum      = 0;\r\n\t\t\t\tfor (var i = 0; i < 7; i++) {\r\n\t\t\t\t\tsum += parseInt(value.charAt(i), 10) * (8 - i);\r\n\t\t\t\t}\r\n\t\t\t\tsum += 9 * alphabet.indexOf(value.substr(7));\r\n\t\t\t\treturn alphabet[sum % 23];\r\n\t\t\t};\r\n\r\n\t\t\t// 2013 format\r\n\t\t\tif (value.length === 9 && ('A' === value.charAt(8) || 'H' === value.charAt(8))) {\r\n\t\t\t\treturn value.charAt(7) === getCheckDigit(value.substr(0, 7) + value.substr(8) + '');\r\n\t\t\t}\r\n\t\t\t// The old format\r\n\t\t\telse {\r\n\t\t\t\treturn value.charAt(7) === getCheckDigit(value.substr(0, 7));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Iceland national identification number (Kennitala)\r\n\t\t * Examples:\r\n\t\t * - Valid: 120174-3399, 1201743399, 0902862349\r\n\t\t *\r\n\t\t * @see http://en.wikipedia.org/wiki/Kennitala\r\n\t\t * @param {String} value The ID\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_is: function(value) {\r\n\t\t\tif (!/^[0-9]{6}[-]{0,1}[0-9]{4}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvalue = value.replace(/-/g, '');\r\n\t\t\tvar day     = parseInt(value.substr(0, 2), 10),\r\n\t\t\t\tmonth   = parseInt(value.substr(2, 2), 10),\r\n\t\t\t\tyear    = parseInt(value.substr(4, 2), 10),\r\n\t\t\t\tcentury = parseInt(value.charAt(9), 10);\r\n\r\n\t\t\tyear = (century === 9) ? (1900 + year) : ((20 + century) * 100 + year);\r\n\t\t\tif (!$.fn.bootstrapValidator.helpers.date(year, month, day, true)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t// Validate the check digit\r\n\t\t\tvar sum    = 0,\r\n\t\t\t\tweight = [3, 2, 7, 6, 5, 4, 3, 2];\r\n\t\t\tfor (var i = 0; i < 8; i++) {\r\n\t\t\t\tsum += parseInt(value.charAt(i), 10) * weight[i];\r\n\t\t\t}\r\n\t\t\tsum = 11 - sum % 11;\r\n\t\t\treturn (sum + '' === value.charAt(8));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Lithuanian Personal Code (Asmens kodas)\r\n\t\t * Examples:\r\n\t\t * - Valid: 38703181745\r\n\t\t * - Invalid: 38703181746, 78703181745, 38703421745\r\n\t\t *\r\n\t\t * @see http://en.wikipedia.org/wiki/National_identification_number#Lithuania\r\n\t\t * @see http://www.adomas.org/midi2007/pcode.html\r\n\t\t * @param {String} value The ID\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_lt: function(value) {\r\n\t\t\tif (!/^[0-9]{11}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar gender  = parseInt(value.charAt(0), 10),\r\n\t\t\t\tyear    = parseInt(value.substr(1, 2), 10),\r\n\t\t\t\tmonth   = parseInt(value.substr(3, 2), 10),\r\n\t\t\t\tday     = parseInt(value.substr(5, 2), 10),\r\n\t\t\t\tcentury = (gender % 2 === 0) ? (17 + gender / 2) : (17 + (gender + 1) / 2);\r\n\t\t\tyear = century * 100 + year;\r\n\t\t\tif (!$.fn.bootstrapValidator.helpers.date(year, month, day, true)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// Validate the check digit\r\n\t\t\tvar sum    = 0,\r\n\t\t\t\tweight = [1, 2, 3, 4, 5, 6, 7, 8, 9, 1];\r\n\t\t\tfor (var i = 0; i < 10; i++) {\r\n\t\t\t\tsum += parseInt(value.charAt(i), 10) * weight[i];\r\n\t\t\t}\r\n\t\t\tsum = sum % 11;\r\n\t\t\tif (sum !== 10) {\r\n\t\t\t\treturn sum + '' === value.charAt(10);\r\n\t\t\t}\r\n\r\n\t\t\t// Re-calculate the check digit\r\n\t\t\tsum    = 0;\r\n\t\t\tweight = [3, 4, 5, 6, 7, 8, 9, 1, 2, 3];\r\n\t\t\tfor (i = 0; i < 10; i++) {\r\n\t\t\t\tsum += parseInt(value.charAt(i), 10) * weight[i];\r\n\t\t\t}\r\n\t\t\tsum = sum % 11;\r\n\t\t\tif (sum === 10) {\r\n\t\t\t\tsum = 0;\r\n\t\t\t}\r\n\t\t\treturn (sum + '' === value.charAt(10));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Latvian Personal Code (Personas kods)\r\n\t\t * Examples:\r\n\t\t * - Valid: 161175-19997, 16117519997\r\n\t\t * - Invalid: 161375-19997\r\n\t\t *\r\n\t\t * @see http://laacz.lv/2006/11/25/pk-parbaudes-algoritms/\r\n\t\t * @param {String} value The ID\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_lv: function(value) {\r\n\t\t\tif (!/^[0-9]{6}[-]{0,1}[0-9]{5}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvalue = value.replace(/\\D/g, '');\r\n\t\t\t// Check birth date\r\n\t\t\tvar day   = parseInt(value.substr(0, 2), 10),\r\n\t\t\t\tmonth = parseInt(value.substr(2, 2), 10),\r\n\t\t\t\tyear  = parseInt(value.substr(4, 2), 10);\r\n\t\t\tyear = year + 1800 + parseInt(value.charAt(6), 10) * 100;\r\n\r\n\t\t\tif (!$.fn.bootstrapValidator.helpers.date(year, month, day, true)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// Check personal code\r\n\t\t\tvar sum    = 0,\r\n\t\t\t\tweight = [10, 5, 8, 4, 2, 1, 6, 3, 7, 9];\r\n\t\t\tfor (var i = 0; i < 10; i++) {\r\n\t\t\t\tsum += parseInt(value.charAt(i), 10) * weight[i];\r\n\t\t\t}\r\n\t\t\tsum = (sum + 1) % 11 % 10;\r\n\t\t\treturn (sum + '' === value.charAt(10));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Dutch national identification number (BSN)\r\n\t\t * Examples:\r\n\t\t * - Valid: 111222333, 941331490, 9413.31.490\r\n\t\t * - Invalid: 111252333\r\n\t\t *\r\n\t\t * @see https://nl.wikipedia.org/wiki/Burgerservicenummer\r\n\t\t * @param {String} value The ID\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_nl: function(value) {\r\n\t\t\twhile (value.length < 9) {\r\n\t\t\t\tvalue = '0' + value;\r\n\t\t\t}\r\n\t\t\tif (!/^[0-9]{4}[.]{0,1}[0-9]{2}[.]{0,1}[0-9]{3}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvalue = value.replace(/\\./g, '');\r\n\t\t\tif (parseInt(value, 10) === 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar sum    = 0,\r\n\t\t\t\tlength = value.length;\r\n\t\t\tfor (var i = 0; i < length - 1; i++) {\r\n\t\t\t\tsum += (9 - i) * parseInt(value.charAt(i), 10);\r\n\t\t\t}\r\n\t\t\tsum = sum % 11;\r\n\t\t\tif (sum === 10) {\r\n\t\t\t\tsum = 0;\r\n\t\t\t}\r\n\t\t\treturn (sum + '' === value.charAt(length - 1));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Romanian numerical personal code (CNP)\r\n\t\t * Examples:\r\n\t\t * - Valid: 1630615123457, 1800101221144\r\n\t\t * - Invalid: 8800101221144, 1632215123457, 1630615123458\r\n\t\t *\r\n\t\t * @see http://en.wikipedia.org/wiki/National_identification_number#Romania\r\n\t\t * @param {String} value The ID\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_ro: function(value) {\r\n\t\t\tif (!/^[0-9]{13}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar gender = parseInt(value.charAt(0), 10);\r\n\t\t\tif (gender === 0 || gender === 7 || gender === 8) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// Determine the date of birth\r\n\t\t\tvar year      = parseInt(value.substr(1, 2), 10),\r\n\t\t\t\tmonth     = parseInt(value.substr(3, 2), 10),\r\n\t\t\t\tday       = parseInt(value.substr(5, 2), 10),\r\n\t\t\t// The year of date is determined base on the gender\r\n\t\t\t\tcenturies = {\r\n\t\t\t\t\t'1': 1900,  // Male born between 1900 and 1999\r\n\t\t\t\t\t'2': 1900,  // Female born between 1900 and 1999\r\n\t\t\t\t\t'3': 1800,  // Male born between 1800 and 1899\r\n\t\t\t\t\t'4': 1800,  // Female born between 1800 and 1899\r\n\t\t\t\t\t'5': 2000,  // Male born after 2000\r\n\t\t\t\t\t'6': 2000   // Female born after 2000\r\n\t\t\t\t};\r\n\t\t\tif (day > 31 && month > 12) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (gender !== 9) {\r\n\t\t\t\tyear = centuries[gender + ''] + year;\r\n\t\t\t\tif (!$.fn.bootstrapValidator.helpers.date(year, month, day)) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Validate the check digit\r\n\t\t\tvar sum    = 0,\r\n\t\t\t\tweight = [2, 7, 9, 1, 4, 6, 3, 5, 8, 2, 7, 9],\r\n\t\t\t\tlength = value.length;\r\n\t\t\tfor (var i = 0; i < length - 1; i++) {\r\n\t\t\t\tsum += parseInt(value.charAt(i), 10) * weight[i];\r\n\t\t\t}\r\n\t\t\tsum = sum % 11;\r\n\t\t\tif (sum === 10) {\r\n\t\t\t\tsum = 1;\r\n\t\t\t}\r\n\t\t\treturn (sum + '' === value.charAt(length - 1));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Swedish personal identity number (personnummer)\r\n\t\t * Examples:\r\n\t\t * - Valid: 8112289874, 811228-9874, 811228+9874\r\n\t\t * - Invalid: 811228-9873\r\n\t\t *\r\n\t\t * @see http://en.wikipedia.org/wiki/Personal_identity_number_(Sweden)\r\n\t\t * @param {String} value The ID\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_se: function(value) {\r\n\t\t\tif (!/^[0-9]{10}$/.test(value) && !/^[0-9]{6}[-|+][0-9]{4}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvalue = value.replace(/[^0-9]/g, '');\r\n\r\n\t\t\tvar year  = parseInt(value.substr(0, 2), 10) + 1900,\r\n\t\t\t\tmonth = parseInt(value.substr(2, 2), 10),\r\n\t\t\t\tday   = parseInt(value.substr(4, 2), 10);\r\n\t\t\tif (!$.fn.bootstrapValidator.helpers.date(year, month, day)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// Validate the last check digit\r\n\t\t\treturn $.fn.bootstrapValidator.helpers.luhn(value);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Slovak national identifier number (RC)\r\n\t\t * Examples:\r\n\t\t * - Valid: 7103192745, 991231123\r\n\t\t * - Invalid: 7103192746, 1103492745\r\n\t\t *\r\n\t\t * @param {String} value The ID\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_sk: function(value) {\r\n\t\t\t// Slovakia uses the same format as Czech Republic\r\n\t\t\treturn this._cz(value);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate San Marino citizen number\r\n\t\t *\r\n\t\t * @see http://en.wikipedia.org/wiki/National_identification_number#San_Marino\r\n\t\t * @param {String} value The ID\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_sm: function(value) {\r\n\t\t\treturn /^\\d{5}$/.test(value);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate South African ID\r\n\t\t * Example:\r\n\t\t * - Valid: 8001015009087\r\n\t\t * - Invalid: 8001015009287, 8001015009086\r\n\t\t *\r\n\t\t * @see http://en.wikipedia.org/wiki/National_identification_number#South_Africa\r\n\t\t * @param {String} value The ID\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_za: function(value) {\r\n\t\t\tif (!/^[0-9]{10}[0|1][8|9][0-9]$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar year        = parseInt(value.substr(0, 2), 10),\r\n\t\t\t\tcurrentYear = new Date().getFullYear() % 100,\r\n\t\t\t\tmonth       = parseInt(value.substr(2, 2), 10),\r\n\t\t\t\tday         = parseInt(value.substr(4, 2), 10);\r\n\t\t\tyear = (year >= currentYear) ? (year + 1900) : (year + 2000);\r\n\r\n\t\t\tif (!$.fn.bootstrapValidator.helpers.date(year, month, day)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// Validate the last check digit\r\n\t\t\treturn $.fn.bootstrapValidator.helpers.luhn(value);\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.identical = $.extend($.fn.bootstrapValidator.i18n.identical || {}, {\r\n\t\t'default': 'Please enter the same value'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.identical = {\r\n\t\thtml5Attributes: {\r\n\t\t\tmessage: 'message',\r\n\t\t\tfield: 'field'\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Check if input value equals to value of particular one\r\n\t\t *\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Consists of the following key:\r\n\t\t * - field: The name of field that will be used to compare with current one\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tvar compareWith = validator.getFieldElements(options.field);\r\n\t\t\tif (compareWith === null) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tif (value === compareWith.val()) {\r\n\t\t\t\tvalidator.updateStatus(options.field, validator.STATUS_VALID, 'identical');\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.imei = $.extend($.fn.bootstrapValidator.i18n.imei || {}, {\r\n\t\t'default': 'Please enter a valid IMEI number'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.imei = {\r\n\t\t/**\r\n\t\t * Validate IMEI (International Mobile Station Equipment Identity)\r\n\t\t * Examples:\r\n\t\t * - Valid: 35-209900-176148-1, 35-209900-176148-23, 3568680000414120, 490154203237518\r\n\t\t * - Invalid: 490154203237517\r\n\t\t *\r\n\t\t * @see http://en.wikipedia.org/wiki/International_Mobile_Station_Equipment_Identity\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Can consist of the following keys:\r\n\t\t * - message: The invalid message\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tswitch (true) {\r\n\t\t\t\tcase /^\\d{15}$/.test(value):\r\n\t\t\t\tcase /^\\d{2}-\\d{6}-\\d{6}-\\d{1}$/.test(value):\r\n\t\t\t\tcase /^\\d{2}\\s\\d{6}\\s\\d{6}\\s\\d{1}$/.test(value):\r\n\t\t\t\t\tvalue = value.replace(/[^0-9]/g, '');\r\n\t\t\t\t\treturn $.fn.bootstrapValidator.helpers.luhn(value);\r\n\r\n\t\t\t\tcase /^\\d{14}$/.test(value):\r\n\t\t\t\tcase /^\\d{16}$/.test(value):\r\n\t\t\t\tcase /^\\d{2}-\\d{6}-\\d{6}(|-\\d{2})$/.test(value):\r\n\t\t\t\tcase /^\\d{2}\\s\\d{6}\\s\\d{6}(|\\s\\d{2})$/.test(value):\r\n\t\t\t\t\treturn true;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.integer = $.extend($.fn.bootstrapValidator.i18n.integer || {}, {\r\n\t\t'default': 'Please enter a valid number'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.integer = {\r\n\t\tenableByHtml5: function($field) {\r\n\t\t\treturn ('number' === $field.attr('type')) && ($field.attr('step') === undefined || $field.attr('step') % 1 === 0);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Return true if the input value is an integer\r\n\t\t *\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Can consist of the following key:\r\n\t\t * - message: The invalid message\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn /^(?:-?(?:0|[1-9][0-9]*))$/.test(value);\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.ip = $.extend($.fn.bootstrapValidator.i18n.ip || {}, {\r\n\t\t'default': 'Please enter a valid IP address',\r\n\t\tipv4: 'Please enter a valid IPv4 address',\r\n\t\tipv6: 'Please enter a valid IPv6 address'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.ip = {\r\n\t\thtml5Attributes: {\r\n\t\t\tmessage: 'message',\r\n\t\t\tipv4: 'ipv4',\r\n\t\t\tipv6: 'ipv6'\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Return true if the input value is a IP address.\r\n\t\t *\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Can consist of the following keys:\r\n\t\t * - ipv4: Enable IPv4 validator, default to true\r\n\t\t * - ipv6: Enable IPv6 validator, default to true\r\n\t\t * - message: The invalid message\r\n\t\t * @returns {Boolean|Object}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\toptions = $.extend({}, { ipv4: true, ipv6: true }, options);\r\n\r\n\t\t\tif (options.ipv4) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalid: /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(value),\r\n\t\t\t\t\tmessage: options.message || $.fn.bootstrapValidator.i18n.ip.ipv4\r\n\t\t\t\t};\r\n\t\t\t} else if (options.ipv6) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalid: /^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/.test(value),\r\n\t\t\t\t\tmessage: options.message || $.fn.bootstrapValidator.i18n.ip.ipv6\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.isbn = $.extend($.fn.bootstrapValidator.i18n.isbn || {}, {\r\n\t\t'default': 'Please enter a valid ISBN number'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.isbn = {\r\n\t\t/**\r\n\t\t * Return true if the input value is a valid ISBN 10 or ISBN 13 number\r\n\t\t * Examples:\r\n\t\t * - Valid:\r\n\t\t * ISBN 10: 99921-58-10-7, 9971-5-0210-0, 960-425-059-0, 80-902734-1-6, 85-359-0277-5, 1-84356-028-3, 0-684-84328-5, 0-8044-2957-X, 0-85131-041-9, 0-943396-04-2, 0-9752298-0-X\r\n\t\t * ISBN 13: 978-0-306-40615-7\r\n\t\t * - Invalid:\r\n\t\t * ISBN 10: 99921-58-10-6\r\n\t\t * ISBN 13: 978-0-306-40615-6\r\n\t\t *\r\n\t\t * @see http://en.wikipedia.org/wiki/International_Standard_Book_Number\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} [options] Can consist of the following keys:\r\n\t\t * - message: The invalid message\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t// http://en.wikipedia.org/wiki/International_Standard_Book_Number#Overview\r\n\t\t\t// Groups are separated by a hyphen or a space\r\n\t\t\tvar type;\r\n\t\t\tswitch (true) {\r\n\t\t\t\tcase /^\\d{9}[\\dX]$/.test(value):\r\n\t\t\t\tcase (value.length === 13 && /^(\\d+)-(\\d+)-(\\d+)-([\\dX])$/.test(value)):\r\n\t\t\t\tcase (value.length === 13 && /^(\\d+)\\s(\\d+)\\s(\\d+)\\s([\\dX])$/.test(value)):\r\n\t\t\t\t\ttype = 'ISBN10';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase /^(978|979)\\d{9}[\\dX]$/.test(value):\r\n\t\t\t\tcase (value.length === 17 && /^(978|979)-(\\d+)-(\\d+)-(\\d+)-([\\dX])$/.test(value)):\r\n\t\t\t\tcase (value.length === 17 && /^(978|979)\\s(\\d+)\\s(\\d+)\\s(\\d+)\\s([\\dX])$/.test(value)):\r\n\t\t\t\t\ttype = 'ISBN13';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// Replace all special characters except digits and X\r\n\t\t\tvalue = value.replace(/[^0-9X]/gi, '');\r\n\t\t\tvar chars  = value.split(''),\r\n\t\t\t\tlength = chars.length,\r\n\t\t\t\tsum    = 0,\r\n\t\t\t\ti,\r\n\t\t\t\tchecksum;\r\n\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase 'ISBN10':\r\n\t\t\t\t\tsum = 0;\r\n\t\t\t\t\tfor (i = 0; i < length - 1; i++) {\r\n\t\t\t\t\t\tsum += parseInt(chars[i], 10) * (10 - i);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchecksum = 11 - (sum % 11);\r\n\t\t\t\t\tif (checksum === 11) {\r\n\t\t\t\t\t\tchecksum = 0;\r\n\t\t\t\t\t} else if (checksum === 10) {\r\n\t\t\t\t\t\tchecksum = 'X';\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn (checksum + '' === chars[length - 1]);\r\n\r\n\t\t\t\tcase 'ISBN13':\r\n\t\t\t\t\tsum = 0;\r\n\t\t\t\t\tfor (i = 0; i < length - 1; i++) {\r\n\t\t\t\t\t\tsum += ((i % 2 === 0) ? parseInt(chars[i], 10) : (parseInt(chars[i], 10) * 3));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchecksum = 10 - (sum % 10);\r\n\t\t\t\t\tif (checksum === 10) {\r\n\t\t\t\t\t\tchecksum = '0';\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn (checksum + '' === chars[length - 1]);\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.isin = $.extend($.fn.bootstrapValidator.i18n.isin || {}, {\r\n\t\t'default': 'Please enter a valid ISIN number'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.isin = {\r\n\t\t// Available country codes\r\n\t\t// See http://isin.net/country-codes/\r\n\t\tCOUNTRY_CODES: 'AF|AX|AL|DZ|AS|AD|AO|AI|AQ|AG|AR|AM|AW|AU|AT|AZ|BS|BH|BD|BB|BY|BE|BZ|BJ|BM|BT|BO|BQ|BA|BW|BV|BR|IO|BN|BG|BF|BI|KH|CM|CA|CV|KY|CF|TD|CL|CN|CX|CC|CO|KM|CG|CD|CK|CR|CI|HR|CU|CW|CY|CZ|DK|DJ|DM|DO|EC|EG|SV|GQ|ER|EE|ET|FK|FO|FJ|FI|FR|GF|PF|TF|GA|GM|GE|DE|GH|GI|GR|GL|GD|GP|GU|GT|GG|GN|GW|GY|HT|HM|VA|HN|HK|HU|IS|IN|ID|IR|IQ|IE|IM|IL|IT|JM|JP|JE|JO|KZ|KE|KI|KP|KR|KW|KG|LA|LV|LB|LS|LR|LY|LI|LT|LU|MO|MK|MG|MW|MY|MV|ML|MT|MH|MQ|MR|MU|YT|MX|FM|MD|MC|MN|ME|MS|MA|MZ|MM|NA|NR|NP|NL|NC|NZ|NI|NE|NG|NU|NF|MP|NO|OM|PK|PW|PS|PA|PG|PY|PE|PH|PN|PL|PT|PR|QA|RE|RO|RU|RW|BL|SH|KN|LC|MF|PM|VC|WS|SM|ST|SA|SN|RS|SC|SL|SG|SX|SK|SI|SB|SO|ZA|GS|SS|ES|LK|SD|SR|SJ|SZ|SE|CH|SY|TW|TJ|TZ|TH|TL|TG|TK|TO|TT|TN|TR|TM|TC|TV|UG|UA|AE|GB|US|UM|UY|UZ|VU|VE|VN|VG|VI|WF|EH|YE|ZM|ZW',\r\n\r\n\t\t/**\r\n\t\t * Validate an ISIN (International Securities Identification Number)\r\n\t\t * Examples:\r\n\t\t * - Valid: US0378331005, AU0000XVGZA3, GB0002634946\r\n\t\t * - Invalid: US0378331004, AA0000XVGZA3\r\n\t\t *\r\n\t\t * @see http://en.wikipedia.org/wiki/International_Securities_Identifying_Number\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Can consist of the following keys:\r\n\t\t * - message: The invalid message\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = value.toUpperCase();\r\n\t\t\tvar regex = new RegExp('^(' + this.COUNTRY_CODES + ')[0-9A-Z]{10}$');\r\n\t\t\tif (!regex.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvar converted = '',\r\n\t\t\t\tlength    = value.length;\r\n\t\t\t// Convert letters to number\r\n\t\t\tfor (var i = 0; i < length - 1; i++) {\r\n\t\t\t\tvar c = value.charCodeAt(i);\r\n\t\t\t\tconverted += ((c > 57) ? (c - 55).toString() : value.charAt(i));\r\n\t\t\t}\r\n\r\n\t\t\tvar digits = '',\r\n\t\t\t\tn      = converted.length,\r\n\t\t\t\tgroup  = (n % 2 !== 0) ? 0 : 1;\r\n\t\t\tfor (i = 0; i < n; i++) {\r\n\t\t\t\tdigits += (parseInt(converted[i], 10) * ((i % 2) === group ? 2 : 1) + '');\r\n\t\t\t}\r\n\r\n\t\t\tvar sum = 0;\r\n\t\t\tfor (i = 0; i < digits.length; i++) {\r\n\t\t\t\tsum += parseInt(digits.charAt(i), 10);\r\n\t\t\t}\r\n\t\t\tsum = (10 - (sum % 10)) % 10;\r\n\t\t\treturn sum + '' === value.charAt(length - 1);\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.ismn = $.extend($.fn.bootstrapValidator.i18n.ismn || {}, {\r\n\t\t'default': 'Please enter a valid ISMN number'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.ismn = {\r\n\t\t/**\r\n\t\t * Validate ISMN (International Standard Music Number)\r\n\t\t * Examples:\r\n\t\t * - Valid: M230671187, 979-0-0601-1561-5, 979 0 3452 4680 5, 9790060115615\r\n\t\t * - Invalid: 9790060115614\r\n\t\t *\r\n\t\t * @see http://en.wikipedia.org/wiki/International_Standard_Music_Number\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Can consist of the following keys:\r\n\t\t * - message: The invalid message\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t// Groups are separated by a hyphen or a space\r\n\t\t\tvar type;\r\n\t\t\tswitch (true) {\r\n\t\t\t\tcase /^M\\d{9}$/.test(value):\r\n\t\t\t\tcase /^M-\\d{4}-\\d{4}-\\d{1}$/.test(value):\r\n\t\t\t\tcase /^M\\s\\d{4}\\s\\d{4}\\s\\d{1}$/.test(value):\r\n\t\t\t\t\ttype = 'ISMN10';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase /^9790\\d{9}$/.test(value):\r\n\t\t\t\tcase /^979-0-\\d{4}-\\d{4}-\\d{1}$/.test(value):\r\n\t\t\t\tcase /^979\\s0\\s\\d{4}\\s\\d{4}\\s\\d{1}$/.test(value):\r\n\t\t\t\t\ttype = 'ISMN13';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif ('ISMN10' === type) {\r\n\t\t\t\tvalue = '9790' + value.substr(1);\r\n\t\t\t}\r\n\r\n\t\t\t// Replace all special characters except digits\r\n\t\t\tvalue = value.replace(/[^0-9]/gi, '');\r\n\t\t\tvar length = value.length,\r\n\t\t\t\tsum    = 0,\r\n\t\t\t\tweight = [1, 3];\r\n\t\t\tfor (var i = 0; i < length - 1; i++) {\r\n\t\t\t\tsum += parseInt(value.charAt(i), 10) * weight[i % 2];\r\n\t\t\t}\r\n\t\t\tsum = 10 - sum % 10;\r\n\t\t\treturn (sum + '' === value.charAt(length - 1));\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.issn = $.extend($.fn.bootstrapValidator.i18n.issn || {}, {\r\n\t\t'default': 'Please enter a valid ISSN number'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.issn = {\r\n\t\t/**\r\n\t\t * Validate ISSN (International Standard Serial Number)\r\n\t\t * Examples:\r\n\t\t * - Valid: 0378-5955, 0024-9319, 0032-1478\r\n\t\t * - Invalid: 0032-147X\r\n\t\t *\r\n\t\t * @see http://en.wikipedia.org/wiki/International_Standard_Serial_Number\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Can consist of the following keys:\r\n\t\t * - message: The invalid message\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t// Groups are separated by a hyphen or a space\r\n\t\t\tif (!/^\\d{4}\\-\\d{3}[\\dX]$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// Replace all special characters except digits and X\r\n\t\t\tvalue = value.replace(/[^0-9X]/gi, '');\r\n\t\t\tvar chars  = value.split(''),\r\n\t\t\t\tlength = chars.length,\r\n\t\t\t\tsum    = 0;\r\n\r\n\t\t\tif (chars[7] === 'X') {\r\n\t\t\t\tchars[7] = 10;\r\n\t\t\t}\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tsum += parseInt(chars[i], 10) * (8 - i);\r\n\t\t\t}\r\n\t\t\treturn (sum % 11 === 0);\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.lessThan = $.extend($.fn.bootstrapValidator.i18n.lessThan || {}, {\r\n\t\t'default': 'Please enter a value less than or equal to %s',\r\n\t\tnotInclusive: 'Please enter a value less than %s'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.lessThan = {\r\n\t\thtml5Attributes: {\r\n\t\t\tmessage: 'message',\r\n\t\t\tvalue: 'value',\r\n\t\t\tinclusive: 'inclusive'\r\n\t\t},\r\n\r\n\t\tenableByHtml5: function($field) {\r\n\t\t\tvar max = $field.attr('max');\r\n\t\t\tif (max) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: max\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Return true if the input value is less than or equal to given number\r\n\t\t *\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Can consist of the following keys:\r\n\t\t * - value: The number used to compare to. It can be\r\n\t\t *      - A number\r\n\t\t *      - Name of field which its value defines the number\r\n\t\t *      - Name of callback function that returns the number\r\n\t\t *      - A callback function that returns the number\r\n\t\t *\r\n\t\t * - inclusive [optional]: Can be true or false. Default is true\r\n\t\t * - message: The invalid message\r\n\t\t * @returns {Boolean|Object}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tvar compareTo = $.isNumeric(options.value) ? options.value : validator.getDynamicOption($field, options.value);\r\n\r\n\t\t\tvalue = parseFloat(value);\r\n\t\t\treturn (options.inclusive === true || options.inclusive === undefined)\r\n\t\t\t\t? {\r\n\t\t\t\tvalid: value <= compareTo,\r\n\t\t\t\tmessage: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.lessThan['default'], compareTo)\r\n\t\t\t}\r\n\t\t\t\t: {\r\n\t\t\t\tvalid: value < compareTo,\r\n\t\t\t\tmessage: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.lessThan.notInclusive, compareTo)\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.mac = $.extend($.fn.bootstrapValidator.i18n.mac || {}, {\r\n\t\t'default': 'Please enter a valid MAC address'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.mac = {\r\n\t\t/**\r\n\t\t * Return true if the input value is a MAC address.\r\n\t\t *\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Can consist of the following keys:\r\n\t\t * - message: The invalid message\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\treturn /^([0-9A-F]{2}[:-]){5}([0-9A-F]{2})$/.test(value);\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.notEmpty = $.extend($.fn.bootstrapValidator.i18n.notEmpty || {}, {\r\n\t\t'default': 'Please enter a value'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.notEmpty = {\r\n\t\tenableByHtml5: function($field) {\r\n\t\t\tvar required = $field.attr('required') + '';\r\n\t\t\treturn ('required' === required || 'true' === required);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Check if input value is empty or not\r\n\t\t *\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar type = $field.attr('type');\r\n\t\t\tif ('radio' === type || 'checkbox' === type) {\r\n\t\t\t\treturn validator\r\n\t\t\t\t\t.getFieldElements($field.attr('data-bv-field'))\r\n\t\t\t\t\t.filter(':checked')\r\n\t\t\t\t\t.length > 0;\r\n\t\t\t}\r\n\r\n\t\t\treturn $.trim($field.val()) !== '';\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.numeric = $.extend($.fn.bootstrapValidator.i18n.numeric || {}, {\r\n\t\t'default': 'Please enter a valid float number'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.numeric = {\r\n\t\thtml5Attributes: {\r\n\t\t\tmessage: 'message',\r\n\t\t\tseparator: 'separator'\r\n\t\t},\r\n\r\n\t\tenableByHtml5: function($field) {\r\n\t\t\treturn ('number' === $field.attr('type')) && ($field.attr('step') !== undefined) && ($field.attr('step') % 1 !== 0);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate decimal number\r\n\t\t *\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Consist of key:\r\n\t\t * - message: The invalid message\r\n\t\t * - separator: The decimal separator. Can be \".\" (default), \",\"\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tvar separator = options.separator || '.';\r\n\t\t\tif (separator !== '.') {\r\n\t\t\t\tvalue = value.replace(separator, '.');\r\n\t\t\t}\r\n\r\n\t\t\treturn !isNaN(parseFloat(value)) && isFinite(value);\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.phone = $.extend($.fn.bootstrapValidator.i18n.phone || {}, {\r\n\t\t'default': 'Please enter a valid phone number',\r\n\t\tcountryNotSupported: 'The country code %s is not supported',\r\n\t\tcountry: 'Please enter a valid phone number in %s',\r\n\t\tcountries: {\r\n\t\t\tGB: 'United Kingdom',\r\n\t\t\tUS: 'USA'\r\n\t\t}\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.phone = {\r\n\t\thtml5Attributes: {\r\n\t\t\tmessage: 'message',\r\n\t\t\tcountry: 'country'\r\n\t\t},\r\n\r\n\t\t// The supported countries\r\n\t\tCOUNTRY_CODES: ['GB', 'US'],\r\n\r\n\t\t/**\r\n\t\t * Return true if the input value contains a valid phone number for the country\r\n\t\t * selected in the options\r\n\t\t *\r\n\t\t * @param {BootstrapValidator} validator Validate plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Consist of key:\r\n\t\t * - message: The invalid message\r\n\t\t * - country: The ISO-3166 country code. It can be\r\n\t\t *      - A country code\r\n\t\t *      - Name of field which its value defines the country code\r\n\t\t *      - Name of callback function that returns the country code\r\n\t\t *      - A callback function that returns the country code\r\n\t\t *\r\n\t\t * Currently it only supports United State (US) or United Kingdom (GB) countries\r\n\t\t * @returns {Boolean|Object}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tvar country = options.country;\r\n\t\t\tif (typeof country !== 'string' || $.inArray(country, this.COUNTRY_CODES) === -1) {\r\n\t\t\t\t// Try to determine the country\r\n\t\t\t\tcountry = validator.getDynamicOption($field, country);\r\n\t\t\t}\r\n\r\n\t\t\tif (!country || $.inArray(country.toUpperCase(), this.COUNTRY_CODES) === -1) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalid: false,\r\n\t\t\t\t\tmessage: $.fn.bootstrapValidator.helpers.format($.fn.bootstrapValidator.i18n.phone.countryNotSupported, country)\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tvar isValid = true;\r\n\t\t\tswitch (country.toUpperCase()) {\r\n\t\t\t\tcase 'GB':\r\n\t\t\t\t\t// http://aa-asterisk.org.uk/index.php/Regular_Expressions_for_Validating_and_Formatting_GB_Telephone_Numbers#Match_GB_telephone_number_in_any_format\r\n\t\t\t\t\t// Test: http://regexr.com/38uhv\r\n\t\t\t\t\tvalue   = $.trim(value);\r\n\t\t\t\t\tisValid = (/^\\(?(?:(?:0(?:0|11)\\)?[\\s-]?\\(?|\\+)44\\)?[\\s-]?\\(?(?:0\\)?[\\s-]?\\(?)?|0)(?:\\d{2}\\)?[\\s-]?\\d{4}[\\s-]?\\d{4}|\\d{3}\\)?[\\s-]?\\d{3}[\\s-]?\\d{3,4}|\\d{4}\\)?[\\s-]?(?:\\d{5}|\\d{3}[\\s-]?\\d{3})|\\d{5}\\)?[\\s-]?\\d{4,5}|8(?:00[\\s-]?11[\\s-]?11|45[\\s-]?46[\\s-]?4\\d))(?:(?:[\\s-]?(?:x|ext\\.?\\s?|\\#)\\d+)?)$/).test(value);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'US':\r\n\t\t\t\t/* falls through */\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// Make sure US phone numbers have 10 digits\r\n\t\t\t\t\t// May start with 1, +1, or 1-; should discard\r\n\t\t\t\t\t// Area code may be delimited with (), & sections may be delimited with . or -\r\n\t\t\t\t\t// Test: http://regexr.com/38mqi\r\n\t\t\t\t\tvalue   = value.replace(/\\D/g, '');\r\n\t\t\t\t\tisValid = (/^(?:(1\\-?)|(\\+1 ?))?\\(?(\\d{3})[\\)\\-\\.]?(\\d{3})[\\-\\.]?(\\d{4})$/).test(value) && (value.length === 10);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tvalid: isValid,\r\n\t\t\t\tmessage: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.phone.country, $.fn.bootstrapValidator.i18n.phone.countries[country])\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.regexp = $.extend($.fn.bootstrapValidator.i18n.regexp || {}, {\r\n\t\t'default': 'Please enter a value matching the pattern'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.regexp = {\r\n\t\thtml5Attributes: {\r\n\t\t\tmessage: 'message',\r\n\t\t\tregexp: 'regexp'\r\n\t\t},\r\n\r\n\t\tenableByHtml5: function($field) {\r\n\t\t\tvar pattern = $field.attr('pattern');\r\n\t\t\tif (pattern) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tregexp: pattern\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Check if the element value matches given regular expression\r\n\t\t *\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Consists of the following key:\r\n\t\t * - regexp: The regular expression you need to check\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tvar regexp = ('string' === typeof options.regexp) ? new RegExp(options.regexp) : options.regexp;\r\n\t\t\treturn regexp.test(value);\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.remote = $.extend($.fn.bootstrapValidator.i18n.remote || {}, {\r\n\t\t'default': 'Please enter a valid value'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.remote = {\r\n\t\thtml5Attributes: {\r\n\t\t\tmessage: 'message',\r\n\t\t\turl: 'url',\r\n\t\t\tname: 'name'\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Request a remote server to check the input value\r\n\t\t *\r\n\t\t * @param {BootstrapValidator} validator Plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Can consist of the following keys:\r\n\t\t * - url {String|Function}\r\n\t\t * - type {String} [optional] Can be GET or POST (default)\r\n\t\t * - data {Object|Function} [optional]: By default, it will take the value\r\n\t\t *  {\r\n         *      <fieldName>: <fieldValue>\r\n         *  }\r\n\t\t * - name {String} [optional]: Override the field name for the request.\r\n\t\t * - message: The invalid message\r\n\t\t * @returns {Boolean|Deferred}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tvar name = $field.attr('data-bv-field'),\r\n\t\t\t\tdata = options.data || {},\r\n\t\t\t\turl  = options.url,\r\n\t\t\t\ttype = options.type || 'POST';\r\n\r\n\t\t\t// Support dynamic data\r\n\t\t\tif ('function' === typeof data) {\r\n\t\t\t\tdata = data.call(this, validator);\r\n\t\t\t}\r\n\r\n\t\t\t// Support dynamic url\r\n\t\t\tif ('function' === typeof url) {\r\n\t\t\t\turl = url.call(this, validator);\r\n\t\t\t}\r\n\r\n\t\t\tdata[options.name || name] = value;\r\n\r\n\t\t\tvar dfd = new $.Deferred();\r\n\t\t\tvar xhr = $.ajax({\r\n\t\t\t\ttype: type,\r\n\t\t\t\turl: url,\r\n\t\t\t\tdataType: 'json',\r\n\t\t\t\tdata: data\r\n\t\t\t});\r\n\t\t\txhr.then(function(response) {\r\n\t\t\t\tdfd.resolve($field, 'remote', response.valid === true || response.valid === 'true', response.message ? response.message : null);\r\n\t\t\t});\r\n\r\n\t\t\tdfd.fail(function() {\r\n\t\t\t\txhr.abort();\r\n\t\t\t});\r\n\r\n\t\t\treturn dfd;\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.rtn = $.extend($.fn.bootstrapValidator.i18n.rtn || {}, {\r\n\t\t'default': 'Please enter a valid RTN number'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.rtn = {\r\n\t\t/**\r\n\t\t * Validate a RTN (Routing transit number)\r\n\t\t * Examples:\r\n\t\t * - Valid: 021200025, 789456124\r\n\t\t *\r\n\t\t * @see http://en.wikipedia.org/wiki/Routing_transit_number\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Can consist of the following keys:\r\n\t\t * - message: The invalid message\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tif (!/^\\d{9}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvar sum = 0;\r\n\t\t\tfor (var i = 0; i < value.length; i += 3) {\r\n\t\t\t\tsum += parseInt(value.charAt(i),     10) * 3\r\n\t\t\t\t\t+  parseInt(value.charAt(i + 1), 10) * 7\r\n\t\t\t\t\t+  parseInt(value.charAt(i + 2), 10);\r\n\t\t\t}\r\n\t\t\treturn (sum !== 0 && sum % 10 === 0);\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.sedol = $.extend($.fn.bootstrapValidator.i18n.sedol || {}, {\r\n\t\t'default': 'Please enter a valid SEDOL number'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.sedol = {\r\n\t\t/**\r\n\t\t * Validate a SEDOL (Stock Exchange Daily Official List)\r\n\t\t * Examples:\r\n\t\t * - Valid: 0263494, B0WNLY7\r\n\t\t *\r\n\t\t * @see http://en.wikipedia.org/wiki/SEDOL\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Can consist of the following keys:\r\n\t\t * - message: The invalid message\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = value.toUpperCase();\r\n\t\t\tif (!/^[0-9A-Z]{7}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvar sum    = 0,\r\n\t\t\t\tweight = [1, 3, 1, 7, 3, 9, 1],\r\n\t\t\t\tlength = value.length;\r\n\t\t\tfor (var i = 0; i < length - 1; i++) {\r\n\t\t\t\tsum += weight[i] * parseInt(value.charAt(i), 36);\r\n\t\t\t}\r\n\t\t\tsum = (10 - sum % 10) % 10;\r\n\t\t\treturn sum + '' === value.charAt(length - 1);\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.siren = $.extend($.fn.bootstrapValidator.i18n.siren || {}, {\r\n\t\t'default': 'Please enter a valid SIREN number'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.siren = {\r\n\t\t/**\r\n\t\t * Check if a string is a siren number\r\n\t\t *\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Consist of key:\r\n\t\t * - message: The invalid message\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tif (!/^\\d{9}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn $.fn.bootstrapValidator.helpers.luhn(value);\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.siret = $.extend($.fn.bootstrapValidator.i18n.siret || {}, {\r\n\t\t'default': 'Please enter a valid SIRET number'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.siret = {\r\n\t\t/**\r\n\t\t * Check if a string is a siret number\r\n\t\t *\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Consist of key:\r\n\t\t * - message: The invalid message\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tvar sum    = 0,\r\n\t\t\t\tlength = value.length,\r\n\t\t\t\ttmp;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttmp = parseInt(value.charAt(i), 10);\r\n\t\t\t\tif ((i % 2) === 0) {\r\n\t\t\t\t\ttmp = tmp * 2;\r\n\t\t\t\t\tif (tmp > 9) {\r\n\t\t\t\t\t\ttmp -= 9;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tsum += tmp;\r\n\t\t\t}\r\n\t\t\treturn (sum % 10 === 0);\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.step = $.extend($.fn.bootstrapValidator.i18n.step || {}, {\r\n\t\t'default': 'Please enter a valid step of %s'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.step = {\r\n\t\thtml5Attributes: {\r\n\t\t\tmessage: 'message',\r\n\t\t\tbase: 'baseValue',\r\n\t\t\tstep: 'step'\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Return true if the input value is valid step one\r\n\t\t *\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Can consist of the following keys:\r\n\t\t * - baseValue: The base value\r\n\t\t * - step: The step\r\n\t\t * - message: The invalid message\r\n\t\t * @returns {Boolean|Object}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\toptions = $.extend({}, { baseValue: 0, step: 1 }, options);\r\n\t\t\tvalue   = parseFloat(value);\r\n\t\t\tif (!$.isNumeric(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvar round = function(x, precision) {\r\n\t\t\t\t\tvar m = Math.pow(10, precision);\r\n\t\t\t\t\tx = x * m;\r\n\t\t\t\t\tvar sign   = (x > 0) | -(x < 0),\r\n\t\t\t\t\t\tisHalf = (x % 1 === 0.5 * sign);\r\n\t\t\t\t\tif (isHalf) {\r\n\t\t\t\t\t\treturn (Math.floor(x) + (sign > 0)) / m;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn Math.round(x) / m;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tfloatMod = function(x, y) {\r\n\t\t\t\t\tif (y === 0.0) {\r\n\t\t\t\t\t\treturn 1.0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar dotX      = (x + '').split('.'),\r\n\t\t\t\t\t\tdotY      = (y + '').split('.'),\r\n\t\t\t\t\t\tprecision = ((dotX.length === 1) ? 0 : dotX[1].length) + ((dotY.length === 1) ? 0 : dotY[1].length);\r\n\t\t\t\t\treturn round(x - y * Math.floor(x / y), precision);\r\n\t\t\t\t};\r\n\r\n\t\t\tvar mod = floatMod(value - options.baseValue, options.step);\r\n\t\t\treturn {\r\n\t\t\t\tvalid: mod === 0.0 || mod === options.step,\r\n\t\t\t\tmessage: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.step['default'], [options.step])\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.stringCase = $.extend($.fn.bootstrapValidator.i18n.stringCase || {}, {\r\n\t\t'default': 'Please enter only lowercase characters',\r\n\t\tupper: 'Please enter only uppercase characters'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.stringCase = {\r\n\t\thtml5Attributes: {\r\n\t\t\tmessage: 'message',\r\n\t\t\t'case': 'case'\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Check if a string is a lower or upper case one\r\n\t\t *\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Consist of key:\r\n\t\t * - message: The invalid message\r\n\t\t * - case: Can be 'lower' (default) or 'upper'\r\n\t\t * @returns {Object}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tvar stringCase = (options['case'] || 'lower').toLowerCase();\r\n\t\t\treturn {\r\n\t\t\t\tvalid: ('upper' === stringCase) ? value === value.toUpperCase() : value === value.toLowerCase(),\r\n\t\t\t\tmessage: options.message || (('upper' === stringCase) ? $.fn.bootstrapValidator.i18n.stringCase.upper : $.fn.bootstrapValidator.i18n.stringCase['default'])\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.stringLength = $.extend($.fn.bootstrapValidator.i18n.stringLength || {}, {\r\n\t\t'default': 'Please enter a value with valid length',\r\n\t\tless: 'Please enter less than %s characters',\r\n\t\tmore: 'Please enter more than %s characters',\r\n\t\tbetween: 'Please enter value between %s and %s characters long'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.stringLength = {\r\n\t\thtml5Attributes: {\r\n\t\t\tmessage: 'message',\r\n\t\t\tmin: 'min',\r\n\t\t\tmax: 'max'\r\n\t\t},\r\n\r\n\t\tenableByHtml5: function($field) {\r\n\t\t\tvar maxLength = $field.attr('maxlength');\r\n\t\t\tif (maxLength) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tmax: parseInt(maxLength, 10)\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Check if the length of element value is less or more than given number\r\n\t\t *\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Consists of following keys:\r\n\t\t * - min\r\n\t\t * - max\r\n\t\t * At least one of two keys is required\r\n\t\t * The min, max keys define the number which the field value compares to. min, max can be\r\n\t\t *      - A number\r\n\t\t *      - Name of field which its value defines the number\r\n\t\t *      - Name of callback function that returns the number\r\n\t\t *      - A callback function that returns the number\r\n\t\t *\r\n\t\t * - message: The invalid message\r\n\t\t * @returns {Object}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tvar min     = $.isNumeric(options.min) ? options.min : validator.getDynamicOption($field, options.min),\r\n\t\t\t\tmax     = $.isNumeric(options.max) ? options.max : validator.getDynamicOption($field, options.max),\r\n\t\t\t\tlength  = value.length,\r\n\t\t\t\tisValid = true,\r\n\t\t\t\tmessage = options.message || $.fn.bootstrapValidator.i18n.stringLength['default'];\r\n\r\n\t\t\tif ((min && length < parseInt(min, 10)) || (max && length > parseInt(max, 10))) {\r\n\t\t\t\tisValid = false;\r\n\t\t\t}\r\n\r\n\t\t\tswitch (true) {\r\n\t\t\t\tcase (!!min && !!max):\r\n\t\t\t\t\tmessage = $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.stringLength.between, [parseInt(min, 10), parseInt(max, 10)]);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase (!!min):\r\n\t\t\t\t\tmessage = $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.stringLength.more, parseInt(min, 10));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase (!!max):\r\n\t\t\t\t\tmessage = $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.stringLength.less, parseInt(max, 10));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\treturn { valid: isValid, message: message };\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.uri = $.extend($.fn.bootstrapValidator.i18n.uri || {}, {\r\n\t\t'default': 'Please enter a valid URI'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.uri = {\r\n\t\thtml5Attributes: {\r\n\t\t\tmessage: 'message',\r\n\t\t\tallowlocal: 'allowLocal'\r\n\t\t},\r\n\r\n\t\tenableByHtml5: function($field) {\r\n\t\t\treturn ('url' === $field.attr('type'));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Return true if the input value is a valid URL\r\n\t\t *\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options\r\n\t\t * - message: The error message\r\n\t\t * - allowLocal: Allow the private and local network IP. Default to false\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t// Credit to https://gist.github.com/dperini/729294\r\n\t\t\t//\r\n\t\t\t// Regular Expression for URL validation\r\n\t\t\t//\r\n\t\t\t// Author: Diego Perini\r\n\t\t\t// Updated: 2010/12/05\r\n\t\t\t//\r\n\t\t\t// the regular expression composed & commented\r\n\t\t\t// could be easily tweaked for RFC compliance,\r\n\t\t\t// it was expressly modified to fit & satisfy\r\n\t\t\t// these test for an URL shortener:\r\n\t\t\t//\r\n\t\t\t//   http://mathiasbynens.be/demo/url-regex\r\n\t\t\t//\r\n\t\t\t// Notes on possible differences from a standard/generic validation:\r\n\t\t\t//\r\n\t\t\t// - utf-8 char class take in consideration the full Unicode range\r\n\t\t\t// - TLDs have been made mandatory so single names like \"localhost\" fails\r\n\t\t\t// - protocols have been restricted to ftp, http and https only as requested\r\n\t\t\t//\r\n\t\t\t// Changes:\r\n\t\t\t//\r\n\t\t\t// - IP address dotted notation validation, range: 1.0.0.0 - 223.255.255.255\r\n\t\t\t//   first and last IP address of each class is considered invalid\r\n\t\t\t//   (since they are broadcast/network addresses)\r\n\t\t\t//\r\n\t\t\t// - Added exclusion of private, reserved and/or local networks ranges\r\n\t\t\t//\r\n\t\t\tvar allowLocal = options.allowLocal === true || options.allowLocal === 'true',\r\n\t\t\t\turlExp     = new RegExp(\r\n\t\t\t\t\t\t\"^\" +\r\n\t\t\t\t\t\t// protocol identifier\r\n\t\t\t\t\t\t\"(?:(?:https?|ftp)://)\" +\r\n\t\t\t\t\t\t// user:pass authentication\r\n\t\t\t\t\t\t\"(?:\\\\S+(?::\\\\S*)?@)?\" +\r\n\t\t\t\t\t\t\"(?:\" +\r\n\t\t\t\t\t\t// IP address exclusion\r\n\t\t\t\t\t\t// private & local networks\r\n\t\t\t\t\t\t(allowLocal\r\n\t\t\t\t\t\t\t? ''\r\n\t\t\t\t\t\t\t: (\"(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})\" +\r\n\t\t\t\t\t\t\t\"(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})\" +\r\n\t\t\t\t\t\t\t\"(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})\")) +\r\n\t\t\t\t\t\t// IP address dotted notation octets\r\n\t\t\t\t\t\t// excludes loopback network 0.0.0.0\r\n\t\t\t\t\t\t// excludes reserved space >= 224.0.0.0\r\n\t\t\t\t\t\t// excludes network & broadcast addresses\r\n\t\t\t\t\t\t// (first & last IP address of each class)\r\n\t\t\t\t\t\t\"(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])\" +\r\n\t\t\t\t\t\t\"(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}\" +\r\n\t\t\t\t\t\t\"(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))\" +\r\n\t\t\t\t\t\t\"|\" +\r\n\t\t\t\t\t\t// host name\r\n\t\t\t\t\t\t\"(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)\" +\r\n\t\t\t\t\t\t// domain name\r\n\t\t\t\t\t\t\"(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)*\" +\r\n\t\t\t\t\t\t// TLD identifier\r\n\t\t\t\t\t\t\"(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))\" +\r\n\t\t\t\t\t\t\")\" +\r\n\t\t\t\t\t\t// port number\r\n\t\t\t\t\t\t\"(?::\\\\d{2,5})?\" +\r\n\t\t\t\t\t\t// resource path\r\n\t\t\t\t\t\t\"(?:/[^\\\\s]*)?\" +\r\n\t\t\t\t\t\t\"$\", \"i\"\r\n\t\t\t\t);\r\n\r\n\t\t\treturn urlExp.test(value);\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.uuid = $.extend($.fn.bootstrapValidator.i18n.uuid || {}, {\r\n\t\t'default': 'Please enter a valid UUID number',\r\n\t\tversion: 'Please enter a valid UUID version %s number'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.uuid = {\r\n\t\thtml5Attributes: {\r\n\t\t\tmessage: 'message',\r\n\t\t\tversion: 'version'\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Return true if and only if the input value is a valid UUID string\r\n\t\t *\r\n\t\t * @see http://en.wikipedia.org/wiki/Universally_unique_identifier\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Consist of key:\r\n\t\t * - message: The invalid message\r\n\t\t * - version: Can be 3, 4, 5, null\r\n\t\t * @returns {Boolean|Object}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t// See the format at http://en.wikipedia.org/wiki/Universally_unique_identifier#Variants_and_versions\r\n\t\t\tvar patterns = {\r\n\t\t\t\t\t'3': /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\r\n\t\t\t\t\t'4': /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\r\n\t\t\t\t\t'5': /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\r\n\t\t\t\t\tall: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i\r\n\t\t\t\t},\r\n\t\t\t\tversion = options.version ? (options.version + '') : 'all';\r\n\t\t\treturn {\r\n\t\t\t\tvalid: (null === patterns[version]) ? true : patterns[version].test(value),\r\n\t\t\t\tmessage: options.version\r\n\t\t\t\t\t? $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.uuid.version, options.version)\r\n\t\t\t\t\t: (options.message || $.fn.bootstrapValidator.i18n.uuid['default'])\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.vat = $.extend($.fn.bootstrapValidator.i18n.vat || {}, {\r\n\t\t'default': 'Please enter a valid VAT number',\r\n\t\tcountryNotSupported: 'The country code %s is not supported',\r\n\t\tcountry: 'Please enter a valid %s VAT number',\r\n\t\tcountries: {\r\n\t\t\tAT: 'Austrian',\r\n\t\t\tBE: 'Belgian',\r\n\t\t\tBG: 'Bulgarian',\r\n\t\t\tCH: 'Swiss',\r\n\t\t\tCY: 'Cypriot',\r\n\t\t\tCZ: 'Czech',\r\n\t\t\tDE: 'German',\r\n\t\t\tDK: 'Danish',\r\n\t\t\tEE: 'Estonian',\r\n\t\t\tES: 'Spanish',\r\n\t\t\tFI: 'Finnish',\r\n\t\t\tFR: 'French',\r\n\t\t\tGB: 'United Kingdom',\r\n\t\t\tGR: 'Greek',\r\n\t\t\tEL: 'Greek',\r\n\t\t\tHU: 'Hungarian',\r\n\t\t\tHR: 'Croatian',\r\n\t\t\tIE: 'Irish',\r\n\t\t\tIT: 'Italian',\r\n\t\t\tLT: 'Lithuanian',\r\n\t\t\tLU: 'Luxembourg',\r\n\t\t\tLV: 'Latvian',\r\n\t\t\tMT: 'Maltese',\r\n\t\t\tNL: 'Dutch',\r\n\t\t\tNO: 'Norwegian',\r\n\t\t\tPL: 'Polish',\r\n\t\t\tPT: 'Portuguese',\r\n\t\t\tRO: 'Romanian',\r\n\t\t\tRU: 'Russian',\r\n\t\t\tRS: 'Serbian',\r\n\t\t\tSE: 'Swedish',\r\n\t\t\tSI: 'Slovenian',\r\n\t\t\tSK: 'Slovak'\r\n\t\t}\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.vat = {\r\n\t\thtml5Attributes: {\r\n\t\t\tmessage: 'message',\r\n\t\t\tcountry: 'country'\r\n\t\t},\r\n\r\n\t\t// Supported country codes\r\n\t\tCOUNTRY_CODES: [\r\n\t\t\t'AT', 'BE', 'BG', 'HR', 'CY', 'CZ', 'DK', 'EE', 'FI', 'FR', 'DE', 'GR', 'EL', 'HU', 'IE', 'IT',\r\n\t\t\t'LV', 'LT', 'LU', 'MT', 'NL', 'NO', 'PL', 'PT', 'RO', 'RU', 'RS', 'SK', 'SI', 'ES', 'SE', 'CH', 'GB'\r\n\t\t],\r\n\r\n\t\t/**\r\n\t\t * Validate an European VAT number\r\n\t\t *\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Consist of key:\r\n\t\t * - message: The invalid message\r\n\t\t * - country: The ISO 3166-1 country code. It can be\r\n\t\t *      - One of country code defined in COUNTRY_CODES\r\n\t\t *      - Name of field which its value defines the country code\r\n\t\t *      - Name of callback function that returns the country code\r\n\t\t *      - A callback function that returns the country code\r\n\t\t * @returns {Boolean|Object}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tvar country = options.country;\r\n\t\t\tif (!country) {\r\n\t\t\t\tcountry = value.substr(0, 2);\r\n\t\t\t} else if (typeof country !== 'string' || $.inArray(country.toUpperCase(), this.COUNTRY_CODES) === -1) {\r\n\t\t\t\t// Determine the country code\r\n\t\t\t\tcountry = validator.getDynamicOption($field, country);\r\n\t\t\t}\r\n\r\n\t\t\tif ($.inArray(country, this.COUNTRY_CODES) === -1) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalid: false,\r\n\t\t\t\t\tmessage: $.fn.bootstrapValidator.helpers.format($.fn.bootstrapValidator.i18n.vat.countryNotSupported, country)\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tvar method  = ['_', country.toLowerCase()].join('');\r\n\t\t\treturn this[method](value)\r\n\t\t\t\t? true\r\n\t\t\t\t: {\r\n\t\t\t\tvalid: false,\r\n\t\t\t\tmessage: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.vat.country, $.fn.bootstrapValidator.i18n.vat.countries[country.toUpperCase()])\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t// VAT validators\r\n\r\n\t\t/**\r\n\t\t * Validate Austrian VAT number\r\n\t\t * Example:\r\n\t\t * - Valid: ATU13585627\r\n\t\t * - Invalid: ATU13585626\r\n\t\t *\r\n\t\t * @param {String} value VAT number\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_at: function(value) {\r\n\t\t\tif (!/^ATU[0-9]{8}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = value.substr(3);\r\n\t\t\tvar sum    = 0,\r\n\t\t\t\tweight = [1, 2, 1, 2, 1, 2, 1],\r\n\t\t\t\ttemp   = 0;\r\n\r\n\t\t\tfor (var i = 0; i < 7; i++) {\r\n\t\t\t\ttemp = parseInt(value.charAt(i), 10) * weight[i];\r\n\t\t\t\tif (temp > 9) {\r\n\t\t\t\t\ttemp = Math.floor(temp / 10) + temp % 10;\r\n\t\t\t\t}\r\n\t\t\t\tsum += temp;\r\n\t\t\t}\r\n\r\n\t\t\tsum = 10 - (sum + 4) % 10;\r\n\t\t\tif (sum === 10) {\r\n\t\t\t\tsum = 0;\r\n\t\t\t}\r\n\r\n\t\t\treturn (sum + '' === value.substr(7, 1));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Belgian VAT number\r\n\t\t * Example:\r\n\t\t * - Valid: BE0428759497\r\n\t\t * - Invalid: BE431150351\r\n\t\t *\r\n\t\t * @param {String} value VAT number\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_be: function(value) {\r\n\t\t\tif (!/^BE[0]{0,1}[0-9]{9}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = value.substr(2);\r\n\t\t\tif (value.length === 9) {\r\n\t\t\t\tvalue = '0' + value;\r\n\t\t\t}\r\n\r\n\t\t\tif (value.substr(1, 1) === '0') {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvar sum = parseInt(value.substr(0, 8), 10) + parseInt(value.substr(8, 2), 10);\r\n\t\t\treturn (sum % 97 === 0);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Bulgarian VAT number\r\n\t\t * Example:\r\n\t\t * - Valid: BG175074752,\r\n\t\t * BG7523169263, BG8032056031,\r\n\t\t * BG7542011030,\r\n\t\t * BG7111042925\r\n\t\t * - Invalid: BG175074753, BG7552A10004, BG7111042922\r\n\t\t *\r\n\t\t * @param {String} value VAT number\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_bg: function(value) {\r\n\t\t\tif (!/^BG[0-9]{9,10}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = value.substr(2);\r\n\t\t\tvar sum = 0, i = 0;\r\n\r\n\t\t\t// Legal entities\r\n\t\t\tif (value.length === 9) {\r\n\t\t\t\tfor (i = 0; i < 8; i++) {\r\n\t\t\t\t\tsum += parseInt(value.charAt(i), 10) * (i + 1);\r\n\t\t\t\t}\r\n\t\t\t\tsum = sum % 11;\r\n\t\t\t\tif (sum === 10) {\r\n\t\t\t\t\tsum = 0;\r\n\t\t\t\t\tfor (i = 0; i < 8; i++) {\r\n\t\t\t\t\t\tsum += parseInt(value.charAt(i), 10) * (i + 3);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tsum = sum % 10;\r\n\t\t\t\treturn (sum + '' === value.substr(8));\r\n\t\t\t}\r\n\t\t\t// Physical persons, foreigners and others\r\n\t\t\telse if (value.length === 10) {\r\n\t\t\t\t// Validate Bulgarian national identification numbers\r\n\t\t\t\tvar egn = function(value) {\r\n\t\t\t\t\t\t// Check the birth date\r\n\t\t\t\t\t\tvar year  = parseInt(value.substr(0, 2), 10) + 1900,\r\n\t\t\t\t\t\t\tmonth = parseInt(value.substr(2, 2), 10),\r\n\t\t\t\t\t\t\tday   = parseInt(value.substr(4, 2), 10);\r\n\t\t\t\t\t\tif (month > 40) {\r\n\t\t\t\t\t\t\tyear += 100;\r\n\t\t\t\t\t\t\tmonth -= 40;\r\n\t\t\t\t\t\t} else if (month > 20) {\r\n\t\t\t\t\t\t\tyear -= 100;\r\n\t\t\t\t\t\t\tmonth -= 20;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!$.fn.bootstrapValidator.helpers.date(year, month, day)) {\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar sum    = 0,\r\n\t\t\t\t\t\t\tweight = [2, 4, 8, 5, 10, 9, 7, 3, 6];\r\n\t\t\t\t\t\tfor (var i = 0; i < 9; i++) {\r\n\t\t\t\t\t\t\tsum += parseInt(value.charAt(i), 10) * weight[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsum = (sum % 11) % 10;\r\n\t\t\t\t\t\treturn (sum + '' === value.substr(9, 1));\r\n\t\t\t\t\t},\r\n\t\t\t\t// Validate Bulgarian personal number of a foreigner\r\n\t\t\t\t\tpnf = function(value) {\r\n\t\t\t\t\t\tvar sum    = 0,\r\n\t\t\t\t\t\t\tweight = [21, 19, 17, 13, 11, 9, 7, 3, 1];\r\n\t\t\t\t\t\tfor (var i = 0; i < 9; i++) {\r\n\t\t\t\t\t\t\tsum += parseInt(value.charAt(i), 10) * weight[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsum = sum % 10;\r\n\t\t\t\t\t\treturn (sum + '' === value.substr(9, 1));\r\n\t\t\t\t\t},\r\n\t\t\t\t// Finally, consider it as a VAT number\r\n\t\t\t\t\tvat = function(value) {\r\n\t\t\t\t\t\tvar sum    = 0,\r\n\t\t\t\t\t\t\tweight = [4, 3, 2, 7, 6, 5, 4, 3, 2];\r\n\t\t\t\t\t\tfor (var i = 0; i < 9; i++) {\r\n\t\t\t\t\t\t\tsum += parseInt(value.charAt(i), 10) * weight[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsum = 11 - sum % 11;\r\n\t\t\t\t\t\tif (sum === 10) {\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (sum === 11) {\r\n\t\t\t\t\t\t\tsum = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn (sum + '' === value.substr(9, 1));\r\n\t\t\t\t\t};\r\n\t\t\t\treturn (egn(value) || pnf(value) || vat(value));\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Swiss VAT number\r\n\t\t *\r\n\t\t * @param {String} value VAT number\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_ch: function(value) {\r\n\t\t\tif (!/^CHE[0-9]{9}(MWST)?$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = value.substr(3);\r\n\t\t\tvar sum    = 0,\r\n\t\t\t\tweight = [5, 4, 3, 2, 7, 6, 5, 4];\r\n\t\t\tfor (var i = 0; i < 8; i++) {\r\n\t\t\t\tsum += parseInt(value.charAt(i), 10) * weight[i];\r\n\t\t\t}\r\n\r\n\t\t\tsum = 11 - sum % 11;\r\n\t\t\tif (sum === 10) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (sum === 11) {\r\n\t\t\t\tsum = 0;\r\n\t\t\t}\r\n\r\n\t\t\treturn (sum + '' === value.substr(8, 1));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Cypriot VAT number\r\n\t\t * Examples:\r\n\t\t * - Valid: CY10259033P\r\n\t\t * - Invalid: CY10259033Z\r\n\t\t *\r\n\t\t * @param {String} value VAT number\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_cy: function(value) {\r\n\t\t\tif (!/^CY[0-5|9]{1}[0-9]{7}[A-Z]{1}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = value.substr(2);\r\n\r\n\t\t\t// Do not allow to start with \"12\"\r\n\t\t\tif (value.substr(0, 2) === '12') {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// Extract the next digit and multiply by the counter.\r\n\t\t\tvar sum         = 0,\r\n\t\t\t\ttranslation = {\r\n\t\t\t\t\t'0': 1,  '1': 0,  '2': 5,  '3': 7,  '4': 9,\r\n\t\t\t\t\t'5': 13, '6': 15, '7': 17, '8': 19, '9': 21\r\n\t\t\t\t};\r\n\t\t\tfor (var i = 0; i < 8; i++) {\r\n\t\t\t\tvar temp = parseInt(value.charAt(i), 10);\r\n\t\t\t\tif (i % 2 === 0) {\r\n\t\t\t\t\ttemp = translation[temp + ''];\r\n\t\t\t\t}\r\n\t\t\t\tsum += temp;\r\n\t\t\t}\r\n\r\n\t\t\tsum = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'[sum % 26];\r\n\t\t\treturn (sum + '' === value.substr(8, 1));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Czech Republic VAT number\r\n\t\t * Can be:\r\n\t\t * i) Legal entities (8 digit numbers)\r\n\t\t * ii) Individuals with a RC (the 9 or 10 digit Czech birth number)\r\n\t\t * iii) Individuals without a RC (9 digit numbers beginning with 6)\r\n\t\t *\r\n\t\t * Examples:\r\n\t\t * - Valid: i) CZ25123891; ii) CZ7103192745, CZ991231123; iii) CZ640903926\r\n\t\t * - Invalid: i) CZ25123890; ii) CZ1103492745, CZ590312123\r\n\t\t *\r\n\t\t * @param {String} value VAT number\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_cz: function(value) {\r\n\t\t\tif (!/^CZ[0-9]{8,10}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = value.substr(2);\r\n\r\n\t\t\tvar sum = 0,\r\n\t\t\t\ti   = 0;\r\n\t\t\tif (value.length === 8) {\r\n\t\t\t\t// Do not allow to start with '9'\r\n\t\t\t\tif (value.charAt(0) + '' === '9') {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsum = 0;\r\n\t\t\t\tfor (i = 0; i < 7; i++) {\r\n\t\t\t\t\tsum += parseInt(value.charAt(i), 10) * (8 - i);\r\n\t\t\t\t}\r\n\t\t\t\tsum = 11 - sum % 11;\r\n\t\t\t\tif (sum === 10) {\r\n\t\t\t\t\tsum = 0;\r\n\t\t\t\t}\r\n\t\t\t\tif (sum === 11) {\r\n\t\t\t\t\tsum = 1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn (sum + '' === value.substr(7, 1));\r\n\t\t\t} else if (value.length === 9 && (value.charAt(0) + '' === '6')) {\r\n\t\t\t\tsum = 0;\r\n\t\t\t\t// Skip the first (which is 6)\r\n\t\t\t\tfor (i = 0; i < 7; i++) {\r\n\t\t\t\t\tsum += parseInt(value.charAt(i + 1), 10) * (8 - i);\r\n\t\t\t\t}\r\n\t\t\t\tsum = 11 - sum % 11;\r\n\t\t\t\tif (sum === 10) {\r\n\t\t\t\t\tsum = 0;\r\n\t\t\t\t}\r\n\t\t\t\tif (sum === 11) {\r\n\t\t\t\t\tsum = 1;\r\n\t\t\t\t}\r\n\t\t\t\tsum = [8, 7, 6, 5, 4, 3, 2, 1, 0, 9, 10][sum - 1];\r\n\t\t\t\treturn (sum + '' === value.substr(8, 1));\r\n\t\t\t} else if (value.length === 9 || value.length === 10) {\r\n\t\t\t\t// Validate Czech birth number (Rodné číslo), which is also national identifier\r\n\t\t\t\tvar year  = 1900 + parseInt(value.substr(0, 2), 10),\r\n\t\t\t\t\tmonth = parseInt(value.substr(2, 2), 10) % 50 % 20,\r\n\t\t\t\t\tday   = parseInt(value.substr(4, 2), 10);\r\n\t\t\t\tif (value.length === 9) {\r\n\t\t\t\t\tif (year >= 1980) {\r\n\t\t\t\t\t\tyear -= 100;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (year > 1953) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (year < 1954) {\r\n\t\t\t\t\tyear += 100;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!$.fn.bootstrapValidator.helpers.date(year, month, day)) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check that the birth date is not in the future\r\n\t\t\t\tif (value.length === 10) {\r\n\t\t\t\t\tvar check = parseInt(value.substr(0, 9), 10) % 11;\r\n\t\t\t\t\tif (year < 1985) {\r\n\t\t\t\t\t\tcheck = check % 10;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn (check + '' === value.substr(9, 1));\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate German VAT number\r\n\t\t * Examples:\r\n\t\t * - Valid: DE136695976\r\n\t\t * - Invalid: DE136695978\r\n\t\t *\r\n\t\t * @param {String} value VAT number\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_de: function(value) {\r\n\t\t\tif (!/^DE[0-9]{9}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = value.substr(2);\r\n\t\t\treturn $.fn.bootstrapValidator.helpers.mod11And10(value);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Danish VAT number\r\n\t\t * Example:\r\n\t\t * - Valid: DK13585628\r\n\t\t * - Invalid: DK13585627\r\n\t\t *\r\n\t\t * @param {String} value VAT number\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_dk: function(value) {\r\n\t\t\tif (!/^DK[0-9]{8}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = value.substr(2);\r\n\t\t\tvar sum    = 0,\r\n\t\t\t\tweight = [2, 7, 6, 5, 4, 3, 2, 1];\r\n\t\t\tfor (var i = 0; i < 8; i++) {\r\n\t\t\t\tsum += parseInt(value.charAt(i), 10) * weight[i];\r\n\t\t\t}\r\n\r\n\t\t\treturn (sum % 11 === 0);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Estonian VAT number\r\n\t\t * Examples:\r\n\t\t * - Valid: EE100931558, EE100594102\r\n\t\t * - Invalid: EE100594103\r\n\t\t *\r\n\t\t * @param {String} value VAT number\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_ee: function(value) {\r\n\t\t\tif (!/^EE[0-9]{9}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = value.substr(2);\r\n\t\t\tvar sum    = 0,\r\n\t\t\t\tweight = [3, 7, 1, 3, 7, 1, 3, 7, 1];\r\n\r\n\t\t\tfor (var i = 0; i < 9; i++) {\r\n\t\t\t\tsum += parseInt(value.charAt(i), 10) * weight[i];\r\n\t\t\t}\r\n\r\n\t\t\treturn (sum % 10 === 0);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Spanish VAT number (NIF - Número de Identificación Fiscal)\r\n\t\t * Can be:\r\n\t\t * i) DNI (Documento nacional de identidad), for Spaniards\r\n\t\t * ii) NIE (Número de Identificación de Extranjeros), for foreigners\r\n\t\t * iii) CIF (Certificado de Identificación Fiscal), for legal entities and others\r\n\t\t *\r\n\t\t * Examples:\r\n\t\t * - Valid: i) ES54362315K; ii) ESX2482300W, ESX5253868R; iii) ESM1234567L, ESJ99216582, ESB58378431, ESB64717838\r\n\t\t * - Invalid: i) ES54362315Z; ii) ESX2482300A; iii) ESJ99216583\r\n\t\t *\r\n\t\t * @param {String} value VAT number\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_es: function(value) {\r\n\t\t\tif (!/^ES[0-9A-Z][0-9]{7}[0-9A-Z]$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = value.substr(2);\r\n\t\t\tvar dni = function(value) {\r\n\t\t\t\t\tvar check = parseInt(value.substr(0, 8), 10);\r\n\t\t\t\t\tcheck = 'TRWAGMYFPDXBNJZSQVHLCKE'[check % 23];\r\n\t\t\t\t\treturn (check + '' === value.substr(8, 1));\r\n\t\t\t\t},\r\n\t\t\t\tnie = function(value) {\r\n\t\t\t\t\tvar check = ['XYZ'.indexOf(value.charAt(0)), value.substr(1)].join('');\r\n\t\t\t\t\tcheck = parseInt(check, 10);\r\n\t\t\t\t\tcheck = 'TRWAGMYFPDXBNJZSQVHLCKE'[check % 23];\r\n\t\t\t\t\treturn (check + '' === value.substr(8, 1));\r\n\t\t\t\t},\r\n\t\t\t\tcif = function(value) {\r\n\t\t\t\t\tvar first = value.charAt(0), check;\r\n\t\t\t\t\tif ('KLM'.indexOf(first) !== -1) {\r\n\t\t\t\t\t\t// K: Spanish younger than 14 year old\r\n\t\t\t\t\t\t// L: Spanish living outside Spain without DNI\r\n\t\t\t\t\t\t// M: Granted the tax to foreigners who have no NIE\r\n\t\t\t\t\t\tcheck = parseInt(value.substr(1, 8), 10);\r\n\t\t\t\t\t\tcheck = 'TRWAGMYFPDXBNJZSQVHLCKE'[check % 23];\r\n\t\t\t\t\t\treturn (check + '' === value.substr(8, 1));\r\n\t\t\t\t\t} else if ('ABCDEFGHJNPQRSUVW'.indexOf(first) !== -1) {\r\n\t\t\t\t\t\tvar sum    = 0,\r\n\t\t\t\t\t\t\tweight = [2, 1, 2, 1, 2, 1, 2],\r\n\t\t\t\t\t\t\ttemp   = 0;\r\n\r\n\t\t\t\t\t\tfor (var i = 0; i < 7; i++) {\r\n\t\t\t\t\t\t\ttemp = parseInt(value.charAt(i + 1), 10) * weight[i];\r\n\t\t\t\t\t\t\tif (temp > 9) {\r\n\t\t\t\t\t\t\t\ttemp = Math.floor(temp / 10) + temp % 10;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tsum += temp;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsum = 10 - sum % 10;\r\n\t\t\t\t\t\treturn (sum + '' === value.substr(8, 1) || 'JABCDEFGHI'[sum] === value.substr(8, 1));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t};\r\n\r\n\t\t\tvar first = value.charAt(0);\r\n\t\t\tif (/^[0-9]$/.test(first)) {\r\n\t\t\t\treturn dni(value);\r\n\t\t\t} else if (/^[XYZ]$/.test(first)) {\r\n\t\t\t\treturn nie(value);\r\n\t\t\t} else {\r\n\t\t\t\treturn cif(value);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Finnish VAT number\r\n\t\t * Examples:\r\n\t\t * - Valid: FI20774740\r\n\t\t * - Invalid: FI20774741\r\n\t\t *\r\n\t\t * @param {String} value VAT number\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_fi: function(value) {\r\n\t\t\tif (!/^FI[0-9]{8}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = value.substr(2);\r\n\t\t\tvar sum    = 0,\r\n\t\t\t\tweight = [7, 9, 10, 5, 8, 4, 2, 1];\r\n\r\n\t\t\tfor (var i = 0; i < 8; i++) {\r\n\t\t\t\tsum += parseInt(value.charAt(i), 10) * weight[i];\r\n\t\t\t}\r\n\r\n\t\t\treturn (sum % 11 === 0);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate French VAT number (TVA - taxe sur la valeur ajoutée)\r\n\t\t * It's constructed by a SIREN number, prefixed by two characters.\r\n\t\t *\r\n\t\t * Examples:\r\n\t\t * - Valid: FR40303265045, FR23334175221, FRK7399859412, FR4Z123456782\r\n\t\t * - Invalid: FR84323140391\r\n\t\t *\r\n\t\t * @param {String} value VAT number\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_fr: function(value) {\r\n\t\t\tif (!/^FR[0-9A-Z]{2}[0-9]{9}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = value.substr(2);\r\n\r\n\t\t\tif (!$.fn.bootstrapValidator.helpers.luhn(value.substr(2))) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (/^[0-9]{2}$/.test(value.substr(0, 2))) {\r\n\t\t\t\t// First two characters are digits\r\n\t\t\t\treturn value.substr(0, 2) === (parseInt(value.substr(2) + '12', 10) % 97 + '');\r\n\t\t\t} else {\r\n\t\t\t\t// The first characters cann't be O and I\r\n\t\t\t\tvar alphabet = '0123456789ABCDEFGHJKLMNPQRSTUVWXYZ',\r\n\t\t\t\t\tcheck;\r\n\t\t\t\t// First one is digit\r\n\t\t\t\tif (/^[0-9]{1}$/.test(value.charAt(0))) {\r\n\t\t\t\t\tcheck = alphabet.indexOf(value.charAt(0)) * 24 + alphabet.indexOf(value.charAt(1)) - 10;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcheck = alphabet.indexOf(value.charAt(0)) * 34 + alphabet.indexOf(value.charAt(1)) - 100;\r\n\t\t\t\t}\r\n\t\t\t\treturn ((parseInt(value.substr(2), 10) + 1 + Math.floor(check / 11)) % 11) === (check % 11);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate United Kingdom VAT number\r\n\t\t * Example:\r\n\t\t * - Valid: GB980780684\r\n\t\t * - Invalid: GB802311781\r\n\t\t *\r\n\t\t * @param {String} value VAT number\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_gb: function(value) {\r\n\t\t\tif (!/^GB[0-9]{9}$/.test(value)             /* Standard */\r\n\t\t\t\t&& !/^GB[0-9]{12}$/.test(value)         /* Branches */\r\n\t\t\t\t&& !/^GBGD[0-9]{3}$/.test(value)        /* Government department */\r\n\t\t\t\t&& !/^GBHA[0-9]{3}$/.test(value)        /* Health authority */\r\n\t\t\t\t&& !/^GB(GD|HA)8888[0-9]{5}$/.test(value))\r\n\t\t\t{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = value.substr(2);\r\n\t\t\tvar length = value.length;\r\n\t\t\tif (length === 5) {\r\n\t\t\t\tvar firstTwo  = value.substr(0, 2),\r\n\t\t\t\t\tlastThree = parseInt(value.substr(2), 10);\r\n\t\t\t\treturn ('GD' === firstTwo && lastThree < 500) || ('HA' === firstTwo && lastThree >= 500);\r\n\t\t\t} else if (length === 11 && ('GD8888' === value.substr(0, 6) || 'HA8888' === value.substr(0, 6))) {\r\n\t\t\t\tif (('GD' === value.substr(0, 2) && parseInt(value.substr(6, 3), 10) >= 500)\r\n\t\t\t\t\t|| ('HA' === value.substr(0, 2) && parseInt(value.substr(6, 3), 10) < 500))\r\n\t\t\t\t{\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn (parseInt(value.substr(6, 3), 10) % 97 === parseInt(value.substr(9, 2), 10));\r\n\t\t\t} else if (length === 9 || length === 12) {\r\n\t\t\t\tvar sum    = 0,\r\n\t\t\t\t\tweight = [8, 7, 6, 5, 4, 3, 2, 10, 1];\r\n\t\t\t\tfor (var i = 0; i < 9; i++) {\r\n\t\t\t\t\tsum += parseInt(value.charAt(i), 10) * weight[i];\r\n\t\t\t\t}\r\n\t\t\t\tsum = sum % 97;\r\n\r\n\t\t\t\tif (parseInt(value.substr(0, 3), 10) >= 100) {\r\n\t\t\t\t\treturn (sum === 0 || sum === 42 || sum === 55);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn (sum === 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Greek VAT number\r\n\t\t * Examples:\r\n\t\t * - Valid: GR023456780, EL094259216\r\n\t\t * - Invalid: EL123456781\r\n\t\t *\r\n\t\t * @param {String} value VAT number\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_gr: function(value) {\r\n\t\t\tif (!/^GR[0-9]{9}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = value.substr(2);\r\n\t\t\tif (value.length === 8) {\r\n\t\t\t\tvalue = '0' + value;\r\n\t\t\t}\r\n\r\n\t\t\tvar sum    = 0,\r\n\t\t\t\tweight = [256, 128, 64, 32, 16, 8, 4, 2];\r\n\t\t\tfor (var i = 0; i < 8; i++) {\r\n\t\t\t\tsum += parseInt(value.charAt(i), 10) * weight[i];\r\n\t\t\t}\r\n\t\t\tsum = (sum % 11) % 10;\r\n\r\n\t\t\treturn (sum + '' === value.substr(8, 1));\r\n\t\t},\r\n\r\n\t\t// EL is traditionally prefix of Greek VAT numbers\r\n\t\t_el: function(value) {\r\n\t\t\tif (!/^EL[0-9]{9}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = 'GR' + value.substr(2);\r\n\t\t\treturn this._gr(value);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Hungarian VAT number\r\n\t\t * Examples:\r\n\t\t * - Valid: HU12892312\r\n\t\t * - Invalid: HU12892313\r\n\t\t *\r\n\t\t * @param {String} value VAT number\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_hu: function(value) {\r\n\t\t\tif (!/^HU[0-9]{8}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = value.substr(2);\r\n\t\t\tvar sum    = 0,\r\n\t\t\t\tweight = [9, 7, 3, 1, 9, 7, 3, 1];\r\n\r\n\t\t\tfor (var i = 0; i < 8; i++) {\r\n\t\t\t\tsum += parseInt(value.charAt(i), 10) * weight[i];\r\n\t\t\t}\r\n\r\n\t\t\treturn (sum % 10 === 0);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Croatian VAT number\r\n\t\t * Examples:\r\n\t\t * - Valid: HR33392005961\r\n\t\t * - Invalid: HR33392005962\r\n\t\t *\r\n\t\t * @param {String} value VAT number\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_hr: function(value) {\r\n\t\t\tif (!/^HR[0-9]{11}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = value.substr(2);\r\n\t\t\treturn $.fn.bootstrapValidator.helpers.mod11And10(value);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Irish VAT number\r\n\t\t * Examples:\r\n\t\t * - Valid: IE6433435F, IE6433435OA, IE8D79739I\r\n\t\t * - Invalid: IE8D79738J\r\n\t\t *\r\n\t\t * @param {String} value VAT number\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_ie: function(value) {\r\n\t\t\tif (!/^IE[0-9]{1}[0-9A-Z\\*\\+]{1}[0-9]{5}[A-Z]{1,2}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = value.substr(2);\r\n\t\t\tvar getCheckDigit = function(value) {\r\n\t\t\t\twhile (value.length < 7) {\r\n\t\t\t\t\tvalue = '0' + value;\r\n\t\t\t\t}\r\n\t\t\t\tvar alphabet = 'WABCDEFGHIJKLMNOPQRSTUV',\r\n\t\t\t\t\tsum      = 0;\r\n\t\t\t\tfor (var i = 0; i < 7; i++) {\r\n\t\t\t\t\tsum += parseInt(value.charAt(i), 10) * (8 - i);\r\n\t\t\t\t}\r\n\t\t\t\tsum += 9 * alphabet.indexOf(value.substr(7));\r\n\t\t\t\treturn alphabet[sum % 23];\r\n\t\t\t};\r\n\r\n\t\t\t// The first 7 characters are digits\r\n\t\t\tif (/^[0-9]+$/.test(value.substr(0, 7))) {\r\n\t\t\t\t// New system\r\n\t\t\t\treturn value.charAt(7) === getCheckDigit(value.substr(0, 7) + value.substr(8) + '');\r\n\t\t\t} else if ('ABCDEFGHIJKLMNOPQRSTUVWXYZ+*'.indexOf(value.charAt(1)) !== -1) {\r\n\t\t\t\t// Old system\r\n\t\t\t\treturn value.charAt(7) === getCheckDigit(value.substr(2, 5) + value.substr(0, 1) + '');\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Italian VAT number, which consists of 11 digits.\r\n\t\t * - First 7 digits are a company identifier\r\n\t\t * - Next 3 are the province of residence\r\n\t\t * - The last one is a check digit\r\n\t\t *\r\n\t\t * Examples:\r\n\t\t * - Valid: IT00743110157\r\n\t\t * - Invalid: IT00743110158\r\n\t\t *\r\n\t\t * @param {String} value VAT number\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_it: function(value) {\r\n\t\t\tif (!/^IT[0-9]{11}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = value.substr(2);\r\n\t\t\tif (parseInt(value.substr(0, 7), 10) === 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvar lastThree = parseInt(value.substr(7, 3), 10);\r\n\t\t\tif ((lastThree < 1) || (lastThree > 201) && lastThree !== 999 && lastThree !== 888) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn $.fn.bootstrapValidator.helpers.luhn(value);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Lithuanian VAT number\r\n\t\t * It can be:\r\n\t\t * - 9 digits, for legal entities\r\n\t\t * - 12 digits, for temporarily registered taxpayers\r\n\t\t *\r\n\t\t * Examples:\r\n\t\t * - Valid: LT119511515, LT100001919017, LT100004801610\r\n\t\t * - Invalid: LT100001919018\r\n\t\t *\r\n\t\t * @param {String} value VAT number\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_lt: function(value) {\r\n\t\t\tif (!/^LT([0-9]{7}1[0-9]{1}|[0-9]{10}1[0-9]{1})$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = value.substr(2);\r\n\t\t\tvar length = value.length,\r\n\t\t\t\tsum    = 0,\r\n\t\t\t\ti;\r\n\t\t\tfor (i = 0; i < length - 1; i++) {\r\n\t\t\t\tsum += parseInt(value.charAt(i), 10) * (1 + i % 9);\r\n\t\t\t}\r\n\t\t\tvar check = sum % 11;\r\n\t\t\tif (check === 10) {\r\n\t\t\t\tsum = 0;\r\n\t\t\t\tfor (i = 0; i < length - 1; i++) {\r\n\t\t\t\t\tsum += parseInt(value.charAt(i), 10) * (1 + (i + 2) % 9);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcheck = check % 11 % 10;\r\n\t\t\treturn (check + '' === value.charAt(length - 1));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Luxembourg VAT number\r\n\t\t * Examples:\r\n\t\t * - Valid: LU15027442\r\n\t\t * - Invalid: LU15027443\r\n\t\t *\r\n\t\t * @param {String} value VAT number\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_lu: function(value) {\r\n\t\t\tif (!/^LU[0-9]{8}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = value.substr(2);\r\n\t\t\treturn ((parseInt(value.substr(0, 6), 10) % 89) + '' === value.substr(6, 2));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Latvian VAT number\r\n\t\t * Examples:\r\n\t\t * - Valid: LV40003521600, LV16117519997\r\n\t\t * - Invalid: LV40003521601, LV16137519997\r\n\t\t *\r\n\t\t * @param {String} value VAT number\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_lv: function(value) {\r\n\t\t\tif (!/^LV[0-9]{11}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = value.substr(2);\r\n\t\t\tvar first  = parseInt(value.charAt(0), 10),\r\n\t\t\t\tsum    = 0,\r\n\t\t\t\tweight = [],\r\n\t\t\t\ti,\r\n\t\t\t\tlength = value.length;\r\n\t\t\tif (first > 3) {\r\n\t\t\t\t// Legal entity\r\n\t\t\t\tsum    = 0;\r\n\t\t\t\tweight = [9, 1, 4, 8, 3, 10, 2, 5, 7, 6, 1];\r\n\t\t\t\tfor (i = 0; i < length; i++) {\r\n\t\t\t\t\tsum += parseInt(value.charAt(i), 10) * weight[i];\r\n\t\t\t\t}\r\n\t\t\t\tsum = sum % 11;\r\n\t\t\t\treturn (sum === 3);\r\n\t\t\t} else {\r\n\t\t\t\t// Check birth date\r\n\t\t\t\tvar day   = parseInt(value.substr(0, 2), 10),\r\n\t\t\t\t\tmonth = parseInt(value.substr(2, 2), 10),\r\n\t\t\t\t\tyear  = parseInt(value.substr(4, 2), 10);\r\n\t\t\t\tyear = year + 1800 + parseInt(value.charAt(6), 10) * 100;\r\n\r\n\t\t\t\tif (!$.fn.bootstrapValidator.helpers.date(year, month, day)) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check personal code\r\n\t\t\t\tsum    = 0;\r\n\t\t\t\tweight = [10, 5, 8, 4, 2, 1, 6, 3, 7, 9];\r\n\t\t\t\tfor (i = 0; i < length - 1; i++) {\r\n\t\t\t\t\tsum += parseInt(value.charAt(i), 10) * weight[i];\r\n\t\t\t\t}\r\n\t\t\t\tsum = (sum + 1) % 11 % 10;\r\n\t\t\t\treturn (sum + '' === value.charAt(length - 1));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Maltese VAT number\r\n\t\t * Examples:\r\n\t\t * - Valid: MT11679112\r\n\t\t * - Invalid: MT11679113\r\n\t\t *\r\n\t\t * @param {String} value VAT number\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_mt: function(value) {\r\n\t\t\tif (!/^MT[0-9]{8}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = value.substr(2);\r\n\t\t\tvar sum    = 0,\r\n\t\t\t\tweight = [3, 4, 6, 7, 8, 9, 10, 1];\r\n\r\n\t\t\tfor (var i = 0; i < 8; i++) {\r\n\t\t\t\tsum += parseInt(value.charAt(i), 10) * weight[i];\r\n\t\t\t}\r\n\r\n\t\t\treturn (sum % 37 === 0);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Dutch VAT number\r\n\t\t * Examples:\r\n\t\t * - Valid: NL004495445B01\r\n\t\t * - Invalid: NL123456789B90\r\n\t\t *\r\n\t\t * @param {String} value VAT number\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_nl: function(value) {\r\n\t\t\tif (!/^NL[0-9]{9}B[0-9]{2}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvalue = value.substr(2);\r\n\t\t\tvar sum    = 0,\r\n\t\t\t\tweight = [9, 8, 7, 6, 5, 4, 3, 2];\r\n\t\t\tfor (var i = 0; i < 8; i++) {\r\n\t\t\t\tsum += parseInt(value.charAt(i), 10) * weight[i];\r\n\t\t\t}\r\n\r\n\t\t\tsum = sum % 11;\r\n\t\t\tif (sum > 9) {\r\n\t\t\t\tsum = 0;\r\n\t\t\t}\r\n\t\t\treturn (sum + '' === value.substr(8, 1));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Norwegian VAT number\r\n\t\t *\r\n\t\t * @see http://www.brreg.no/english/coordination/number.html\r\n\t\t * @param {String} value VAT number\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_no: function(value) {\r\n\t\t\tif (!/^NO[0-9]{9}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvalue = value.substr(2);\r\n\t\t\tvar sum    = 0,\r\n\t\t\t\tweight = [3, 2, 7, 6, 5, 4, 3, 2];\r\n\t\t\tfor (var i = 0; i < 8; i++) {\r\n\t\t\t\tsum += parseInt(value.charAt(i), 10) * weight[i];\r\n\t\t\t}\r\n\r\n\t\t\tsum = 11 - sum % 11;\r\n\t\t\tif (sum === 11) {\r\n\t\t\t\tsum = 0;\r\n\t\t\t}\r\n\t\t\treturn (sum + '' === value.substr(8, 1));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Polish VAT number\r\n\t\t * Examples:\r\n\t\t * - Valid: PL8567346215\r\n\t\t * - Invalid: PL8567346216\r\n\t\t *\r\n\t\t * @param {String} value VAT number\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_pl: function(value) {\r\n\t\t\tif (!/^PL[0-9]{10}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = value.substr(2);\r\n\t\t\tvar sum    = 0,\r\n\t\t\t\tweight = [6, 5, 7, 2, 3, 4, 5, 6, 7, -1];\r\n\r\n\t\t\tfor (var i = 0; i < 10; i++) {\r\n\t\t\t\tsum += parseInt(value.charAt(i), 10) * weight[i];\r\n\t\t\t}\r\n\r\n\t\t\treturn (sum % 11 === 0);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Portuguese VAT number\r\n\t\t * Examples:\r\n\t\t * - Valid: PT501964843\r\n\t\t * - Invalid: PT501964842\r\n\t\t *\r\n\t\t * @param {String} value VAT number\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_pt: function(value) {\r\n\t\t\tif (!/^PT[0-9]{9}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = value.substr(2);\r\n\t\t\tvar sum    = 0,\r\n\t\t\t\tweight = [9, 8, 7, 6, 5, 4, 3, 2];\r\n\r\n\t\t\tfor (var i = 0; i < 8; i++) {\r\n\t\t\t\tsum += parseInt(value.charAt(i), 10) * weight[i];\r\n\t\t\t}\r\n\t\t\tsum = 11 - sum % 11;\r\n\t\t\tif (sum > 9) {\r\n\t\t\t\tsum = 0;\r\n\t\t\t}\r\n\t\t\treturn (sum + '' === value.substr(8, 1));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Romanian VAT number\r\n\t\t * Examples:\r\n\t\t * - Valid: RO18547290\r\n\t\t * - Invalid: RO18547291\r\n\t\t *\r\n\t\t * @param {String} value VAT number\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_ro: function(value) {\r\n\t\t\tif (!/^RO[1-9][0-9]{1,9}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvalue = value.substr(2);\r\n\r\n\t\t\tvar length = value.length,\r\n\t\t\t\tweight = [7, 5, 3, 2, 1, 7, 5, 3, 2].slice(10 - length),\r\n\t\t\t\tsum    = 0;\r\n\t\t\tfor (var i = 0; i < length - 1; i++) {\r\n\t\t\t\tsum += parseInt(value.charAt(i), 10) * weight[i];\r\n\t\t\t}\r\n\r\n\t\t\tsum = (10 * sum) % 11 % 10;\r\n\t\t\treturn (sum + '' === value.substr(length - 1, 1));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Russian VAT number (Taxpayer Identification Number - INN)\r\n\t\t *\r\n\t\t * @param {String} value VAT number\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_ru: function(value) {\r\n\t\t\tif (!/^RU([0-9]{9}|[0-9]{12})$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = value.substr(2);\r\n\t\t\tvar i = 0;\r\n\t\t\tif (value.length === 10) {\r\n\t\t\t\tvar sum    = 0,\r\n\t\t\t\t\tweight = [2, 4, 10, 3, 5, 9, 4, 6, 8, 0];\r\n\t\t\t\tfor (i = 0; i < 10; i++) {\r\n\t\t\t\t\tsum += parseInt(value.charAt(i), 10) * weight[i];\r\n\t\t\t\t}\r\n\t\t\t\tsum = sum % 11;\r\n\t\t\t\tif (sum > 9) {\r\n\t\t\t\t\tsum = sum % 10;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn (sum + '' === value.substr(9, 1));\r\n\t\t\t} else if (value.length === 12) {\r\n\t\t\t\tvar sum1    = 0,\r\n\t\t\t\t\tweight1 = [7, 2, 4, 10, 3, 5, 9, 4, 6, 8, 0],\r\n\t\t\t\t\tsum2    = 0,\r\n\t\t\t\t\tweight2 = [3, 7, 2, 4, 10, 3, 5, 9, 4, 6, 8, 0];\r\n\r\n\t\t\t\tfor (i = 0; i < 11; i++) {\r\n\t\t\t\t\tsum1 += parseInt(value.charAt(i), 10) * weight1[i];\r\n\t\t\t\t\tsum2 += parseInt(value.charAt(i), 10) * weight2[i];\r\n\t\t\t\t}\r\n\t\t\t\tsum1 = sum1 % 11;\r\n\t\t\t\tif (sum1 > 9) {\r\n\t\t\t\t\tsum1 = sum1 % 10;\r\n\t\t\t\t}\r\n\t\t\t\tsum2 = sum2 % 11;\r\n\t\t\t\tif (sum2 > 9) {\r\n\t\t\t\t\tsum2 = sum2 % 10;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn (sum1 + '' === value.substr(10, 1) && sum2 + '' === value.substr(11, 1));\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Serbian VAT number\r\n\t\t *\r\n\t\t * @param {String} value VAT number\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_rs: function(value) {\r\n\t\t\tif (!/^RS[0-9]{9}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = value.substr(2);\r\n\t\t\tvar sum  = 10,\r\n\t\t\t\ttemp = 0;\r\n\t\t\tfor (var i = 0; i < 8; i++) {\r\n\t\t\t\ttemp = (parseInt(value.charAt(i), 10) + sum) % 10;\r\n\t\t\t\tif (temp === 0) {\r\n\t\t\t\t\ttemp = 10;\r\n\t\t\t\t}\r\n\t\t\t\tsum = (2 * temp) % 11;\r\n\t\t\t}\r\n\r\n\t\t\treturn ((sum + parseInt(value.substr(8, 1), 10)) % 10 === 1);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Swedish VAT number\r\n\t\t * Examples:\r\n\t\t * - Valid: SE123456789701\r\n\t\t * - Invalid: SE123456789101\r\n\t\t *\r\n\t\t * @param {String} value VAT number\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_se: function(value) {\r\n\t\t\tif (!/^SE[0-9]{10}01$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = value.substr(2, 10);\r\n\t\t\treturn $.fn.bootstrapValidator.helpers.luhn(value);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Slovenian VAT number\r\n\t\t * Examples:\r\n\t\t * - Valid: SI50223054\r\n\t\t * - Invalid: SI50223055\r\n\t\t *\r\n\t\t * @param {String} value VAT number\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_si: function(value) {\r\n\t\t\tif (!/^SI[0-9]{8}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = value.substr(2);\r\n\t\t\tvar sum    = 0,\r\n\t\t\t\tweight = [8, 7, 6, 5, 4, 3, 2];\r\n\r\n\t\t\tfor (var i = 0; i < 7; i++) {\r\n\t\t\t\tsum += parseInt(value.charAt(i), 10) * weight[i];\r\n\t\t\t}\r\n\t\t\tsum = 11 - sum % 11;\r\n\t\t\tif (sum === 10) {\r\n\t\t\t\tsum = 0;\r\n\t\t\t}\r\n\t\t\treturn (sum + '' === value.substr(7, 1));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate Slovak VAT number\r\n\t\t * Examples:\r\n\t\t * - Valid: SK2022749619\r\n\t\t * - Invalid: SK2022749618\r\n\t\t *\r\n\t\t * @param {String} value VAT number\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_sk: function(value) {\r\n\t\t\tif (!/^SK[1-9][0-9][(2-4)|(6-9)][0-9]{7}$/.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn (parseInt(value.substr(2), 10) % 11 === 0);\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.vin = $.extend($.fn.bootstrapValidator.i18n.vin || {}, {\r\n\t\t'default': 'Please enter a valid VIN number'\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.vin = {\r\n\t\t/**\r\n\t\t * Validate an US VIN (Vehicle Identification Number)\r\n\t\t *\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Consist of key:\r\n\t\t * - message: The invalid message\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t// Don't accept I, O, Q characters\r\n\t\t\tif (!/^[a-hj-npr-z0-9]{8}[0-9xX][a-hj-npr-z0-9]{8}$/i.test(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = value.toUpperCase();\r\n\t\t\tvar chars   = {\r\n\t\t\t\t\tA: 1,   B: 2,   C: 3,   D: 4,   E: 5,   F: 6,   G: 7,   H: 8,\r\n\t\t\t\t\tJ: 1,   K: 2,   L: 3,   M: 4,   N: 5,           P: 7,           R: 9,\r\n\t\t\t\t\tS: 2,   T: 3,   U: 4,   V: 5,   W: 6,   X: 7,   Y: 8,   Z: 9,\r\n\t\t\t\t\t'1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9, '0': 0\r\n\t\t\t\t},\r\n\t\t\t\tweights = [8, 7, 6, 5, 4, 3, 2, 10, 0, 9, 8, 7, 6, 5, 4, 3, 2],\r\n\t\t\t\tsum     = 0,\r\n\t\t\t\tlength  = value.length;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tsum += chars[value.charAt(i) + ''] * weights[i];\r\n\t\t\t}\r\n\r\n\t\t\tvar reminder = sum % 11;\r\n\t\t\tif (reminder === 10) {\r\n\t\t\t\treminder = 'X';\r\n\t\t\t}\r\n\r\n\t\t\treturn (reminder + '') === value.charAt(8);\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n;(function($) {\r\n\t$.fn.bootstrapValidator.i18n.zipCode = $.extend($.fn.bootstrapValidator.i18n.zipCode || {}, {\r\n\t\t'default': 'Please enter a valid zip code',\r\n\t\tcountryNotSupported: 'The country code %s is not supported',\r\n\t\tcountry: 'Please enter a valid %s',\r\n\t\tcountries: {\r\n\t\t\t'CA': 'Canadian postal code',\r\n\t\t\t'DK': 'Danish postal code',\r\n\t\t\t'GB': 'United Kingdom postal code',\r\n\t\t\t'IT': 'Italian postal code',\r\n\t\t\t'NL': 'Dutch postal code',\r\n\t\t\t'SE': 'Swiss postal code',\r\n\t\t\t'SG': 'Singapore postal code',\r\n\t\t\t'US': 'US zip code'\r\n\t\t}\r\n\t});\r\n\r\n\t$.fn.bootstrapValidator.validators.zipCode = {\r\n\t\thtml5Attributes: {\r\n\t\t\tmessage: 'message',\r\n\t\t\tcountry: 'country'\r\n\t\t},\r\n\r\n\t\tCOUNTRY_CODES: ['CA', 'DK', 'GB', 'IT', 'NL', 'SE', 'SG', 'US'],\r\n\r\n\t\t/**\r\n\t\t * Return true if and only if the input value is a valid country zip code\r\n\t\t *\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Consist of key:\r\n\t\t * - message: The invalid message\r\n\t\t * - country: The country\r\n\t\t *\r\n\t\t * The country can be defined by:\r\n\t\t * - An ISO 3166 country code\r\n\t\t * Currently it supports the following countries:\r\n\t\t *      - US (United States)\r\n\t\t *      - CA (Canada)\r\n\t\t *      - DK (Denmark)\r\n\t\t *      - GB (United Kingdom)\r\n\t\t *      - IT (Italy)\r\n\t\t *      - NL (Netherlands)\r\n\t\t *      - SE (Sweden)\r\n\t\t *      - SG (Singapore)\r\n\t\t *\r\n\t\t * - Name of field which its value defines the country code\r\n\t\t * - Name of callback function that returns the country code\r\n\t\t * - A callback function that returns the country code\r\n\t\t *\r\n\t\t * callback: function(value, validator, $field) {\r\n         *      // value is the value of field\r\n         *      // validator is the BootstrapValidator instance\r\n         *      // $field is jQuery element representing the field\r\n         * }\r\n\t\t *\r\n\t\t * @returns {Boolean|Object}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '' || !options.country) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tvar country = options.country;\r\n\t\t\tif (typeof country !== 'string' || $.inArray(country, this.COUNTRY_CODES) === -1) {\r\n\t\t\t\t// Try to determine the country\r\n\t\t\t\tcountry = validator.getDynamicOption($field, country);\r\n\t\t\t}\r\n\r\n\t\t\tif (!country || $.inArray(country.toUpperCase(), this.COUNTRY_CODES) === -1) {\r\n\t\t\t\treturn { valid: false, message: $.fn.bootstrapValidator.helpers.format($.fn.bootstrapValidator.i18n.zipCode.countryNotSupported, country) };\r\n\t\t\t}\r\n\r\n\t\t\tvar isValid = false;\r\n\t\t\tcountry = country.toUpperCase();\r\n\t\t\tswitch (country) {\r\n\t\t\t\tcase 'CA':\r\n\t\t\t\t\tisValid = /^(?:A|B|C|E|G|H|J|K|L|M|N|P|R|S|T|V|X|Y){1}[0-9]{1}(?:A|B|C|E|G|H|J|K|L|M|N|P|R|S|T|V|W|X|Y|Z){1}\\s?[0-9]{1}(?:A|B|C|E|G|H|J|K|L|M|N|P|R|S|T|V|W|X|Y|Z){1}[0-9]{1}$/i.test(value);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'DK':\r\n\t\t\t\t\tisValid = /^(DK(-|\\s)?)?\\d{4}$/i.test(value);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'GB':\r\n\t\t\t\t\tisValid = this._gb(value);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t// http://en.wikipedia.org/wiki/List_of_postal_codes_in_Italy\r\n\t\t\t\tcase 'IT':\r\n\t\t\t\t\tisValid = /^(I-|IT-)?\\d{5}$/i.test(value);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t// http://en.wikipedia.org/wiki/Postal_codes_in_the_Netherlands\r\n\t\t\t\tcase 'NL':\r\n\t\t\t\t\tisValid = /^[1-9][0-9]{3} ?(?!sa|sd|ss)[a-z]{2}$/i.test(value);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SE':\r\n\t\t\t\t\tisValid = /^(S-)?\\d{3}\\s?\\d{2}$/i.test(value);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SG':\r\n\t\t\t\t\tisValid = /^([0][1-9]|[1-6][0-9]|[7]([0-3]|[5-9])|[8][0-2])(\\d{4})$/i.test(value);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'US':\r\n\t\t\t\t/* falls through */\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tisValid = /^\\d{4,5}([\\-]?\\d{4})?$/.test(value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tvalid: isValid,\r\n\t\t\t\tmessage: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.zipCode.country, $.fn.bootstrapValidator.i18n.zipCode.countries[country])\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Validate United Kingdom postcode\r\n\t\t * Examples:\r\n\t\t * - Standard: EC1A 1BB, W1A 1HQ, M1 1AA, B33 8TH, CR2 6XH, DN55 1PT\r\n\t\t * - Special cases:\r\n\t\t * AI-2640, ASCN 1ZZ, GIR 0AA\r\n\t\t *\r\n\t\t * @see http://en.wikipedia.org/wiki/Postcodes_in_the_United_Kingdom\r\n\t\t * @param {String} value The postcode\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\t_gb: function(value) {\r\n\t\t\tvar firstChar  = '[ABCDEFGHIJKLMNOPRSTUWYZ]',     // Does not accept QVX\r\n\t\t\t\tsecondChar = '[ABCDEFGHKLMNOPQRSTUVWXY]',     // Does not accept IJZ\r\n\t\t\t\tthirdChar  = '[ABCDEFGHJKPMNRSTUVWXY]',\r\n\t\t\t\tfourthChar = '[ABEHMNPRVWXY]',\r\n\t\t\t\tfifthChar  = '[ABDEFGHJLNPQRSTUWXYZ]',\r\n\t\t\t\tregexps    = [\r\n\t\t\t\t\t// AN NAA, ANN NAA, AAN NAA, AANN NAA format\r\n\t\t\t\t\tnew RegExp('^(' + firstChar + '{1}' + secondChar + '?[0-9]{1,2})(\\\\s*)([0-9]{1}' + fifthChar + '{2})$', 'i'),\r\n\t\t\t\t\t// ANA NAA\r\n\t\t\t\t\tnew RegExp('^(' + firstChar + '{1}[0-9]{1}' + thirdChar + '{1})(\\\\s*)([0-9]{1}' + fifthChar + '{2})$', 'i'),\r\n\t\t\t\t\t// AANA NAA\r\n\t\t\t\t\tnew RegExp('^(' + firstChar + '{1}' + secondChar + '{1}?[0-9]{1}' + fourthChar + '{1})(\\\\s*)([0-9]{1}' + fifthChar + '{2})$', 'i'),\r\n\r\n\t\t\t\t\tnew RegExp('^(BF1)(\\\\s*)([0-6]{1}[ABDEFGHJLNPQRST]{1}[ABDEFGHJLNPQRSTUWZYZ]{1})$', 'i'),        // BFPO postcodes\r\n\t\t\t\t\t/^(GIR)(\\s*)(0AA)$/i,                       // Special postcode GIR 0AA\r\n\t\t\t\t\t/^(BFPO)(\\s*)([0-9]{1,4})$/i,               // Standard BFPO numbers\r\n\t\t\t\t\t/^(BFPO)(\\s*)(c\\/o\\s*[0-9]{1,3})$/i,        // c/o BFPO numbers\r\n\t\t\t\t\t/^([A-Z]{4})(\\s*)(1ZZ)$/i,                  // Overseas Territories\r\n\t\t\t\t\t/^(AI-2640)$/i                              // Anguilla\r\n\t\t\t\t];\r\n\t\t\tfor (var i = 0; i < regexps.length; i++) {\r\n\t\t\t\tif (regexps[i].test(value)) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.base64 = $.extend($.fn.bootstrapValidator.i18n.base64 || {}, {\r\n        'default': 'Please enter a valid base 64 encoded'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.base64 = {\r\n        /**\r\n         * Return true if the input value is a base 64 encoded string.\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$/.test(value);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.between = $.extend($.fn.bootstrapValidator.i18n.between || {}, {\r\n        'default': 'Please enter a value between %s and %s',\r\n        notInclusive: 'Please enter a value between %s and %s strictly'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.between = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            min: 'min',\r\n            max: 'max',\r\n            inclusive: 'inclusive'\r\n        },\r\n\r\n        enableByHtml5: function($field) {\r\n            if ('range' === $field.attr('type')) {\r\n                return {\r\n                    min: $field.attr('min'),\r\n                    max: $field.attr('max')\r\n                };\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Return true if the input value is between (strictly or not) two given numbers\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - min\r\n         * - max\r\n         *\r\n         * The min, max keys define the number which the field value compares to. min, max can be\r\n         *      - A number\r\n         *      - Name of field which its value defines the number\r\n         *      - Name of callback function that returns the number\r\n         *      - A callback function that returns the number\r\n         *\r\n         * - inclusive [optional]: Can be true or false. Default is true\r\n         * - message: The invalid message\r\n         * @returns {Boolean|Object}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            var min = $.isNumeric(options.min) ? options.min : validator.getDynamicOption($field, options.min),\r\n                max = $.isNumeric(options.max) ? options.max : validator.getDynamicOption($field, options.max);\r\n\r\n            value = parseFloat(value);\r\n\t\t\treturn (options.inclusive === true || options.inclusive === undefined)\r\n                    ? {\r\n                        valid: value >= min && value <= max,\r\n                        message: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.between['default'], [min, max])\r\n                    }\r\n                    : {\r\n                        valid: value > min  && value <  max,\r\n                        message: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.between.notInclusive, [min, max])\r\n                    };\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.callback = $.extend($.fn.bootstrapValidator.i18n.callback || {}, {\r\n        'default': 'Please enter a valid value'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.callback = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            callback: 'callback'\r\n        },\r\n\r\n        /**\r\n         * Return result from the callback method\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - callback: The callback method that passes 2 parameters:\r\n         *      callback: function(fieldValue, validator, $field) {\r\n         *          // fieldValue is the value of field\r\n         *          // validator is instance of BootstrapValidator\r\n         *          // $field is the field element\r\n         *      }\r\n         * - message: The invalid message\r\n         * @returns {Boolean|Deferred}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n\r\n            if (options.callback) {\r\n                var dfd      = new $.Deferred(),\r\n                    response = $.fn.bootstrapValidator.helpers.call(options.callback, [value, validator, $field]);\r\n                dfd.resolve($field, 'callback', 'boolean' === typeof response ? response : response.valid, 'object' === typeof response && response.message ? response.message : null);\r\n                return dfd;\r\n            }\r\n\r\n            return true;\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.choice = $.extend($.fn.bootstrapValidator.i18n.choice || {}, {\r\n        'default': 'Please enter a valid value',\r\n        less: 'Please choose %s options at minimum',\r\n        more: 'Please choose %s options at maximum',\r\n        between: 'Please choose %s - %s options'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.choice = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            min: 'min',\r\n            max: 'max'\r\n        },\r\n\r\n        /**\r\n         * Check if the number of checked boxes are less or more than a given number\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Consists of following keys:\r\n         * - min\r\n         * - max\r\n         *\r\n         * At least one of two keys is required\r\n         * The min, max keys define the number which the field value compares to. min, max can be\r\n         *      - A number\r\n         *      - Name of field which its value defines the number\r\n         *      - Name of callback function that returns the number\r\n         *      - A callback function that returns the number\r\n         *\r\n         * - message: The invalid message\r\n         * @returns {Object}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var numChoices = $field.is('select')\r\n                            ? validator.getFieldElements($field.attr('data-bv-field')).find('option').filter(':selected').length\r\n                            : validator.getFieldElements($field.attr('data-bv-field')).filter(':checked').length,\r\n                min        = options.min ? ($.isNumeric(options.min) ? options.min : validator.getDynamicOption($field, options.min)) : null,\r\n                max        = options.max ? ($.isNumeric(options.max) ? options.max : validator.getDynamicOption($field, options.max)) : null,\r\n                isValid    = true,\r\n                message    = options.message || $.fn.bootstrapValidator.i18n.choice['default'];\r\n\r\n            if ((min && numChoices < parseInt(min, 10)) || (max && numChoices > parseInt(max, 10))) {\r\n                isValid = false;\r\n            }\r\n\r\n            switch (true) {\r\n                case (!!min && !!max):\r\n                    message = $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.choice.between, [parseInt(min, 10), parseInt(max, 10)]);\r\n                    break;\r\n\r\n                case (!!min):\r\n                    message = $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.choice.less, parseInt(min, 10));\r\n                    break;\r\n\r\n                case (!!max):\r\n                    message = $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.choice.more, parseInt(max, 10));\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n\r\n            return { valid: isValid, message: message };\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.creditCard = $.extend($.fn.bootstrapValidator.i18n.creditCard || {}, {\r\n        'default': 'Please enter a valid credit card number'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.creditCard = {\r\n        /**\r\n         * Return true if the input value is valid credit card number\r\n         * Based on https://gist.github.com/DiegoSalazar/4075533\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} [options] Can consist of the following key:\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            // Accept only digits, dashes or spaces\r\n            if (/[^0-9-\\s]+/.test(value)) {\r\n                return false;\r\n            }\r\n            value = value.replace(/\\D/g, '');\r\n\r\n            if (!$.fn.bootstrapValidator.helpers.luhn(value)) {\r\n                return false;\r\n            }\r\n\r\n            // Validate the card number based on prefix (IIN ranges) and length\r\n            var cards = {\r\n                AMERICAN_EXPRESS: {\r\n                    length: [15],\r\n                    prefix: ['34', '37']\r\n                },\r\n                DINERS_CLUB: {\r\n                    length: [14],\r\n                    prefix: ['300', '301', '302', '303', '304', '305', '36']\r\n                },\r\n                DINERS_CLUB_US: {\r\n                    length: [16],\r\n                    prefix: ['54', '55']\r\n                },\r\n                DISCOVER: {\r\n                    length: [16],\r\n                    prefix: ['6011', '622126', '622127', '622128', '622129', '62213',\r\n                             '62214', '62215', '62216', '62217', '62218', '62219',\r\n                             '6222', '6223', '6224', '6225', '6226', '6227', '6228',\r\n                             '62290', '62291', '622920', '622921', '622922', '622923',\r\n                             '622924', '622925', '644', '645', '646', '647', '648',\r\n                             '649', '65']\r\n                },\r\n                JCB: {\r\n                    length: [16],\r\n                    prefix: ['3528', '3529', '353', '354', '355', '356', '357', '358']\r\n                },\r\n                LASER: {\r\n                    length: [16, 17, 18, 19],\r\n                    prefix: ['6304', '6706', '6771', '6709']\r\n                },\r\n                MAESTRO: {\r\n                    length: [12, 13, 14, 15, 16, 17, 18, 19],\r\n                    prefix: ['5018', '5020', '5038', '6304', '6759', '6761', '6762', '6763', '6764', '6765', '6766']\r\n                },\r\n                MASTERCARD: {\r\n                    length: [16],\r\n                    prefix: ['51', '52', '53', '54', '55']\r\n                },\r\n                SOLO: {\r\n                    length: [16, 18, 19],\r\n                    prefix: ['6334', '6767']\r\n                },\r\n                UNIONPAY: {\r\n                    length: [16, 17, 18, 19],\r\n                    prefix: ['622126', '622127', '622128', '622129', '62213', '62214',\r\n                             '62215', '62216', '62217', '62218', '62219', '6222', '6223',\r\n                             '6224', '6225', '6226', '6227', '6228', '62290', '62291',\r\n                             '622920', '622921', '622922', '622923', '622924', '622925']\r\n                },\r\n                VISA: {\r\n                    length: [16],\r\n                    prefix: ['4']\r\n                }\r\n            };\r\n\r\n            var type, i;\r\n            for (type in cards) {\r\n                for (i in cards[type].prefix) {\r\n                    if (value.substr(0, cards[type].prefix[i].length) === cards[type].prefix[i]     // Check the prefix\r\n                        && $.inArray(value.length, cards[type].length) !== -1)                      // and length\r\n                    {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return false;\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.cusip = $.extend($.fn.bootstrapValidator.i18n.cusip || {}, {\r\n        'default': 'Please enter a valid CUSIP number'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.cusip = {\r\n        /**\r\n         * Validate a CUSIP\r\n         * Examples:\r\n         * - Valid: 037833100, 931142103, 14149YAR8, 126650BG6\r\n         * - Invalid: 31430F200, 022615AC2\r\n         *\r\n         * @see http://en.wikipedia.org/wiki/CUSIP\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} [options] Can consist of the following keys:\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            value = value.toUpperCase();\r\n            if (!/^[0-9A-Z]{9}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            var converted = $.map(value.split(''), function(item) {\r\n                                var code = item.charCodeAt(0);\r\n                                return (code >= 'A'.charCodeAt(0) && code <= 'Z'.charCodeAt(0))\r\n                                            // Replace A, B, C, ..., Z with 10, 11, ..., 35\r\n                                            ? (code - 'A'.charCodeAt(0) + 10)\r\n                                            : item;\r\n                            }),\r\n                length    = converted.length,\r\n                sum       = 0;\r\n            for (var i = 0; i < length - 1; i++) {\r\n                var num = parseInt(converted[i], 10);\r\n                if (i % 2 !== 0) {\r\n                    num *= 2;\r\n                }\r\n                if (num > 9) {\r\n                    num -= 9;\r\n                }\r\n                sum += num;\r\n            }\r\n\r\n            sum = (10 - (sum % 10)) % 10;\r\n            return sum === converted[length - 1];\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.cvv = $.extend($.fn.bootstrapValidator.i18n.cvv || {}, {\r\n        'default': 'Please enter a valid CVV number'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.cvv = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            ccfield: 'creditCardField'\r\n        },\r\n\r\n        /**\r\n         * Return true if the input value is a valid CVV number.\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - creditCardField: The credit card number field. It can be null\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            if (!/^[0-9]{3,4}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            if (!options.creditCardField) {\r\n                return true;\r\n            }\r\n\r\n            // Get the credit card number\r\n            var creditCard = validator.getFieldElements(options.creditCardField).val();\r\n            if (creditCard === '') {\r\n                return true;\r\n            }\r\n            \r\n            creditCard = creditCard.replace(/\\D/g, '');\r\n\r\n            // Supported credit card types\r\n            var cards = {\r\n                AMERICAN_EXPRESS: {\r\n                    length: [15],\r\n                    prefix: ['34', '37']\r\n                },\r\n                DINERS_CLUB: {\r\n                    length: [14],\r\n                    prefix: ['300', '301', '302', '303', '304', '305', '36']\r\n                },\r\n                DINERS_CLUB_US: {\r\n                    length: [16],\r\n                    prefix: ['54', '55']\r\n                },\r\n                DISCOVER: {\r\n                    length: [16],\r\n                    prefix: ['6011', '622126', '622127', '622128', '622129', '62213',\r\n                             '62214', '62215', '62216', '62217', '62218', '62219',\r\n                             '6222', '6223', '6224', '6225', '6226', '6227', '6228',\r\n                             '62290', '62291', '622920', '622921', '622922', '622923',\r\n                             '622924', '622925', '644', '645', '646', '647', '648',\r\n                             '649', '65']\r\n                },\r\n                JCB: {\r\n                    length: [16],\r\n                    prefix: ['3528', '3529', '353', '354', '355', '356', '357', '358']\r\n                },\r\n                LASER: {\r\n                    length: [16, 17, 18, 19],\r\n                    prefix: ['6304', '6706', '6771', '6709']\r\n                },\r\n                MAESTRO: {\r\n                    length: [12, 13, 14, 15, 16, 17, 18, 19],\r\n                    prefix: ['5018', '5020', '5038', '6304', '6759', '6761', '6762', '6763', '6764', '6765', '6766']\r\n                },\r\n                MASTERCARD: {\r\n                    length: [16],\r\n                    prefix: ['51', '52', '53', '54', '55']\r\n                },\r\n                SOLO: {\r\n                    length: [16, 18, 19],\r\n                    prefix: ['6334', '6767']\r\n                },\r\n                UNIONPAY: {\r\n                    length: [16, 17, 18, 19],\r\n                    prefix: ['622126', '622127', '622128', '622129', '62213', '62214',\r\n                             '62215', '62216', '62217', '62218', '62219', '6222', '6223',\r\n                             '6224', '6225', '6226', '6227', '6228', '62290', '62291',\r\n                             '622920', '622921', '622922', '622923', '622924', '622925']\r\n                },\r\n                VISA: {\r\n                    length: [16],\r\n                    prefix: ['4']\r\n                }\r\n            };\r\n            var type, i, creditCardType = null;\r\n            for (type in cards) {\r\n                for (i in cards[type].prefix) {\r\n                    if (creditCard.substr(0, cards[type].prefix[i].length) === cards[type].prefix[i]    // Check the prefix\r\n                        && $.inArray(creditCard.length, cards[type].length) !== -1)                     // and length\r\n                    {\r\n                        creditCardType = type;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return (creditCardType === null)\r\n                        ? false\r\n                        : (('AMERICAN_EXPRESS' === creditCardType) ? (value.length === 4) : (value.length === 3));\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.date = $.extend($.fn.bootstrapValidator.i18n.date || {}, {\r\n        'default': 'Please enter a valid date'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.date = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            format: 'format',\r\n            separator: 'separator'\r\n        },\r\n\r\n        /**\r\n         * Return true if the input value is valid date\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - message: The invalid message\r\n         * - separator: Use to separate the date, month, and year.\r\n         * By default, it is /\r\n         * - format: The date format. Default is MM/DD/YYYY\r\n         * The format can be:\r\n         *\r\n         * i) date: Consist of DD, MM, YYYY parts which are separated by the separator option\r\n         * ii) date and time:\r\n         * The time can consist of h, m, s parts which are separated by :\r\n         * ii) date, time and A (indicating AM or PM)\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            options.format = options.format || 'MM/DD/YYYY';\r\n\r\n            var formats    = options.format.split(' '),\r\n                dateFormat = formats[0],\r\n                timeFormat = (formats.length > 1) ? formats[1] : null,\r\n                amOrPm     = (formats.length > 2) ? formats[2] : null,\r\n                sections   = value.split(' '),\r\n                date       = sections[0],\r\n                time       = (sections.length > 1) ? sections[1] : null;\r\n\r\n            if (formats.length !== sections.length) {\r\n                return false;\r\n            }\r\n\r\n            // Determine the separator\r\n            var separator = options.separator;\r\n            if (!separator) {\r\n                separator = (date.indexOf('/') !== -1) ? '/' : ((date.indexOf('-') !== -1) ? '-' : null);\r\n            }\r\n            if (separator === null || date.indexOf(separator) === -1) {\r\n                return false;\r\n            }\r\n\r\n            // Determine the date\r\n            date       = date.split(separator);\r\n            dateFormat = dateFormat.split(separator);\r\n            if (date.length !== dateFormat.length) {\r\n                return false;\r\n            }\r\n\r\n            var year  = date[$.inArray('YYYY', dateFormat)],\r\n                month = date[$.inArray('MM', dateFormat)],\r\n                day   = date[$.inArray('DD', dateFormat)];\r\n\r\n            if (!year || !month || !day) {\r\n                return false;\r\n            }\r\n\r\n            // Determine the time\r\n            var minutes = null, hours = null, seconds = null;\r\n            if (timeFormat) {\r\n                timeFormat = timeFormat.split(':');\r\n                time       = time.split(':');\r\n\r\n                if (timeFormat.length !== time.length) {\r\n                    return false;\r\n                }\r\n\r\n                hours   = time.length > 0 ? time[0] : null;\r\n                minutes = time.length > 1 ? time[1] : null;\r\n                seconds = time.length > 2 ? time[2] : null;\r\n\r\n                // Validate seconds\r\n                if (seconds) {\r\n                    seconds = parseInt(seconds, 10);\r\n                    if (isNaN(seconds) || seconds < 0 || seconds > 60) {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                // Validate hours\r\n                if (hours) {\r\n                    hours = parseInt(hours, 10);\r\n                    if (isNaN(hours) || hours < 0 || hours >= 24 || (amOrPm && hours > 12)) {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                // Validate minutes\r\n                if (minutes) {\r\n                    minutes = parseInt(minutes, 10);\r\n                    if (isNaN(minutes) || minutes < 0 || minutes > 59) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Validate day, month, and year\r\n            return $.fn.bootstrapValidator.helpers.date(year, month, day);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.different = $.extend($.fn.bootstrapValidator.i18n.different || {}, {\r\n        'default': 'Please enter a different value'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.different = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            field: 'field'\r\n        },\r\n\r\n        /**\r\n         * Return true if the input value is different with given field's value\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Consists of the following key:\r\n         * - field: The name of field that will be used to compare with current one\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            var compareWith = validator.getFieldElements(options.field);\r\n            if (compareWith === null) {\r\n                return true;\r\n            }\r\n\r\n            if (value !== compareWith.val()) {\r\n                validator.updateStatus(options.field, validator.STATUS_VALID, 'different');\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.digits = $.extend($.fn.bootstrapValidator.i18n.digits || {}, {\r\n        'default': 'Please enter only digits'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.digits = {\r\n        /**\r\n         * Return true if the input value contains digits only\r\n         *\r\n         * @param {BootstrapValidator} validator Validate plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} [options]\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            return /^\\d+$/.test(value);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.ean = $.extend($.fn.bootstrapValidator.i18n.ean || {}, {\r\n        'default': 'Please enter a valid EAN number'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.ean = {\r\n        /**\r\n         * Validate EAN (International Article Number)\r\n         * Examples:\r\n         * - Valid: 73513537, 9780471117094, 4006381333931\r\n         * - Invalid: 73513536\r\n         *\r\n         * @see http://en.wikipedia.org/wiki/European_Article_Number\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            if (!/^(\\d{8}|\\d{12}|\\d{13})$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            var length = value.length,\r\n                sum    = 0,\r\n                weight = (length === 8) ? [3, 1] : [1, 3];\r\n            for (var i = 0; i < length - 1; i++) {\r\n                sum += parseInt(value.charAt(i), 10) * weight[i % 2];\r\n            }\r\n            sum = (10 - sum % 10) % 10;\r\n            return (sum + '' === value.charAt(length - 1));\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.emailAddress = $.extend($.fn.bootstrapValidator.i18n.emailAddress || {}, {\r\n        'default': 'Please enter a valid email address'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.emailAddress = {\r\n        enableByHtml5: function($field) {\r\n            return ('email' === $field.attr('type'));\r\n        },\r\n\r\n        /**\r\n         * Return true if and only if the input value is a valid email address\r\n         *\r\n         * @param {BootstrapValidator} validator Validate plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} [options]\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            // Email address regular expression\r\n            // http://stackoverflow.com/questions/46155/validate-email-address-in-javascript\r\n            var emailRegExp = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n            return emailRegExp.test(value);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.file = $.extend($.fn.bootstrapValidator.i18n.file || {}, {\r\n        'default': 'Please choose a valid file'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.file = {\r\n        html5Attributes: {\r\n            extension: 'extension',\r\n            maxsize: 'maxSize',\r\n            message: 'message',\r\n            type: 'type'\r\n        },\r\n\r\n        /**\r\n         * Validate upload file. Use HTML 5 API if the browser supports\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - extension: The allowed extensions, separated by a comma\r\n         * - maxSize: The maximum size in bytes\r\n         * - message: The invalid message\r\n         * - type: The allowed MIME type, separated by a comma\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            var ext,\r\n                extensions = options.extension ? options.extension.toLowerCase().split(',') : null,\r\n                types      = options.type      ? options.type.toLowerCase().split(',')      : null,\r\n                html5      = (window.File && window.FileList && window.FileReader);\r\n\r\n            if (html5) {\r\n                // Get FileList instance\r\n                var files = $field.get(0).files,\r\n                    total = files.length;\r\n                for (var i = 0; i < total; i++) {\r\n                    // Check file size\r\n                    if (options.maxSize && files[i].size > parseInt(options.maxSize, 10)) {\r\n                        return false;\r\n                    }\r\n\r\n                    // Check file extension\r\n                    ext = files[i].name.substr(files[i].name.lastIndexOf('.') + 1);\r\n                    if (extensions && $.inArray(ext.toLowerCase(), extensions) === -1) {\r\n                        return false;\r\n                    }\r\n\r\n                    // Check file type\r\n                    if (types && $.inArray(files[i].type.toLowerCase(), types) === -1) {\r\n                        return false;\r\n                    }\r\n                }\r\n            } else {\r\n                // Check file extension\r\n                ext = value.substr(value.lastIndexOf('.') + 1);\r\n                if (extensions && $.inArray(ext.toLowerCase(), extensions) === -1) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.greaterThan = $.extend($.fn.bootstrapValidator.i18n.greaterThan || {}, {\r\n        'default': 'Please enter a value greater than or equal to %s',\r\n        notInclusive: 'Please enter a value greater than %s'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.greaterThan = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            value: 'value',\r\n            inclusive: 'inclusive'\r\n        },\r\n\r\n        enableByHtml5: function($field) {\r\n            var min = $field.attr('min');\r\n            if (min) {\r\n                return {\r\n                    value: min\r\n                };\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Return true if the input value is greater than or equals to given number\r\n         *\r\n         * @param {BootstrapValidator} validator Validate plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - value: Define the number to compare with. It can be\r\n         *      - A number\r\n         *      - Name of field which its value defines the number\r\n         *      - Name of callback function that returns the number\r\n         *      - A callback function that returns the number\r\n         *\r\n         * - inclusive [optional]: Can be true or false. Default is true\r\n         * - message: The invalid message\r\n         * @returns {Boolean|Object}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            var compareTo = $.isNumeric(options.value) ? options.value : validator.getDynamicOption($field, options.value);\r\n\r\n            value = parseFloat(value);\r\n\t\t\treturn (options.inclusive === true || options.inclusive === undefined)\r\n                    ? {\r\n                        valid: value >= compareTo,\r\n                        message: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.greaterThan['default'], compareTo)\r\n                    }\r\n                    : {\r\n                        valid: value > compareTo,\r\n                        message: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.greaterThan.notInclusive, compareTo)\r\n                    };\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.grid = $.extend($.fn.bootstrapValidator.i18n.grid || {}, {\r\n        'default': 'Please enter a valid GRId number'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.grid = {\r\n        /**\r\n         * Validate GRId (Global Release Identifier)\r\n         * Examples:\r\n         * - Valid: A12425GABC1234002M, A1-2425G-ABC1234002-M, A1 2425G ABC1234002 M, Grid:A1-2425G-ABC1234002-M\r\n         * - Invalid: A1-2425G-ABC1234002-Q\r\n         *\r\n         * @see http://en.wikipedia.org/wiki/Global_Release_Identifier\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            value = value.toUpperCase();\r\n            if (!/^[GRID:]*([0-9A-Z]{2})[-\\s]*([0-9A-Z]{5})[-\\s]*([0-9A-Z]{10})[-\\s]*([0-9A-Z]{1})$/g.test(value)) {\r\n                return false;\r\n            }\r\n            value = value.replace(/\\s/g, '').replace(/-/g, '');\r\n            if ('GRID:' === value.substr(0, 5)) {\r\n                value = value.substr(5);\r\n            }\r\n            return $.fn.bootstrapValidator.helpers.mod37And36(value);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.hex = $.extend($.fn.bootstrapValidator.i18n.hex || {}, {\r\n        'default': 'Please enter a valid hexadecimal number'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.hex = {\r\n        /**\r\n         * Return true if and only if the input value is a valid hexadecimal number\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Consist of key:\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            return /^[0-9a-fA-F]+$/.test(value);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.hexColor = $.extend($.fn.bootstrapValidator.i18n.hexColor || {}, {\r\n        'default': 'Please enter a valid hex color'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.hexColor = {\r\n        enableByHtml5: function($field) {\r\n            return ('color' === $field.attr('type'));\r\n        },\r\n\r\n        /**\r\n         * Return true if the input value is a valid hex color\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n            return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(value);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.iban = $.extend($.fn.bootstrapValidator.i18n.iban || {}, {\r\n        'default': 'Please enter a valid IBAN number',\r\n        countryNotSupported: 'The country code %s is not supported',\r\n        country: 'Please enter a valid IBAN number in %s',\r\n        countries: {\r\n            AD: 'Andorra',\r\n            AE: 'United Arab Emirates',\r\n            AL: 'Albania',\r\n            AO: 'Angola',\r\n            AT: 'Austria',\r\n            AZ: 'Azerbaijan',\r\n            BA: 'Bosnia and Herzegovina',\r\n            BE: 'Belgium',\r\n            BF: 'Burkina Faso',\r\n            BG: 'Bulgaria',\r\n            BH: 'Bahrain',\r\n            BI: 'Burundi',\r\n            BJ: 'Benin',\r\n            BR: 'Brazil',\r\n            CH: 'Switzerland',\r\n            CI: 'Ivory Coast',\r\n            CM: 'Cameroon',\r\n            CR: 'Costa Rica',\r\n            CV: 'Cape Verde',\r\n            CY: 'Cyprus',\r\n            CZ: 'Czech Republic',\r\n            DE: 'Germany',\r\n            DK: 'Denmark',\r\n            DO: 'Dominican Republic',\r\n            DZ: 'Algeria',\r\n            EE: 'Estonia',\r\n            ES: 'Spain',\r\n            FI: 'Finland',\r\n            FO: 'Faroe Islands',\r\n            FR: 'France',\r\n            GB: 'United Kingdom',\r\n            GE: 'Georgia',\r\n            GI: 'Gibraltar',\r\n            GL: 'Greenland',\r\n            GR: 'Greece',\r\n            GT: 'Guatemala',\r\n            HR: 'Croatia',\r\n            HU: 'Hungary',\r\n            IE: 'Ireland',\r\n            IL: 'Israel',\r\n            IR: 'Iran',\r\n            IS: 'Iceland',\r\n            IT: 'Italy',\r\n            JO: 'Jordan',\r\n            KW: 'Kuwait',\r\n            KZ: 'Kazakhstan',\r\n            LB: 'Lebanon',\r\n            LI: 'Liechtenstein',\r\n            LT: 'Lithuania',\r\n            LU: 'Luxembourg',\r\n            LV: 'Latvia',\r\n            MC: 'Monaco',\r\n            MD: 'Moldova',\r\n            ME: 'Montenegro',\r\n            MG: 'Madagascar',\r\n            MK: 'Macedonia',\r\n            ML: 'Mali',\r\n            MR: 'Mauritania',\r\n            MT: 'Malta',\r\n            MU: 'Mauritius',\r\n            MZ: 'Mozambique',\r\n            NL: 'Netherlands',\r\n            NO: 'Norway',\r\n            PK: 'Pakistan',\r\n            PL: 'Poland',\r\n            PS: 'Palestinian',\r\n            PT: 'Portugal',\r\n            QA: 'Qatar',\r\n            RO: 'Romania',\r\n            RS: 'Serbia',\r\n            SA: 'Saudi Arabia',\r\n            SE: 'Sweden',\r\n            SI: 'Slovenia',\r\n            SK: 'Slovakia',\r\n            SM: 'San Marino',\r\n            SN: 'Senegal',\r\n            TN: 'Tunisia',\r\n            TR: 'Turkey',\r\n            VG: 'Virgin Islands, British'\r\n        }\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.iban = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            country: 'country'\r\n        },\r\n\r\n        // http://www.swift.com/dsp/resources/documents/IBAN_Registry.pdf\r\n        // http://en.wikipedia.org/wiki/International_Bank_Account_Number#IBAN_formats_by_country\r\n        REGEX: {\r\n            'AD': 'AD[0-9]{2}[0-9]{4}[0-9]{4}[A-Z0-9]{12}',                     // Andorra\r\n            'AE': 'AE[0-9]{2}[0-9]{3}[0-9]{16}',                                // United Arab Emirates\r\n            'AL': 'AL[0-9]{2}[0-9]{8}[A-Z0-9]{16}',                             // Albania\r\n            'AO': 'AO[0-9]{2}[0-9]{21}',                                        // Angola\r\n            'AT': 'AT[0-9]{2}[0-9]{5}[0-9]{11}',                                // Austria\r\n            'AZ': 'AZ[0-9]{2}[A-Z]{4}[A-Z0-9]{20}',                             // Azerbaijan\r\n            'BA': 'BA[0-9]{2}[0-9]{3}[0-9]{3}[0-9]{8}[0-9]{2}',                 // Bosnia and Herzegovina\r\n            'BE': 'BE[0-9]{2}[0-9]{3}[0-9]{7}[0-9]{2}',                         // Belgium\r\n            'BF': 'BF[0-9]{2}[0-9]{23}',                                        // Burkina Faso\r\n            'BG': 'BG[0-9]{2}[A-Z]{4}[0-9]{4}[0-9]{2}[A-Z0-9]{8}',              // Bulgaria\r\n            'BH': 'BH[0-9]{2}[A-Z]{4}[A-Z0-9]{14}',                             // Bahrain\r\n            'BI': 'BI[0-9]{2}[0-9]{12}',                                        // Burundi\r\n            'BJ': 'BJ[0-9]{2}[A-Z]{1}[0-9]{23}',                                // Benin\r\n            'BR': 'BR[0-9]{2}[0-9]{8}[0-9]{5}[0-9]{10}[A-Z][A-Z0-9]',           // Brazil\r\n            'CH': 'CH[0-9]{2}[0-9]{5}[A-Z0-9]{12}',                             // Switzerland\r\n            'CI': 'CI[0-9]{2}[A-Z]{1}[0-9]{23}',                                // Ivory Coast\r\n            'CM': 'CM[0-9]{2}[0-9]{23}',                                        // Cameroon\r\n            'CR': 'CR[0-9]{2}[0-9]{3}[0-9]{14}',                                // Costa Rica\r\n            'CV': 'CV[0-9]{2}[0-9]{21}',                                        // Cape Verde\r\n            'CY': 'CY[0-9]{2}[0-9]{3}[0-9]{5}[A-Z0-9]{16}',                     // Cyprus\r\n            'CZ': 'CZ[0-9]{2}[0-9]{20}',                                        // Czech Republic\r\n            'DE': 'DE[0-9]{2}[0-9]{8}[0-9]{10}',                                // Germany\r\n            'DK': 'DK[0-9]{2}[0-9]{14}',                                        // Denmark\r\n            'DO': 'DO[0-9]{2}[A-Z0-9]{4}[0-9]{20}',                             // Dominican Republic\r\n            'DZ': 'DZ[0-9]{2}[0-9]{20}',                                        // Algeria\r\n            'EE': 'EE[0-9]{2}[0-9]{2}[0-9]{2}[0-9]{11}[0-9]{1}',                // Estonia\r\n            'ES': 'ES[0-9]{2}[0-9]{4}[0-9]{4}[0-9]{1}[0-9]{1}[0-9]{10}',        // Spain\r\n            'FI': 'FI[0-9]{2}[0-9]{6}[0-9]{7}[0-9]{1}',                         // Finland\r\n            'FO': 'FO[0-9]{2}[0-9]{4}[0-9]{9}[0-9]{1}',                         // Faroe Islands\r\n            'FR': 'FR[0-9]{2}[0-9]{5}[0-9]{5}[A-Z0-9]{11}[0-9]{2}',             // France\r\n            'GB': 'GB[0-9]{2}[A-Z]{4}[0-9]{6}[0-9]{8}',                         // United Kingdom\r\n            'GE': 'GE[0-9]{2}[A-Z]{2}[0-9]{16}',                                // Georgia\r\n            'GI': 'GI[0-9]{2}[A-Z]{4}[A-Z0-9]{15}',                             // Gibraltar\r\n            'GL': 'GL[0-9]{2}[0-9]{4}[0-9]{9}[0-9]{1}',                         // Greenland\r\n            'GR': 'GR[0-9]{2}[0-9]{3}[0-9]{4}[A-Z0-9]{16}',                     // Greece\r\n            'GT': 'GT[0-9]{2}[A-Z0-9]{4}[A-Z0-9]{20}',                          // Guatemala\r\n            'HR': 'HR[0-9]{2}[0-9]{7}[0-9]{10}',                                // Croatia\r\n            'HU': 'HU[0-9]{2}[0-9]{3}[0-9]{4}[0-9]{1}[0-9]{15}[0-9]{1}',        // Hungary\r\n            'IE': 'IE[0-9]{2}[A-Z]{4}[0-9]{6}[0-9]{8}',                         // Ireland\r\n            'IL': 'IL[0-9]{2}[0-9]{3}[0-9]{3}[0-9]{13}',                        // Israel\r\n            'IR': 'IR[0-9]{2}[0-9]{22}',                                        // Iran\r\n            'IS': 'IS[0-9]{2}[0-9]{4}[0-9]{2}[0-9]{6}[0-9]{10}',                // Iceland\r\n            'IT': 'IT[0-9]{2}[A-Z]{1}[0-9]{5}[0-9]{5}[A-Z0-9]{12}',             // Italy\r\n            'JO': 'JO[0-9]{2}[A-Z]{4}[0-9]{4}[0]{8}[A-Z0-9]{10}',               // Jordan\r\n            'KW': 'KW[0-9]{2}[A-Z]{4}[0-9]{22}',                                // Kuwait\r\n            'KZ': 'KZ[0-9]{2}[0-9]{3}[A-Z0-9]{13}',                             // Kazakhstan\r\n            'LB': 'LB[0-9]{2}[0-9]{4}[A-Z0-9]{20}',                             // Lebanon\r\n            'LI': 'LI[0-9]{2}[0-9]{5}[A-Z0-9]{12}',                             // Liechtenstein\r\n            'LT': 'LT[0-9]{2}[0-9]{5}[0-9]{11}',                                // Lithuania\r\n            'LU': 'LU[0-9]{2}[0-9]{3}[A-Z0-9]{13}',                             // Luxembourg\r\n            'LV': 'LV[0-9]{2}[A-Z]{4}[A-Z0-9]{13}',                             // Latvia\r\n            'MC': 'MC[0-9]{2}[0-9]{5}[0-9]{5}[A-Z0-9]{11}[0-9]{2}',             // Monaco\r\n            'MD': 'MD[0-9]{2}[A-Z0-9]{20}',                                     // Moldova\r\n            'ME': 'ME[0-9]{2}[0-9]{3}[0-9]{13}[0-9]{2}',                        // Montenegro\r\n            'MG': 'MG[0-9]{2}[0-9]{23}',                                        // Madagascar\r\n            'MK': 'MK[0-9]{2}[0-9]{3}[A-Z0-9]{10}[0-9]{2}',                     // Macedonia\r\n            'ML': 'ML[0-9]{2}[A-Z]{1}[0-9]{23}',                                // Mali\r\n            'MR': 'MR13[0-9]{5}[0-9]{5}[0-9]{11}[0-9]{2}',                      // Mauritania\r\n            'MT': 'MT[0-9]{2}[A-Z]{4}[0-9]{5}[A-Z0-9]{18}',                     // Malta\r\n            'MU': 'MU[0-9]{2}[A-Z]{4}[0-9]{2}[0-9]{2}[0-9]{12}[0-9]{3}[A-Z]{3}',// Mauritius\r\n            'MZ': 'MZ[0-9]{2}[0-9]{21}',                                        // Mozambique\r\n            'NL': 'NL[0-9]{2}[A-Z]{4}[0-9]{10}',                                // Netherlands\r\n            'NO': 'NO[0-9]{2}[0-9]{4}[0-9]{6}[0-9]{1}',                         // Norway\r\n            'PK': 'PK[0-9]{2}[A-Z]{4}[A-Z0-9]{16}',                             // Pakistan\r\n            'PL': 'PL[0-9]{2}[0-9]{8}[0-9]{16}',                                // Poland\r\n            'PS': 'PS[0-9]{2}[A-Z]{4}[A-Z0-9]{21}',                             // Palestinian\r\n            'PT': 'PT[0-9]{2}[0-9]{4}[0-9]{4}[0-9]{11}[0-9]{2}',                // Portugal\r\n            'QA': 'QA[0-9]{2}[A-Z]{4}[A-Z0-9]{21}',                             // Qatar\r\n            'RO': 'RO[0-9]{2}[A-Z]{4}[A-Z0-9]{16}',                             // Romania\r\n            'RS': 'RS[0-9]{2}[0-9]{3}[0-9]{13}[0-9]{2}',                        // Serbia\r\n            'SA': 'SA[0-9]{2}[0-9]{2}[A-Z0-9]{18}',                             // Saudi Arabia\r\n            'SE': 'SE[0-9]{2}[0-9]{3}[0-9]{16}[0-9]{1}',                        // Sweden\r\n            'SI': 'SI[0-9]{2}[0-9]{5}[0-9]{8}[0-9]{2}',                         // Slovenia\r\n            'SK': 'SK[0-9]{2}[0-9]{4}[0-9]{6}[0-9]{10}',                        // Slovakia\r\n            'SM': 'SM[0-9]{2}[A-Z]{1}[0-9]{5}[0-9]{5}[A-Z0-9]{12}',             // San Marino\r\n            'SN': 'SN[0-9]{2}[A-Z]{1}[0-9]{23}',                                // Senegal\r\n            'TN': 'TN59[0-9]{2}[0-9]{3}[0-9]{13}[0-9]{2}',                      // Tunisia\r\n            'TR': 'TR[0-9]{2}[0-9]{5}[A-Z0-9]{1}[A-Z0-9]{16}',                  // Turkey\r\n            'VG': 'VG[0-9]{2}[A-Z]{4}[0-9]{16}'                                 // Virgin Islands, British\r\n        },\r\n\r\n        /**\r\n         * Validate an International Bank Account Number (IBAN)\r\n         * To test it, take the sample IBAN from\r\n         * http://www.nordea.com/Our+services/International+products+and+services/Cash+Management/IBAN+countries/908462.html\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - message: The invalid message\r\n         * - country: The ISO 3166-1 country code. It can be\r\n         *      - A country code\r\n         *      - Name of field which its value defines the country code\r\n         *      - Name of callback function that returns the country code\r\n         *      - A callback function that returns the country code\r\n         * @returns {Boolean|Object}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            value = value.replace(/[^a-zA-Z0-9]/g, '').toUpperCase();\r\n            var country = options.country;\r\n            if (!country) {\r\n                country = value.substr(0, 2);\r\n            } else if (typeof country !== 'string' || !this.REGEX[country]) {\r\n                // Determine the country code\r\n                country = validator.getDynamicOption($field, country);\r\n            }\r\n\r\n            if (!this.REGEX[country]) {\r\n                return {\r\n                    valid: false,\r\n                    message: $.fn.bootstrapValidator.helpers.format($.fn.bootstrapValidator.i18n.iban.countryNotSupported, country)\r\n                };\r\n            }\r\n\r\n            if (!(new RegExp('^' + this.REGEX[country] + '$')).test(value)) {\r\n                return {\r\n                    valid: false,\r\n                    message: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.iban.country, $.fn.bootstrapValidator.i18n.iban.countries[country])\r\n                };\r\n            }\r\n\r\n            value = value.substr(4) + value.substr(0, 4);\r\n            value = $.map(value.split(''), function(n) {\r\n                var code = n.charCodeAt(0);\r\n                return (code >= 'A'.charCodeAt(0) && code <= 'Z'.charCodeAt(0))\r\n                        // Replace A, B, C, ..., Z with 10, 11, ..., 35\r\n                        ? (code - 'A'.charCodeAt(0) + 10)\r\n                        : n;\r\n            });\r\n            value = value.join('');\r\n\r\n            var temp   = parseInt(value.substr(0, 1), 10),\r\n                length = value.length;\r\n            for (var i = 1; i < length; ++i) {\r\n                temp = (temp * 10 + parseInt(value.substr(i, 1), 10)) % 97;\r\n            }\r\n\r\n            return {\r\n                valid: (temp === 1),\r\n                message: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.iban.country, $.fn.bootstrapValidator.i18n.iban.countries[country])\r\n            };\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.id = $.extend($.fn.bootstrapValidator.i18n.id || {}, {\r\n        'default': 'Please enter a valid identification number',\r\n        countryNotSupported: 'The country code %s is not supported',\r\n        country: 'Please enter a valid %s identification number',\r\n        countries: {\r\n            BA: 'Bosnia and Herzegovina',\r\n            BG: 'Bulgarian',\r\n            BR: 'Brazilian',\r\n            CH: 'Swiss',\r\n            CL: 'Chilean',\r\n            CZ: 'Czech',\r\n            DK: 'Danish',\r\n            EE: 'Estonian',\r\n            ES: 'Spanish',\r\n            FI: 'Finnish',\r\n            HR: 'Croatian',\r\n            IE: 'Irish',\r\n            IS: 'Iceland',\r\n            LT: 'Lithuanian',\r\n            LV: 'Latvian',\r\n            ME: 'Montenegro',\r\n            MK: 'Macedonian',\r\n            NL: 'Dutch',\r\n            RO: 'Romanian',\r\n            RS: 'Serbian',\r\n            SE: 'Swedish',\r\n            SI: 'Slovenian',\r\n            SK: 'Slovak',\r\n            SM: 'San Marino',\r\n            ZA: 'South African'\r\n        }\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.id = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            country: 'country'\r\n        },\r\n\r\n        // Supported country codes\r\n        COUNTRY_CODES: [\r\n            'BA', 'BG', 'BR', 'CH', 'CL', 'CZ', 'DK', 'EE', 'ES', 'FI', 'HR', 'IE', 'IS', 'LT', 'LV', 'ME', 'MK', 'NL',\r\n            'RO', 'RS', 'SE', 'SI', 'SK', 'SM', 'ZA'\r\n        ],\r\n\r\n        /**\r\n         * Validate identification number in different countries\r\n         *\r\n         * @see http://en.wikipedia.org/wiki/National_identification_number\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Consist of key:\r\n         * - message: The invalid message\r\n         * - country: The ISO 3166-1 country code. It can be\r\n         *      - One of country code defined in COUNTRY_CODES\r\n         *      - Name of field which its value defines the country code\r\n         *      - Name of callback function that returns the country code\r\n         *      - A callback function that returns the country code\r\n         * @returns {Boolean|Object}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            var country = options.country;\r\n            if (!country) {\r\n                country = value.substr(0, 2);\r\n            } else if (typeof country !== 'string' || $.inArray(country.toUpperCase(), this.COUNTRY_CODES) === -1) {\r\n                // Determine the country code\r\n                country = validator.getDynamicOption($field, country);\r\n            }\r\n\r\n            if ($.inArray(country, this.COUNTRY_CODES) === -1) {\r\n                return { valid: false, message: $.fn.bootstrapValidator.helpers.format($.fn.bootstrapValidator.i18n.id.countryNotSupported, country) };\r\n            }\r\n\r\n            var method  = ['_', country.toLowerCase()].join('');\r\n            return this[method](value)\r\n                    ? true\r\n                    : {\r\n                        valid: false,\r\n                        message: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.id.country, $.fn.bootstrapValidator.i18n.id.countries[country.toUpperCase()])\r\n                    };\r\n        },\r\n\r\n        /**\r\n         * Validate Unique Master Citizen Number which uses in\r\n         * - Bosnia and Herzegovina (country code: BA)\r\n         * - Macedonia (MK)\r\n         * - Montenegro (ME)\r\n         * - Serbia (RS)\r\n         * - Slovenia (SI)\r\n         *\r\n         * @see http://en.wikipedia.org/wiki/Unique_Master_Citizen_Number\r\n         * @param {String} value The ID\r\n         * @param {String} countryCode The ISO country code, can be BA, MK, ME, RS, SI\r\n         * @returns {Boolean}\r\n         */\r\n        _validateJMBG: function(value, countryCode) {\r\n            if (!/^\\d{13}$/.test(value)) {\r\n                return false;\r\n            }\r\n            var day   = parseInt(value.substr(0, 2), 10),\r\n                month = parseInt(value.substr(2, 2), 10),\r\n                year  = parseInt(value.substr(4, 3), 10),\r\n                rr    = parseInt(value.substr(7, 2), 10),\r\n                k     = parseInt(value.substr(12, 1), 10);\r\n\r\n            // Validate date of birth\r\n            // FIXME: Validate the year of birth\r\n            if (day > 31 || month > 12) {\r\n                return false;\r\n            }\r\n\r\n            // Validate checksum\r\n            var sum = 0;\r\n            for (var i = 0; i < 6; i++) {\r\n                sum += (7 - i) * (parseInt(value.charAt(i), 10) + parseInt(value.charAt(i + 6), 10));\r\n            }\r\n            sum = 11 - sum % 11;\r\n            if (sum === 10 || sum === 11) {\r\n                sum = 0;\r\n            }\r\n            if (sum !== k) {\r\n                return false;\r\n            }\r\n\r\n            // Validate political region\r\n            // rr is the political region of birth, which can be in ranges:\r\n            // 10-19: Bosnia and Herzegovina\r\n            // 20-29: Montenegro\r\n            // 30-39: Croatia (not used anymore)\r\n            // 41-49: Macedonia\r\n            // 50-59: Slovenia (only 50 is used)\r\n            // 70-79: Central Serbia\r\n            // 80-89: Serbian province of Vojvodina\r\n            // 90-99: Kosovo\r\n            switch (countryCode.toUpperCase()) {\r\n                case 'BA':\r\n                    return (10 <= rr && rr <= 19);\r\n                case 'MK':\r\n                    return (41 <= rr && rr <= 49);\r\n                case 'ME':\r\n                    return (20 <= rr && rr <= 29);\r\n                case 'RS':\r\n                    return (70 <= rr && rr <= 99);\r\n                case 'SI':\r\n                    return (50 <= rr && rr <= 59);\r\n                default:\r\n                    return true;\r\n            }\r\n        },\r\n\r\n        _ba: function(value) {\r\n            return this._validateJMBG(value, 'BA');\r\n        },\r\n        _mk: function(value) {\r\n            return this._validateJMBG(value, 'MK');\r\n        },\r\n        _me: function(value) {\r\n            return this._validateJMBG(value, 'ME');\r\n        },\r\n        _rs: function(value) {\r\n            return this._validateJMBG(value, 'RS');\r\n        },\r\n\r\n        /**\r\n         * Examples: 0101006500006\r\n         */\r\n        _si: function(value) {\r\n            return this._validateJMBG(value, 'SI');\r\n        },\r\n\r\n        /**\r\n         * Validate Bulgarian national identification number (EGN)\r\n         * Examples:\r\n         * - Valid: 7523169263, 8032056031, 803205 603 1, 8001010008, 7501020018, 7552010005, 7542011030\r\n         * - Invalid: 8019010008\r\n         *\r\n         * @see http://en.wikipedia.org/wiki/Uniform_civil_number\r\n         * @param {String} value The ID\r\n         * @returns {Boolean}\r\n         */\r\n        _bg: function(value) {\r\n            if (!/^\\d{10}$/.test(value) && !/^\\d{6}\\s\\d{3}\\s\\d{1}$/.test(value)) {\r\n                return false;\r\n            }\r\n            value = value.replace(/\\s/g, '');\r\n            // Check the birth date\r\n            var year  = parseInt(value.substr(0, 2), 10) + 1900,\r\n                month = parseInt(value.substr(2, 2), 10),\r\n                day   = parseInt(value.substr(4, 2), 10);\r\n            if (month > 40) {\r\n                year += 100;\r\n                month -= 40;\r\n            } else if (month > 20) {\r\n                year -= 100;\r\n                month -= 20;\r\n            }\r\n\r\n            if (!$.fn.bootstrapValidator.helpers.date(year, month, day)) {\r\n                return false;\r\n            }\r\n\r\n            var sum    = 0,\r\n                weight = [2, 4, 8, 5, 10, 9, 7, 3, 6];\r\n            for (var i = 0; i < 9; i++) {\r\n                sum += parseInt(value.charAt(i), 10) * weight[i];\r\n            }\r\n            sum = (sum % 11) % 10;\r\n            return (sum + '' === value.substr(9, 1));\r\n        },\r\n\r\n        /**\r\n         * Validate Brazilian national identification number (CPF)\r\n         * Examples:\r\n         * - Valid: 39053344705, 390.533.447-05, 111.444.777-35\r\n         * - Invalid: 231.002.999-00\r\n         *\r\n         * @see http://en.wikipedia.org/wiki/Cadastro_de_Pessoas_F%C3%ADsicas\r\n         * @param {String} value The ID\r\n         * @returns {Boolean}\r\n         */\r\n        _br: function(value) {\r\n            if (/^1{11}|2{11}|3{11}|4{11}|5{11}|6{11}|7{11}|8{11}|9{11}|0{11}$/.test(value)) {\r\n                return false;\r\n            }\r\n            if (!/^\\d{11}$/.test(value) && !/^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$/.test(value)) {\r\n                return false;\r\n            }\r\n            value = value.replace(/\\./g, '').replace(/-/g, '');\r\n\r\n            var d1 = 0;\r\n            for (var i = 0; i < 9; i++) {\r\n                d1 += (10 - i) * parseInt(value.charAt(i), 10);\r\n            }\r\n            d1 = 11 - d1 % 11;\r\n            if (d1 === 10 || d1 === 11) {\r\n                d1 = 0;\r\n            }\r\n            if (d1 + '' !== value.charAt(9)) {\r\n                return false;\r\n            }\r\n\r\n            var d2 = 0;\r\n            for (i = 0; i < 10; i++) {\r\n                d2 += (11 - i) * parseInt(value.charAt(i), 10);\r\n            }\r\n            d2 = 11 - d2 % 11;\r\n            if (d2 === 10 || d2 === 11) {\r\n                d2 = 0;\r\n            }\r\n\r\n            return (d2 + '' === value.charAt(10));\r\n        },\r\n\r\n        /**\r\n         * Validate Swiss Social Security Number (AHV-Nr/No AVS)\r\n         * Examples:\r\n         * - Valid: 756.1234.5678.95, 7561234567895\r\n         *\r\n         * @see http://en.wikipedia.org/wiki/National_identification_number#Switzerland\r\n         * @see http://www.bsv.admin.ch/themen/ahv/00011/02185/index.html?lang=de\r\n         * @param {String} value The ID\r\n         * @returns {Boolean}\r\n         */\r\n        _ch: function(value) {\r\n            if (!/^756[\\.]{0,1}[0-9]{4}[\\.]{0,1}[0-9]{4}[\\.]{0,1}[0-9]{2}$/.test(value)) {\r\n                return false;\r\n            }\r\n            value = value.replace(/\\D/g, '').substr(3);\r\n            var length = value.length,\r\n                sum    = 0,\r\n                weight = (length === 8) ? [3, 1] : [1, 3];\r\n            for (var i = 0; i < length - 1; i++) {\r\n                sum += parseInt(value.charAt(i), 10) * weight[i % 2];\r\n            }\r\n            sum = 10 - sum % 10;\r\n            return (sum + '' === value.charAt(length - 1));\r\n        },\r\n\r\n        /**\r\n         * Validate Chilean national identification number (RUN/RUT)\r\n         * Examples:\r\n         * - Valid: 76086428-5, 22060449-7, 12531909-2\r\n         *\r\n         * @see http://en.wikipedia.org/wiki/National_identification_number#Chile\r\n         * @see https://palena.sii.cl/cvc/dte/ee_empresas_emisoras.html for samples\r\n         * @param {String} value The ID\r\n         * @returns {Boolean}\r\n         */\r\n        _cl: function(value) {\r\n            if (!/^\\d{7,8}[-]{0,1}[0-9K]$/i.test(value)) {\r\n                return false;\r\n            }\r\n            value = value.replace(/\\-/g, '');\r\n            while (value.length < 9) {\r\n                value = '0' + value;\r\n            }\r\n            var sum    = 0,\r\n                weight = [3, 2, 7, 6, 5, 4, 3, 2];\r\n            for (var i = 0; i < 8; i++) {\r\n                sum += parseInt(value.charAt(i), 10) * weight[i];\r\n            }\r\n            sum = 11 - sum % 11;\r\n            if (sum === 11) {\r\n                sum = 0;\r\n            } else if (sum === 10) {\r\n                sum = 'K';\r\n            }\r\n            return sum + '' === value.charAt(8).toUpperCase();\r\n        },\r\n\r\n        /**\r\n         * Validate Czech national identification number (RC)\r\n         * Examples:\r\n         * - Valid: 7103192745, 991231123\r\n         * - Invalid: 1103492745, 590312123\r\n         *\r\n         * @param {String} value The ID\r\n         * @returns {Boolean}\r\n         */\r\n        _cz: function(value) {\r\n            if (!/^\\d{9,10}$/.test(value)) {\r\n                return false;\r\n            }\r\n            var year  = 1900 + parseInt(value.substr(0, 2), 10),\r\n                month = parseInt(value.substr(2, 2), 10) % 50 % 20,\r\n                day   = parseInt(value.substr(4, 2), 10);\r\n            if (value.length === 9) {\r\n                if (year >= 1980) {\r\n                    year -= 100;\r\n                }\r\n                if (year > 1953) {\r\n                    return false;\r\n                }\r\n            } else if (year < 1954) {\r\n                year += 100;\r\n            }\r\n\r\n            if (!$.fn.bootstrapValidator.helpers.date(year, month, day)) {\r\n                return false;\r\n            }\r\n\r\n            // Check that the birth date is not in the future\r\n            if (value.length === 10) {\r\n                var check = parseInt(value.substr(0, 9), 10) % 11;\r\n                if (year < 1985) {\r\n                    check = check % 10;\r\n                }\r\n                return (check + '' === value.substr(9, 1));\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Validate Danish Personal Identification number (CPR)\r\n         * Examples:\r\n         * - Valid: 2110625629, 211062-5629\r\n         * - Invalid: 511062-5629\r\n         *\r\n         * @see https://en.wikipedia.org/wiki/Personal_identification_number_(Denmark)\r\n         * @param {String} value The ID\r\n         * @returns {Boolean}\r\n         */\r\n        _dk: function(value) {\r\n            if (!/^[0-9]{6}[-]{0,1}[0-9]{4}$/.test(value)) {\r\n                return false;\r\n            }\r\n            value = value.replace(/-/g, '');\r\n            var day   = parseInt(value.substr(0, 2), 10),\r\n                month = parseInt(value.substr(2, 2), 10),\r\n                year  = parseInt(value.substr(4, 2), 10);\r\n\r\n            switch (true) {\r\n                case ('5678'.indexOf(value.charAt(6)) !== -1 && year >= 58):\r\n                    year += 1800;\r\n                    break;\r\n                case ('0123'.indexOf(value.charAt(6)) !== -1):\r\n                case ('49'.indexOf(value.charAt(6)) !== -1 && year >= 37):\r\n                    year += 1900;\r\n                    break;\r\n                default:\r\n                    year += 2000;\r\n                    break;\r\n            }\r\n\r\n            return $.fn.bootstrapValidator.helpers.date(year, month, day);\r\n        },\r\n\r\n        /**\r\n         * Validate Estonian Personal Identification Code (isikukood)\r\n         * Examples:\r\n         * - Valid: 37605030299\r\n         *\r\n         * @see http://et.wikipedia.org/wiki/Isikukood\r\n         * @param {String} value The ID\r\n         * @returns {Boolean}\r\n         */\r\n        _ee: function(value) {\r\n            // Use the same format as Lithuanian Personal Code\r\n            return this._lt(value);\r\n        },\r\n\r\n        /**\r\n         * Validate Spanish personal identity code (DNI)\r\n         * Support i) DNI (for Spanish citizens) and ii) NIE (for foreign people)\r\n         *\r\n         * Examples:\r\n         * - Valid: i) 54362315K, 54362315-K; ii) X2482300W, X-2482300W, X-2482300-W\r\n         * - Invalid: i) 54362315Z; ii) X-2482300A\r\n         *\r\n         * @see https://en.wikipedia.org/wiki/National_identification_number#Spain\r\n         * @param {String} value The ID\r\n         * @returns {Boolean}\r\n         */\r\n        _es: function(value) {\r\n            if (!/^[0-9A-Z]{8}[-]{0,1}[0-9A-Z]$/.test(value)                    // DNI\r\n                && !/^[XYZ][-]{0,1}[0-9]{7}[-]{0,1}[0-9A-Z]$/.test(value)) {    // NIE\r\n                return false;\r\n            }\r\n\r\n            value = value.replace(/-/g, '');\r\n            var index = 'XYZ'.indexOf(value.charAt(0));\r\n            if (index !== -1) {\r\n                // It is NIE number\r\n                value = index + value.substr(1) + '';\r\n            }\r\n\r\n            var check = parseInt(value.substr(0, 8), 10);\r\n            check = 'TRWAGMYFPDXBNJZSQVHLCKE'[check % 23];\r\n            return (check === value.substr(8, 1));\r\n        },\r\n\r\n        /**\r\n         * Validate Finnish Personal Identity Code (HETU)\r\n         * Examples:\r\n         * - Valid: 311280-888Y, 131052-308T\r\n         * - Invalid: 131052-308U, 310252-308Y\r\n         *\r\n         * @param {String} value The ID\r\n         * @returns {Boolean}\r\n         */\r\n        _fi: function(value) {\r\n            if (!/^[0-9]{6}[-+A][0-9]{3}[0-9ABCDEFHJKLMNPRSTUVWXY]$/.test(value)) {\r\n                return false;\r\n            }\r\n            var day       = parseInt(value.substr(0, 2), 10),\r\n                month     = parseInt(value.substr(2, 2), 10),\r\n                year      = parseInt(value.substr(4, 2), 10),\r\n                centuries = {\r\n                    '+': 1800,\r\n                    '-': 1900,\r\n                    'A': 2000\r\n                };\r\n            year = centuries[value.charAt(6)] + year;\r\n\r\n            if (!$.fn.bootstrapValidator.helpers.date(year, month, day)) {\r\n                return false;\r\n            }\r\n\r\n            var individual = parseInt(value.substr(7, 3), 10);\r\n            if (individual < 2) {\r\n                return false;\r\n            }\r\n            var n = value.substr(0, 6) + value.substr(7, 3) + '';\r\n            n = parseInt(n, 10);\r\n            return '0123456789ABCDEFHJKLMNPRSTUVWXY'.charAt(n % 31) === value.charAt(10);\r\n        },\r\n\r\n        /**\r\n         * Validate Croatian personal identification number (OIB)\r\n         * Examples:\r\n         * - Valid: 33392005961\r\n         * - Invalid: 33392005962\r\n         *\r\n         * @param {String} value The ID\r\n         * @returns {Boolean}\r\n         */\r\n        _hr: function(value) {\r\n            if (!/^[0-9]{11}$/.test(value)) {\r\n                return false;\r\n            }\r\n            return $.fn.bootstrapValidator.helpers.mod11And10(value);\r\n        },\r\n\r\n        /**\r\n         * Validate Irish Personal Public Service Number (PPS)\r\n         * Examples:\r\n         * - Valid: 6433435F, 6433435FT, 6433435FW, 6433435OA, 6433435IH, 1234567TW, 1234567FA\r\n         * - Invalid: 6433435E, 6433435VH\r\n         *\r\n         * @see https://en.wikipedia.org/wiki/Personal_Public_Service_Number\r\n         * @param {String} value The ID\r\n         * @returns {Boolean}\r\n         */\r\n        _ie: function(value) {\r\n            if (!/^\\d{7}[A-W][AHWTX]?$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            var getCheckDigit = function(value) {\r\n                while (value.length < 7) {\r\n                    value = '0' + value;\r\n                }\r\n                var alphabet = 'WABCDEFGHIJKLMNOPQRSTUV',\r\n                    sum      = 0;\r\n                for (var i = 0; i < 7; i++) {\r\n                    sum += parseInt(value.charAt(i), 10) * (8 - i);\r\n                }\r\n                sum += 9 * alphabet.indexOf(value.substr(7));\r\n                return alphabet[sum % 23];\r\n            };\r\n\r\n            // 2013 format\r\n            if (value.length === 9 && ('A' === value.charAt(8) || 'H' === value.charAt(8))) {\r\n                return value.charAt(7) === getCheckDigit(value.substr(0, 7) + value.substr(8) + '');\r\n            }\r\n            // The old format\r\n            else {\r\n                return value.charAt(7) === getCheckDigit(value.substr(0, 7));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Validate Iceland national identification number (Kennitala)\r\n         * Examples:\r\n         * - Valid: 120174-3399, 1201743399, 0902862349\r\n         *\r\n         * @see http://en.wikipedia.org/wiki/Kennitala\r\n         * @param {String} value The ID\r\n         * @returns {Boolean}\r\n         */\r\n        _is: function(value) {\r\n            if (!/^[0-9]{6}[-]{0,1}[0-9]{4}$/.test(value)) {\r\n                return false;\r\n            }\r\n            value = value.replace(/-/g, '');\r\n            var day     = parseInt(value.substr(0, 2), 10),\r\n                month   = parseInt(value.substr(2, 2), 10),\r\n                year    = parseInt(value.substr(4, 2), 10),\r\n                century = parseInt(value.charAt(9), 10);\r\n\r\n            year = (century === 9) ? (1900 + year) : ((20 + century) * 100 + year);\r\n            if (!$.fn.bootstrapValidator.helpers.date(year, month, day, true)) {\r\n                return false;\r\n            }\r\n            // Validate the check digit\r\n            var sum    = 0,\r\n                weight = [3, 2, 7, 6, 5, 4, 3, 2];\r\n            for (var i = 0; i < 8; i++) {\r\n                sum += parseInt(value.charAt(i), 10) * weight[i];\r\n            }\r\n            sum = 11 - sum % 11;\r\n            return (sum + '' === value.charAt(8));\r\n        },\r\n\r\n        /**\r\n         * Validate Lithuanian Personal Code (Asmens kodas)\r\n         * Examples:\r\n         * - Valid: 38703181745\r\n         * - Invalid: 38703181746, 78703181745, 38703421745\r\n         *\r\n         * @see http://en.wikipedia.org/wiki/National_identification_number#Lithuania\r\n         * @see http://www.adomas.org/midi2007/pcode.html\r\n         * @param {String} value The ID\r\n         * @returns {Boolean}\r\n         */\r\n        _lt: function(value) {\r\n            if (!/^[0-9]{11}$/.test(value)) {\r\n                return false;\r\n            }\r\n            var gender  = parseInt(value.charAt(0), 10),\r\n                year    = parseInt(value.substr(1, 2), 10),\r\n                month   = parseInt(value.substr(3, 2), 10),\r\n                day     = parseInt(value.substr(5, 2), 10),\r\n                century = (gender % 2 === 0) ? (17 + gender / 2) : (17 + (gender + 1) / 2);\r\n            year = century * 100 + year;\r\n            if (!$.fn.bootstrapValidator.helpers.date(year, month, day, true)) {\r\n                return false;\r\n            }\r\n\r\n            // Validate the check digit\r\n            var sum    = 0,\r\n                weight = [1, 2, 3, 4, 5, 6, 7, 8, 9, 1];\r\n            for (var i = 0; i < 10; i++) {\r\n                sum += parseInt(value.charAt(i), 10) * weight[i];\r\n            }\r\n            sum = sum % 11;\r\n            if (sum !== 10) {\r\n                return sum + '' === value.charAt(10);\r\n            }\r\n\r\n            // Re-calculate the check digit\r\n            sum    = 0;\r\n            weight = [3, 4, 5, 6, 7, 8, 9, 1, 2, 3];\r\n            for (i = 0; i < 10; i++) {\r\n                sum += parseInt(value.charAt(i), 10) * weight[i];\r\n            }\r\n            sum = sum % 11;\r\n            if (sum === 10) {\r\n                sum = 0;\r\n            }\r\n            return (sum + '' === value.charAt(10));\r\n        },\r\n\r\n        /**\r\n         * Validate Latvian Personal Code (Personas kods)\r\n         * Examples:\r\n         * - Valid: 161175-19997, 16117519997\r\n         * - Invalid: 161375-19997\r\n         *\r\n         * @see http://laacz.lv/2006/11/25/pk-parbaudes-algoritms/\r\n         * @param {String} value The ID\r\n         * @returns {Boolean}\r\n         */\r\n        _lv: function(value) {\r\n            if (!/^[0-9]{6}[-]{0,1}[0-9]{5}$/.test(value)) {\r\n                return false;\r\n            }\r\n            value = value.replace(/\\D/g, '');\r\n            // Check birth date\r\n            var day   = parseInt(value.substr(0, 2), 10),\r\n                month = parseInt(value.substr(2, 2), 10),\r\n                year  = parseInt(value.substr(4, 2), 10);\r\n            year = year + 1800 + parseInt(value.charAt(6), 10) * 100;\r\n\r\n            if (!$.fn.bootstrapValidator.helpers.date(year, month, day, true)) {\r\n                return false;\r\n            }\r\n\r\n            // Check personal code\r\n            var sum    = 0,\r\n                weight = [10, 5, 8, 4, 2, 1, 6, 3, 7, 9];\r\n            for (var i = 0; i < 10; i++) {\r\n                sum += parseInt(value.charAt(i), 10) * weight[i];\r\n            }\r\n            sum = (sum + 1) % 11 % 10;\r\n            return (sum + '' === value.charAt(10));\r\n        },\r\n\r\n        /**\r\n         * Validate Dutch national identification number (BSN)\r\n         * Examples:\r\n         * - Valid: 111222333, 941331490, 9413.31.490\r\n         * - Invalid: 111252333\r\n         *\r\n         * @see https://nl.wikipedia.org/wiki/Burgerservicenummer\r\n         * @param {String} value The ID\r\n         * @returns {Boolean}\r\n         */\r\n        _nl: function(value) {\r\n            while (value.length < 9) {\r\n                value = '0' + value;\r\n            }\r\n            if (!/^[0-9]{4}[.]{0,1}[0-9]{2}[.]{0,1}[0-9]{3}$/.test(value)) {\r\n                return false;\r\n            }\r\n            value = value.replace(/\\./g, '');\r\n            if (parseInt(value, 10) === 0) {\r\n                return false;\r\n            }\r\n            var sum    = 0,\r\n                length = value.length;\r\n            for (var i = 0; i < length - 1; i++) {\r\n                sum += (9 - i) * parseInt(value.charAt(i), 10);\r\n            }\r\n            sum = sum % 11;\r\n            if (sum === 10) {\r\n                sum = 0;\r\n            }\r\n            return (sum + '' === value.charAt(length - 1));\r\n        },\r\n\r\n        /**\r\n         * Validate Romanian numerical personal code (CNP)\r\n         * Examples:\r\n         * - Valid: 1630615123457, 1800101221144\r\n         * - Invalid: 8800101221144, 1632215123457, 1630615123458\r\n         *\r\n         * @see http://en.wikipedia.org/wiki/National_identification_number#Romania\r\n         * @param {String} value The ID\r\n         * @returns {Boolean}\r\n         */\r\n        _ro: function(value) {\r\n            if (!/^[0-9]{13}$/.test(value)) {\r\n                return false;\r\n            }\r\n            var gender = parseInt(value.charAt(0), 10);\r\n            if (gender === 0 || gender === 7 || gender === 8) {\r\n                return false;\r\n            }\r\n\r\n            // Determine the date of birth\r\n            var year      = parseInt(value.substr(1, 2), 10),\r\n                month     = parseInt(value.substr(3, 2), 10),\r\n                day       = parseInt(value.substr(5, 2), 10),\r\n                // The year of date is determined base on the gender\r\n                centuries = {\r\n                    '1': 1900,  // Male born between 1900 and 1999\r\n                    '2': 1900,  // Female born between 1900 and 1999\r\n                    '3': 1800,  // Male born between 1800 and 1899\r\n                    '4': 1800,  // Female born between 1800 and 1899\r\n                    '5': 2000,  // Male born after 2000\r\n                    '6': 2000   // Female born after 2000\r\n                };\r\n            if (day > 31 && month > 12) {\r\n                return false;\r\n            }\r\n            if (gender !== 9) {\r\n                year = centuries[gender + ''] + year;\r\n                if (!$.fn.bootstrapValidator.helpers.date(year, month, day)) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            // Validate the check digit\r\n            var sum    = 0,\r\n                weight = [2, 7, 9, 1, 4, 6, 3, 5, 8, 2, 7, 9],\r\n                length = value.length;\r\n            for (var i = 0; i < length - 1; i++) {\r\n                sum += parseInt(value.charAt(i), 10) * weight[i];\r\n            }\r\n            sum = sum % 11;\r\n            if (sum === 10) {\r\n                sum = 1;\r\n            }\r\n            return (sum + '' === value.charAt(length - 1));\r\n        },\r\n\r\n        /**\r\n         * Validate Swedish personal identity number (personnummer)\r\n         * Examples:\r\n         * - Valid: 8112289874, 811228-9874, 811228+9874\r\n         * - Invalid: 811228-9873\r\n         *\r\n         * @see http://en.wikipedia.org/wiki/Personal_identity_number_(Sweden)\r\n         * @param {String} value The ID\r\n         * @returns {Boolean}\r\n         */\r\n        _se: function(value) {\r\n            if (!/^[0-9]{10}$/.test(value) && !/^[0-9]{6}[-|+][0-9]{4}$/.test(value)) {\r\n                return false;\r\n            }\r\n            value = value.replace(/[^0-9]/g, '');\r\n\r\n            var year  = parseInt(value.substr(0, 2), 10) + 1900,\r\n                month = parseInt(value.substr(2, 2), 10),\r\n                day   = parseInt(value.substr(4, 2), 10);\r\n            if (!$.fn.bootstrapValidator.helpers.date(year, month, day)) {\r\n                return false;\r\n            }\r\n\r\n            // Validate the last check digit\r\n            return $.fn.bootstrapValidator.helpers.luhn(value);\r\n        },\r\n\r\n        /**\r\n         * Validate Slovak national identifier number (RC)\r\n         * Examples:\r\n         * - Valid: 7103192745, 991231123\r\n         * - Invalid: 7103192746, 1103492745\r\n         *\r\n         * @param {String} value The ID\r\n         * @returns {Boolean}\r\n         */\r\n        _sk: function(value) {\r\n            // Slovakia uses the same format as Czech Republic\r\n            return this._cz(value);\r\n        },\r\n\r\n        /**\r\n         * Validate San Marino citizen number\r\n         *\r\n         * @see http://en.wikipedia.org/wiki/National_identification_number#San_Marino\r\n         * @param {String} value The ID\r\n         * @returns {Boolean}\r\n         */\r\n        _sm: function(value) {\r\n            return /^\\d{5}$/.test(value);\r\n        },\r\n\r\n        /**\r\n         * Validate South African ID\r\n         * Example:\r\n         * - Valid: 8001015009087\r\n         * - Invalid: 8001015009287, 8001015009086\r\n         *\r\n         * @see http://en.wikipedia.org/wiki/National_identification_number#South_Africa\r\n         * @param {String} value The ID\r\n         * @returns {Boolean}\r\n         */\r\n        _za: function(value) {\r\n            if (!/^[0-9]{10}[0|1][8|9][0-9]$/.test(value)) {\r\n                return false;\r\n            }\r\n            var year        = parseInt(value.substr(0, 2), 10),\r\n                currentYear = new Date().getFullYear() % 100,\r\n                month       = parseInt(value.substr(2, 2), 10),\r\n                day         = parseInt(value.substr(4, 2), 10);\r\n            year = (year >= currentYear) ? (year + 1900) : (year + 2000);\r\n\r\n            if (!$.fn.bootstrapValidator.helpers.date(year, month, day)) {\r\n                return false;\r\n            }\r\n\r\n            // Validate the last check digit\r\n            return $.fn.bootstrapValidator.helpers.luhn(value);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.identical = $.extend($.fn.bootstrapValidator.i18n.identical || {}, {\r\n        'default': 'Please enter the same value'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.identical = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            field: 'field'\r\n        },\r\n\r\n        /**\r\n         * Check if input value equals to value of particular one\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Consists of the following key:\r\n         * - field: The name of field that will be used to compare with current one\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            var compareWith = validator.getFieldElements(options.field);\r\n            if (compareWith === null) {\r\n                return true;\r\n            }\r\n\r\n            if (value === compareWith.val()) {\r\n                validator.updateStatus(options.field, validator.STATUS_VALID, 'identical');\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.imei = $.extend($.fn.bootstrapValidator.i18n.imei || {}, {\r\n        'default': 'Please enter a valid IMEI number'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.imei = {\r\n        /**\r\n         * Validate IMEI (International Mobile Station Equipment Identity)\r\n         * Examples:\r\n         * - Valid: 35-209900-176148-1, 35-209900-176148-23, 3568680000414120, 490154203237518\r\n         * - Invalid: 490154203237517\r\n         *\r\n         * @see http://en.wikipedia.org/wiki/International_Mobile_Station_Equipment_Identity\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            switch (true) {\r\n                case /^\\d{15}$/.test(value):\r\n                case /^\\d{2}-\\d{6}-\\d{6}-\\d{1}$/.test(value):\r\n                case /^\\d{2}\\s\\d{6}\\s\\d{6}\\s\\d{1}$/.test(value):\r\n                    value = value.replace(/[^0-9]/g, '');\r\n                    return $.fn.bootstrapValidator.helpers.luhn(value);\r\n\r\n                case /^\\d{14}$/.test(value):\r\n                case /^\\d{16}$/.test(value):\r\n                case /^\\d{2}-\\d{6}-\\d{6}(|-\\d{2})$/.test(value):\r\n                case /^\\d{2}\\s\\d{6}\\s\\d{6}(|\\s\\d{2})$/.test(value):\r\n                    return true;\r\n\r\n                default:\r\n                    return false;\r\n            }\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.integer = $.extend($.fn.bootstrapValidator.i18n.integer || {}, {\r\n        'default': 'Please enter a valid number'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.integer = {\r\n        enableByHtml5: function($field) {\r\n            return ('number' === $field.attr('type')) && ($field.attr('step') === undefined || $field.attr('step') % 1 === 0);\r\n        },\r\n\r\n        /**\r\n         * Return true if the input value is an integer\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following key:\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n            return /^(?:-?(?:0|[1-9][0-9]*))$/.test(value);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.ip = $.extend($.fn.bootstrapValidator.i18n.ip || {}, {\r\n        'default': 'Please enter a valid IP address',\r\n        ipv4: 'Please enter a valid IPv4 address',\r\n        ipv6: 'Please enter a valid IPv6 address'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.ip = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            ipv4: 'ipv4',\r\n            ipv6: 'ipv6'\r\n        },\r\n\r\n        /**\r\n         * Return true if the input value is a IP address.\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - ipv4: Enable IPv4 validator, default to true\r\n         * - ipv6: Enable IPv6 validator, default to true\r\n         * - message: The invalid message\r\n         * @returns {Boolean|Object}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n            options = $.extend({}, { ipv4: true, ipv6: true }, options);\r\n\r\n            if (options.ipv4) {\r\n                return {\r\n                    valid: /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(value),\r\n                    message: options.message || $.fn.bootstrapValidator.i18n.ip.ipv4\r\n                };\r\n            } else if (options.ipv6) {\r\n                return {\r\n                    valid: /^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/.test(value),\r\n                    message: options.message || $.fn.bootstrapValidator.i18n.ip.ipv6\r\n                };\r\n            }\r\n\r\n            return false;\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.isbn = $.extend($.fn.bootstrapValidator.i18n.isbn || {}, {\r\n        'default': 'Please enter a valid ISBN number'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.isbn = {\r\n        /**\r\n         * Return true if the input value is a valid ISBN 10 or ISBN 13 number\r\n         * Examples:\r\n         * - Valid:\r\n         * ISBN 10: 99921-58-10-7, 9971-5-0210-0, 960-425-059-0, 80-902734-1-6, 85-359-0277-5, 1-84356-028-3, 0-684-84328-5, 0-8044-2957-X, 0-85131-041-9, 0-943396-04-2, 0-9752298-0-X\r\n         * ISBN 13: 978-0-306-40615-7\r\n         * - Invalid:\r\n         * ISBN 10: 99921-58-10-6\r\n         * ISBN 13: 978-0-306-40615-6\r\n         *\r\n         * @see http://en.wikipedia.org/wiki/International_Standard_Book_Number\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} [options] Can consist of the following keys:\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            // http://en.wikipedia.org/wiki/International_Standard_Book_Number#Overview\r\n            // Groups are separated by a hyphen or a space\r\n            var type;\r\n            switch (true) {\r\n                case /^\\d{9}[\\dX]$/.test(value):\r\n                case (value.length === 13 && /^(\\d+)-(\\d+)-(\\d+)-([\\dX])$/.test(value)):\r\n                case (value.length === 13 && /^(\\d+)\\s(\\d+)\\s(\\d+)\\s([\\dX])$/.test(value)):\r\n                    type = 'ISBN10';\r\n                    break;\r\n                case /^(978|979)\\d{9}[\\dX]$/.test(value):\r\n                case (value.length === 17 && /^(978|979)-(\\d+)-(\\d+)-(\\d+)-([\\dX])$/.test(value)):\r\n                case (value.length === 17 && /^(978|979)\\s(\\d+)\\s(\\d+)\\s(\\d+)\\s([\\dX])$/.test(value)):\r\n                    type = 'ISBN13';\r\n                    break;\r\n                default:\r\n                    return false;\r\n            }\r\n\r\n            // Replace all special characters except digits and X\r\n            value = value.replace(/[^0-9X]/gi, '');\r\n            var chars  = value.split(''),\r\n                length = chars.length,\r\n                sum    = 0,\r\n                i,\r\n                checksum;\r\n\r\n            switch (type) {\r\n                case 'ISBN10':\r\n                    sum = 0;\r\n                    for (i = 0; i < length - 1; i++) {\r\n                        sum += parseInt(chars[i], 10) * (10 - i);\r\n                    }\r\n                    checksum = 11 - (sum % 11);\r\n                    if (checksum === 11) {\r\n                        checksum = 0;\r\n                    } else if (checksum === 10) {\r\n                        checksum = 'X';\r\n                    }\r\n                    return (checksum + '' === chars[length - 1]);\r\n\r\n                case 'ISBN13':\r\n                    sum = 0;\r\n                    for (i = 0; i < length - 1; i++) {\r\n                        sum += ((i % 2 === 0) ? parseInt(chars[i], 10) : (parseInt(chars[i], 10) * 3));\r\n                    }\r\n                    checksum = 10 - (sum % 10);\r\n                    if (checksum === 10) {\r\n                        checksum = '0';\r\n                    }\r\n                    return (checksum + '' === chars[length - 1]);\r\n\r\n                default:\r\n                    return false;\r\n            }\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.isin = $.extend($.fn.bootstrapValidator.i18n.isin || {}, {\r\n        'default': 'Please enter a valid ISIN number'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.isin = {\r\n        // Available country codes\r\n        // See http://isin.net/country-codes/\r\n        COUNTRY_CODES: 'AF|AX|AL|DZ|AS|AD|AO|AI|AQ|AG|AR|AM|AW|AU|AT|AZ|BS|BH|BD|BB|BY|BE|BZ|BJ|BM|BT|BO|BQ|BA|BW|BV|BR|IO|BN|BG|BF|BI|KH|CM|CA|CV|KY|CF|TD|CL|CN|CX|CC|CO|KM|CG|CD|CK|CR|CI|HR|CU|CW|CY|CZ|DK|DJ|DM|DO|EC|EG|SV|GQ|ER|EE|ET|FK|FO|FJ|FI|FR|GF|PF|TF|GA|GM|GE|DE|GH|GI|GR|GL|GD|GP|GU|GT|GG|GN|GW|GY|HT|HM|VA|HN|HK|HU|IS|IN|ID|IR|IQ|IE|IM|IL|IT|JM|JP|JE|JO|KZ|KE|KI|KP|KR|KW|KG|LA|LV|LB|LS|LR|LY|LI|LT|LU|MO|MK|MG|MW|MY|MV|ML|MT|MH|MQ|MR|MU|YT|MX|FM|MD|MC|MN|ME|MS|MA|MZ|MM|NA|NR|NP|NL|NC|NZ|NI|NE|NG|NU|NF|MP|NO|OM|PK|PW|PS|PA|PG|PY|PE|PH|PN|PL|PT|PR|QA|RE|RO|RU|RW|BL|SH|KN|LC|MF|PM|VC|WS|SM|ST|SA|SN|RS|SC|SL|SG|SX|SK|SI|SB|SO|ZA|GS|SS|ES|LK|SD|SR|SJ|SZ|SE|CH|SY|TW|TJ|TZ|TH|TL|TG|TK|TO|TT|TN|TR|TM|TC|TV|UG|UA|AE|GB|US|UM|UY|UZ|VU|VE|VN|VG|VI|WF|EH|YE|ZM|ZW',\r\n\r\n        /**\r\n         * Validate an ISIN (International Securities Identification Number)\r\n         * Examples:\r\n         * - Valid: US0378331005, AU0000XVGZA3, GB0002634946\r\n         * - Invalid: US0378331004, AA0000XVGZA3\r\n         *\r\n         * @see http://en.wikipedia.org/wiki/International_Securities_Identifying_Number\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            value = value.toUpperCase();\r\n            var regex = new RegExp('^(' + this.COUNTRY_CODES + ')[0-9A-Z]{10}$');\r\n            if (!regex.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            var converted = '',\r\n                length    = value.length;\r\n            // Convert letters to number\r\n            for (var i = 0; i < length - 1; i++) {\r\n                var c = value.charCodeAt(i);\r\n                converted += ((c > 57) ? (c - 55).toString() : value.charAt(i));\r\n            }\r\n\r\n            var digits = '',\r\n                n      = converted.length,\r\n                group  = (n % 2 !== 0) ? 0 : 1;\r\n            for (i = 0; i < n; i++) {\r\n                digits += (parseInt(converted[i], 10) * ((i % 2) === group ? 2 : 1) + '');\r\n            }\r\n\r\n            var sum = 0;\r\n            for (i = 0; i < digits.length; i++) {\r\n                sum += parseInt(digits.charAt(i), 10);\r\n            }\r\n            sum = (10 - (sum % 10)) % 10;\r\n            return sum + '' === value.charAt(length - 1);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.ismn = $.extend($.fn.bootstrapValidator.i18n.ismn || {}, {\r\n        'default': 'Please enter a valid ISMN number'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.ismn = {\r\n        /**\r\n         * Validate ISMN (International Standard Music Number)\r\n         * Examples:\r\n         * - Valid: M230671187, 979-0-0601-1561-5, 979 0 3452 4680 5, 9790060115615\r\n         * - Invalid: 9790060115614\r\n         *\r\n         * @see http://en.wikipedia.org/wiki/International_Standard_Music_Number\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            // Groups are separated by a hyphen or a space\r\n            var type;\r\n            switch (true) {\r\n                case /^M\\d{9}$/.test(value):\r\n                case /^M-\\d{4}-\\d{4}-\\d{1}$/.test(value):\r\n                case /^M\\s\\d{4}\\s\\d{4}\\s\\d{1}$/.test(value):\r\n                    type = 'ISMN10';\r\n                    break;\r\n                case /^9790\\d{9}$/.test(value):\r\n                case /^979-0-\\d{4}-\\d{4}-\\d{1}$/.test(value):\r\n                case /^979\\s0\\s\\d{4}\\s\\d{4}\\s\\d{1}$/.test(value):\r\n                    type = 'ISMN13';\r\n                    break;\r\n                default:\r\n                    return false;\r\n            }\r\n\r\n            if ('ISMN10' === type) {\r\n                value = '9790' + value.substr(1);\r\n            }\r\n\r\n            // Replace all special characters except digits\r\n            value = value.replace(/[^0-9]/gi, '');\r\n            var length = value.length,\r\n                sum    = 0,\r\n                weight = [1, 3];\r\n            for (var i = 0; i < length - 1; i++) {\r\n                sum += parseInt(value.charAt(i), 10) * weight[i % 2];\r\n            }\r\n            sum = 10 - sum % 10;\r\n            return (sum + '' === value.charAt(length - 1));\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.issn = $.extend($.fn.bootstrapValidator.i18n.issn || {}, {\r\n        'default': 'Please enter a valid ISSN number'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.issn = {\r\n        /**\r\n         * Validate ISSN (International Standard Serial Number)\r\n         * Examples:\r\n         * - Valid: 0378-5955, 0024-9319, 0032-1478\r\n         * - Invalid: 0032-147X\r\n         *\r\n         * @see http://en.wikipedia.org/wiki/International_Standard_Serial_Number\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            // Groups are separated by a hyphen or a space\r\n            if (!/^\\d{4}\\-\\d{3}[\\dX]$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            // Replace all special characters except digits and X\r\n            value = value.replace(/[^0-9X]/gi, '');\r\n            var chars  = value.split(''),\r\n                length = chars.length,\r\n                sum    = 0;\r\n\r\n            if (chars[7] === 'X') {\r\n                chars[7] = 10;\r\n            }\r\n            for (var i = 0; i < length; i++) {\r\n                sum += parseInt(chars[i], 10) * (8 - i);\r\n            }\r\n            return (sum % 11 === 0);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.lessThan = $.extend($.fn.bootstrapValidator.i18n.lessThan || {}, {\r\n        'default': 'Please enter a value less than or equal to %s',\r\n        notInclusive: 'Please enter a value less than %s'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.lessThan = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            value: 'value',\r\n            inclusive: 'inclusive'\r\n        },\r\n\r\n        enableByHtml5: function($field) {\r\n            var max = $field.attr('max');\r\n            if (max) {\r\n                return {\r\n                    value: max\r\n                };\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Return true if the input value is less than or equal to given number\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - value: The number used to compare to. It can be\r\n         *      - A number\r\n         *      - Name of field which its value defines the number\r\n         *      - Name of callback function that returns the number\r\n         *      - A callback function that returns the number\r\n         *\r\n         * - inclusive [optional]: Can be true or false. Default is true\r\n         * - message: The invalid message\r\n         * @returns {Boolean|Object}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            var compareTo = $.isNumeric(options.value) ? options.value : validator.getDynamicOption($field, options.value);\r\n\r\n            value = parseFloat(value);\r\n            return (options.inclusive === true || options.inclusive === undefined)\r\n                    ? {\r\n                        valid: value <= compareTo,\r\n                        message: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.lessThan['default'], compareTo)\r\n                    }\r\n                    : {\r\n                        valid: value < compareTo,\r\n                        message: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.lessThan.notInclusive, compareTo)\r\n                    };\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.mac = $.extend($.fn.bootstrapValidator.i18n.mac || {}, {\r\n        'default': 'Please enter a valid MAC address'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.mac = {\r\n        /**\r\n         * Return true if the input value is a MAC address.\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            return /^([0-9A-F]{2}[:-]){5}([0-9A-F]{2})$/.test(value);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.notEmpty = $.extend($.fn.bootstrapValidator.i18n.notEmpty || {}, {\r\n        'default': 'Please enter a value'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.notEmpty = {\r\n        enableByHtml5: function($field) {\r\n            var required = $field.attr('required') + '';\r\n            return ('required' === required || 'true' === required);\r\n        },\r\n\r\n        /**\r\n         * Check if input value is empty or not\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var type = $field.attr('type');\r\n            if ('radio' === type || 'checkbox' === type) {\r\n                return validator\r\n                            .getFieldElements($field.attr('data-bv-field'))\r\n                            .filter(':checked')\r\n                            .length > 0;\r\n            }\r\n\r\n            return $.trim($field.val()) !== '';\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.numeric = $.extend($.fn.bootstrapValidator.i18n.numeric || {}, {\r\n        'default': 'Please enter a valid float number'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.numeric = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            decimal_separator: 'decimal_separator',\r\n            thousands_separator: 'thousands_separator'\r\n        },\r\n\r\n        enableByHtml5: function($field) {\r\n            return ('number' === $field.attr('type')) && ($field.attr('step') !== undefined) && ($field.attr('step') % 1 !== 0);\r\n        },\r\n\r\n        /**\r\n         * Validate decimal number\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Consist of key:\r\n         * - message: The invalid message\r\n         * - decimal_separator: The decimal separator. Can be \".\" (default), \",\"\r\n         * - thousands_separator: The thousands separator. Can be \",\" (default), \",\"\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            var decimal_separator = options.decimal_separator || '.';\r\n            var thousands_separator = options.thousands_separator || ',';\r\n                        // /^\\d{1,3}((\\,\\d{3})|\\d)*(\\.\\d+)?$/g\r\n            var pattern = // /^\\d{1,3}((,\\d{3})|\\d)*(\\.\\d+)?$/g\r\n                '^\\\\d{1,3}((\\\\'\r\n                + thousands_separator\r\n                + '\\\\d{3})|\\\\d)*(\\\\'\r\n                + decimal_separator\r\n                + '\\\\d+)?$';\r\n            var regex = new RegExp(pattern);\r\n            var match = value.match(regex);\r\n\r\n            if(match != null && match[0] == value)\r\n            {\r\n                if(thousands_separator != '')\r\n                {\r\n                    value = value.replace(new RegExp('\\\\' +thousands_separator, 'g'), '');\r\n                }\r\n                if(decimal_separator != '.')\r\n                {\r\n                    value = value.replace(new RegExp('\\\\' +decimal_separator, 'g'), '.');\r\n                }\r\n\r\n                return !isNaN(parseFloat(value)) && isFinite(value);\r\n            }\r\n\r\n            return false;\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.phone = $.extend($.fn.bootstrapValidator.i18n.phone || {}, {\r\n        'default': 'Please enter a valid phone number',\r\n        countryNotSupported: 'The country code %s is not supported',\r\n        country: 'Please enter a valid phone number in %s',\r\n        countries: {\r\n            GB: 'United Kingdom',\r\n            US: 'USA'\r\n        }\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.phone = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            country: 'country'\r\n        },\r\n\r\n        // The supported countries\r\n        COUNTRY_CODES: ['GB', 'US'],\r\n\r\n        /**\r\n         * Return true if the input value contains a valid phone number for the country\r\n         * selected in the options\r\n         *\r\n         * @param {BootstrapValidator} validator Validate plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Consist of key:\r\n         * - message: The invalid message\r\n         * - country: The ISO-3166 country code. It can be\r\n         *      - A country code\r\n         *      - Name of field which its value defines the country code\r\n         *      - Name of callback function that returns the country code\r\n         *      - A callback function that returns the country code\r\n         *\r\n         * Currently it only supports United State (US) or United Kingdom (GB) countries\r\n         * @returns {Boolean|Object}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            var country = options.country;\r\n            if (typeof country !== 'string' || $.inArray(country, this.COUNTRY_CODES) === -1) {\r\n                // Try to determine the country\r\n                country = validator.getDynamicOption($field, country);\r\n            }\r\n\r\n            if (!country || $.inArray(country.toUpperCase(), this.COUNTRY_CODES) === -1) {\r\n                return {\r\n                    valid: false,\r\n                    message: $.fn.bootstrapValidator.helpers.format($.fn.bootstrapValidator.i18n.phone.countryNotSupported, country)\r\n                };\r\n            }\r\n\r\n            var isValid = true;\r\n            switch (country.toUpperCase()) {\r\n            \tcase 'GB':\r\n            \t\t// http://aa-asterisk.org.uk/index.php/Regular_Expressions_for_Validating_and_Formatting_GB_Telephone_Numbers#Match_GB_telephone_number_in_any_format\r\n            \t\t// Test: http://regexr.com/38uhv\r\n            \t\tvalue   = $.trim(value);\r\n            \t\tisValid = (/^\\(?(?:(?:0(?:0|11)\\)?[\\s-]?\\(?|\\+)44\\)?[\\s-]?\\(?(?:0\\)?[\\s-]?\\(?)?|0)(?:\\d{2}\\)?[\\s-]?\\d{4}[\\s-]?\\d{4}|\\d{3}\\)?[\\s-]?\\d{3}[\\s-]?\\d{3,4}|\\d{4}\\)?[\\s-]?(?:\\d{5}|\\d{3}[\\s-]?\\d{3})|\\d{5}\\)?[\\s-]?\\d{4,5}|8(?:00[\\s-]?11[\\s-]?11|45[\\s-]?46[\\s-]?4\\d))(?:(?:[\\s-]?(?:x|ext\\.?\\s?|\\#)\\d+)?)$/).test(value);\r\n                    break;\r\n\r\n                case 'US':\r\n                /* falls through */\r\n                default:\r\n                    // Make sure US phone numbers have 10 digits\r\n                    // May start with 1, +1, or 1-; should discard\r\n                    // Area code may be delimited with (), & sections may be delimited with . or -\r\n                    // Test: http://regexr.com/38mqi\r\n                    value   = value.replace(/\\D/g, '');\r\n                    isValid = (/^(?:(1\\-?)|(\\+1 ?))?\\(?(\\d{3})[\\)\\-\\.]?(\\d{3})[\\-\\.]?(\\d{4})$/).test(value) && (value.length === 10);\r\n                    break;\r\n            }\r\n\r\n            return {\r\n                valid: isValid,\r\n                message: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.phone.country, $.fn.bootstrapValidator.i18n.phone.countries[country])\r\n            };\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.regexp = $.extend($.fn.bootstrapValidator.i18n.regexp || {}, {\r\n        'default': 'Please enter a value matching the pattern'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.regexp = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            regexp: 'regexp'\r\n        },\r\n\r\n        enableByHtml5: function($field) {\r\n            var pattern = $field.attr('pattern');\r\n            if (pattern) {\r\n                return {\r\n                    regexp: pattern\r\n                };\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Check if the element value matches given regular expression\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Consists of the following key:\r\n         * - regexp: The regular expression you need to check\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            var regexp = ('string' === typeof options.regexp) ? new RegExp(options.regexp) : options.regexp;\r\n            return regexp.test(value);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.remote = $.extend($.fn.bootstrapValidator.i18n.remote || {}, {\r\n        'default': 'Please enter a valid value'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.remote = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            url: 'url',\r\n            name: 'name'\r\n        },\r\n\r\n        /**\r\n         * Request a remote server to check the input value\r\n         *\r\n         * @param {BootstrapValidator} validator Plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - url {String|Function}\r\n         * - type {String} [optional] Can be GET or POST (default)\r\n         * - data {Object|Function} [optional]: By default, it will take the value\r\n         *  {\r\n         *      <fieldName>: <fieldValue>\r\n         *  }\r\n         * - name {String} [optional]: Override the field name for the request.\r\n         * - message: The invalid message\r\n         * @returns {Boolean|Deferred}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            var name = $field.attr('data-bv-field'),\r\n                data = options.data || {},\r\n                url  = options.url,\r\n                type = options.type || 'POST';\r\n\r\n            // Support dynamic data\r\n            if ('function' === typeof data) {\r\n                data = data.call(this, validator);\r\n            }\r\n\r\n            // Support dynamic url\r\n            if ('function' === typeof url) {\r\n                url = url.call(this, validator);\r\n            }\r\n\r\n            data[options.name || name] = value;\r\n\r\n            var dfd = new $.Deferred();\r\n            var xhr = $.ajax({\r\n                type: type,\r\n                url: url,\r\n                dataType: 'json',\r\n                data: data\r\n            });\r\n            xhr.then(function(response) {\r\n                dfd.resolve($field, 'remote', response.valid === true || response.valid === 'true', response.message ? response.message : null);\r\n            });\r\n\r\n            dfd.fail(function() {\r\n                xhr.abort();\r\n            });\r\n\r\n            return dfd;\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.rtn = $.extend($.fn.bootstrapValidator.i18n.rtn || {}, {\r\n        'default': 'Please enter a valid RTN number'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.rtn = {\r\n        /**\r\n         * Validate a RTN (Routing transit number)\r\n         * Examples:\r\n         * - Valid: 021200025, 789456124\r\n         *\r\n         * @see http://en.wikipedia.org/wiki/Routing_transit_number\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            if (!/^\\d{9}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            var sum = 0;\r\n            for (var i = 0; i < value.length; i += 3) {\r\n                sum += parseInt(value.charAt(i),     10) * 3\r\n                    +  parseInt(value.charAt(i + 1), 10) * 7\r\n                    +  parseInt(value.charAt(i + 2), 10);\r\n            }\r\n            return (sum !== 0 && sum % 10 === 0);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.sedol = $.extend($.fn.bootstrapValidator.i18n.sedol || {}, {\r\n        'default': 'Please enter a valid SEDOL number'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.sedol = {\r\n        /**\r\n         * Validate a SEDOL (Stock Exchange Daily Official List)\r\n         * Examples:\r\n         * - Valid: 0263494, B0WNLY7\r\n         *\r\n         * @see http://en.wikipedia.org/wiki/SEDOL\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            value = value.toUpperCase();\r\n            if (!/^[0-9A-Z]{7}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            var sum    = 0,\r\n                weight = [1, 3, 1, 7, 3, 9, 1],\r\n                length = value.length;\r\n            for (var i = 0; i < length - 1; i++) {\r\n\t            sum += weight[i] * parseInt(value.charAt(i), 36);\r\n\t        }\r\n\t        sum = (10 - sum % 10) % 10;\r\n            return sum + '' === value.charAt(length - 1);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.siren = $.extend($.fn.bootstrapValidator.i18n.siren || {}, {\r\n        'default': 'Please enter a valid SIREN number'\r\n    });\r\n\r\n\t$.fn.bootstrapValidator.validators.siren = {\r\n\t\t/**\r\n\t\t * Check if a string is a siren number\r\n\t\t *\r\n\t\t * @param {BootstrapValidator} validator The validator plugin instance\r\n\t\t * @param {jQuery} $field Field element\r\n\t\t * @param {Object} options Consist of key:\r\n         * - message: The invalid message\r\n\t\t * @returns {Boolean}\r\n\t\t */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n            if (!/^\\d{9}$/.test(value)) {\r\n                return false;\r\n            }\r\n            return $.fn.bootstrapValidator.helpers.luhn(value);\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.siret = $.extend($.fn.bootstrapValidator.i18n.siret || {}, {\r\n        'default': 'Please enter a valid SIRET number'\r\n    });\r\n\r\n\t$.fn.bootstrapValidator.validators.siret = {\r\n        /**\r\n         * Check if a string is a siret number\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Consist of key:\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n\t\tvalidate: function(validator, $field, options) {\r\n\t\t\tvar value = $field.val();\r\n\t\t\tif (value === '') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tvar sum    = 0,\r\n                length = value.length,\r\n                tmp;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n                tmp = parseInt(value.charAt(i), 10);\r\n\t\t\t\tif ((i % 2) === 0) {\r\n\t\t\t\t\ttmp = tmp * 2;\r\n\t\t\t\t\tif (tmp > 9) {\r\n\t\t\t\t\t\ttmp -= 9;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tsum += tmp;\r\n\t\t\t}\r\n\t\t\treturn (sum % 10 === 0);\r\n\t\t}\r\n\t};\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.step = $.extend($.fn.bootstrapValidator.i18n.step || {}, {\r\n        'default': 'Please enter a valid step of %s'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.step = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            base: 'baseValue',\r\n            step: 'step'\r\n        },\r\n\r\n        /**\r\n         * Return true if the input value is valid step one\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - baseValue: The base value\r\n         * - step: The step\r\n         * - message: The invalid message\r\n         * @returns {Boolean|Object}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            options = $.extend({}, { baseValue: 0, step: 1 }, options);\r\n            value   = parseFloat(value);\r\n            if (!$.isNumeric(value)) {\r\n                return false;\r\n            }\r\n\r\n            var round = function(x, precision) {\r\n                    var m = Math.pow(10, precision);\r\n                    x = x * m;\r\n                    var sign   = (x > 0) | -(x < 0),\r\n                        isHalf = (x % 1 === 0.5 * sign);\r\n                    if (isHalf) {\r\n                        return (Math.floor(x) + (sign > 0)) / m;\r\n                    } else {\r\n                        return Math.round(x) / m;\r\n                    }\r\n                },\r\n                floatMod = function(x, y) {\r\n                    if (y === 0.0) {\r\n                        return 1.0;\r\n                    }\r\n                    var dotX      = (x + '').split('.'),\r\n                        dotY      = (y + '').split('.'),\r\n                        precision = ((dotX.length === 1) ? 0 : dotX[1].length) + ((dotY.length === 1) ? 0 : dotY[1].length);\r\n                    return round(x - y * Math.floor(x / y), precision);\r\n                };\r\n\r\n            var mod = floatMod(value - options.baseValue, options.step);\r\n            return {\r\n                valid: mod === 0.0 || mod === options.step,\r\n                message: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.step['default'], [options.step])\r\n            };\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.stringCase = $.extend($.fn.bootstrapValidator.i18n.stringCase || {}, {\r\n        'default': 'Please enter only lowercase characters',\r\n        upper: 'Please enter only uppercase characters'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.stringCase = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            'case': 'case'\r\n        },\r\n\r\n        /**\r\n         * Check if a string is a lower or upper case one\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Consist of key:\r\n         * - message: The invalid message\r\n         * - case: Can be 'lower' (default) or 'upper'\r\n         * @returns {Object}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            var stringCase = (options['case'] || 'lower').toLowerCase();\r\n            return {\r\n                valid: ('upper' === stringCase) ? value === value.toUpperCase() : value === value.toLowerCase(),\r\n                message: options.message || (('upper' === stringCase) ? $.fn.bootstrapValidator.i18n.stringCase.upper : $.fn.bootstrapValidator.i18n.stringCase['default'])\r\n            };\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.stringLength = $.extend($.fn.bootstrapValidator.i18n.stringLength || {}, {\r\n        'default': 'Please enter a value with valid length',\r\n        less: 'Please enter less than %s characters',\r\n        more: 'Please enter more than %s characters',\r\n        between: 'Please enter value between %s and %s characters long'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.stringLength = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            min: 'min',\r\n            max: 'max'\r\n        },\r\n\r\n        enableByHtml5: function($field) {\r\n            var maxLength = $field.attr('maxlength');\r\n            if (maxLength) {\r\n                return {\r\n                    max: parseInt(maxLength, 10)\r\n                };\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Check if the length of element value is less or more than given number\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Consists of following keys:\r\n         * - min\r\n         * - max\r\n         * At least one of two keys is required\r\n         * The min, max keys define the number which the field value compares to. min, max can be\r\n         *      - A number\r\n         *      - Name of field which its value defines the number\r\n         *      - Name of callback function that returns the number\r\n         *      - A callback function that returns the number\r\n         *\r\n         * - message: The invalid message\r\n         * @returns {Object}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            var min     = $.isNumeric(options.min) ? options.min : validator.getDynamicOption($field, options.min),\r\n                max     = $.isNumeric(options.max) ? options.max : validator.getDynamicOption($field, options.max),\r\n                length  = value.length,\r\n                isValid = true,\r\n                message = options.message || $.fn.bootstrapValidator.i18n.stringLength['default'];\r\n\r\n            if ((min && length < parseInt(min, 10)) || (max && length > parseInt(max, 10))) {\r\n                isValid = false;\r\n            }\r\n\r\n            switch (true) {\r\n                case (!!min && !!max):\r\n                    message = $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.stringLength.between, [parseInt(min, 10), parseInt(max, 10)]);\r\n                    break;\r\n\r\n                case (!!min):\r\n                    message = $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.stringLength.more, parseInt(min, 10));\r\n                    break;\r\n\r\n                case (!!max):\r\n                    message = $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.stringLength.less, parseInt(max, 10));\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n\r\n            return { valid: isValid, message: message };\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.uri = $.extend($.fn.bootstrapValidator.i18n.uri || {}, {\r\n        'default': 'Please enter a valid URI'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.uri = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            allowlocal: 'allowLocal'\r\n        },\r\n\r\n        enableByHtml5: function($field) {\r\n            return ('url' === $field.attr('type'));\r\n        },\r\n\r\n        /**\r\n         * Return true if the input value is a valid URL\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options\r\n         * - message: The error message\r\n         * - allowLocal: Allow the private and local network IP. Default to false\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            // Credit to https://gist.github.com/dperini/729294\r\n            //\r\n            // Regular Expression for URL validation\r\n            //\r\n            // Author: Diego Perini\r\n            // Updated: 2010/12/05\r\n            //\r\n            // the regular expression composed & commented\r\n            // could be easily tweaked for RFC compliance,\r\n            // it was expressly modified to fit & satisfy\r\n            // these test for an URL shortener:\r\n            //\r\n            //   http://mathiasbynens.be/demo/url-regex\r\n            //\r\n            // Notes on possible differences from a standard/generic validation:\r\n            //\r\n            // - utf-8 char class take in consideration the full Unicode range\r\n            // - TLDs have been made mandatory so single names like \"localhost\" fails\r\n            // - protocols have been restricted to ftp, http and https only as requested\r\n            //\r\n            // Changes:\r\n            //\r\n            // - IP address dotted notation validation, range: 1.0.0.0 - 223.255.255.255\r\n            //   first and last IP address of each class is considered invalid\r\n            //   (since they are broadcast/network addresses)\r\n            //\r\n            // - Added exclusion of private, reserved and/or local networks ranges\r\n            //\r\n            var allowLocal = options.allowLocal === true || options.allowLocal === 'true',\r\n                urlExp     = new RegExp(\r\n                    \"^\" +\r\n                    // protocol identifier\r\n                    \"(?:(?:https?|ftp)://)\" +\r\n                    // user:pass authentication\r\n                    \"(?:\\\\S+(?::\\\\S*)?@)?\" +\r\n                    \"(?:\" +\r\n                    // IP address exclusion\r\n                    // private & local networks\r\n                    (allowLocal\r\n                        ? ''\r\n                        : (\"(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})\" +\r\n                           \"(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})\" +\r\n                           \"(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})\")) +\r\n                    // IP address dotted notation octets\r\n                    // excludes loopback network 0.0.0.0\r\n                    // excludes reserved space >= 224.0.0.0\r\n                    // excludes network & broadcast addresses\r\n                    // (first & last IP address of each class)\r\n                    \"(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])\" +\r\n                    \"(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}\" +\r\n                    \"(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))\" +\r\n                    \"|\" +\r\n                    // host name\r\n                    \"(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)\" +\r\n                    // domain name\r\n                    \"(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)*\" +\r\n                    // TLD identifier\r\n                    \"(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))\" +\r\n                    \")\" +\r\n                    // port number\r\n                    \"(?::\\\\d{2,5})?\" +\r\n                    // resource path\r\n                    \"(?:/[^\\\\s]*)?\" +\r\n                    \"$\", \"i\"\r\n                );\r\n\r\n            return urlExp.test(value);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.uuid = $.extend($.fn.bootstrapValidator.i18n.uuid || {}, {\r\n        'default': 'Please enter a valid UUID number',\r\n        version: 'Please enter a valid UUID version %s number'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.uuid = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            version: 'version'\r\n        },\r\n\r\n        /**\r\n         * Return true if and only if the input value is a valid UUID string\r\n         *\r\n         * @see http://en.wikipedia.org/wiki/Universally_unique_identifier\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Consist of key:\r\n         * - message: The invalid message\r\n         * - version: Can be 3, 4, 5, null\r\n         * @returns {Boolean|Object}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            // See the format at http://en.wikipedia.org/wiki/Universally_unique_identifier#Variants_and_versions\r\n            var patterns = {\r\n                    '3': /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\r\n                    '4': /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\r\n                    '5': /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\r\n                    all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i\r\n                },\r\n                version = options.version ? (options.version + '') : 'all';\r\n            return {\r\n                valid: (null === patterns[version]) ? true : patterns[version].test(value),\r\n                message: options.version\r\n                            ? $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.uuid.version, options.version)\r\n                            : (options.message || $.fn.bootstrapValidator.i18n.uuid['default'])\r\n            };\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.vat = $.extend($.fn.bootstrapValidator.i18n.vat || {}, {\r\n        'default': 'Please enter a valid VAT number',\r\n        countryNotSupported: 'The country code %s is not supported',\r\n        country: 'Please enter a valid %s VAT number',\r\n        countries: {\r\n            AT: 'Austrian',\r\n            BE: 'Belgian',\r\n            BG: 'Bulgarian',\r\n            CH: 'Swiss',\r\n            CY: 'Cypriot',\r\n            CZ: 'Czech',\r\n            DE: 'German',\r\n            DK: 'Danish',\r\n            EE: 'Estonian',\r\n            ES: 'Spanish',\r\n            FI: 'Finnish',\r\n            FR: 'French',\r\n            GB: 'United Kingdom',\r\n            GR: 'Greek',\r\n            EL: 'Greek',\r\n            HU: 'Hungarian',\r\n            HR: 'Croatian',\r\n            IE: 'Irish',\r\n            IT: 'Italian',\r\n            LT: 'Lithuanian',\r\n            LU: 'Luxembourg',\r\n            LV: 'Latvian',\r\n            MT: 'Maltese',\r\n            NL: 'Dutch',\r\n            NO: 'Norwegian',\r\n            PL: 'Polish',\r\n            PT: 'Portuguese',\r\n            RO: 'Romanian',\r\n            RU: 'Russian',\r\n            RS: 'Serbian',\r\n            SE: 'Swedish',\r\n            SI: 'Slovenian',\r\n            SK: 'Slovak'\r\n        }\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.vat = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            country: 'country'\r\n        },\r\n\r\n        // Supported country codes\r\n        COUNTRY_CODES: [\r\n            'AT', 'BE', 'BG', 'HR', 'CY', 'CZ', 'DK', 'EE', 'FI', 'FR', 'DE', 'GR', 'EL', 'HU', 'IE', 'IT',\r\n            'LV', 'LT', 'LU', 'MT', 'NL', 'NO', 'PL', 'PT', 'RO', 'RU', 'RS', 'SK', 'SI', 'ES', 'SE', 'CH', 'GB'\r\n        ],\r\n\r\n        /**\r\n         * Validate an European VAT number\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Consist of key:\r\n         * - message: The invalid message\r\n         * - country: The ISO 3166-1 country code. It can be\r\n         *      - One of country code defined in COUNTRY_CODES\r\n         *      - Name of field which its value defines the country code\r\n         *      - Name of callback function that returns the country code\r\n         *      - A callback function that returns the country code\r\n         * @returns {Boolean|Object}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            var country = options.country;\r\n            if (!country) {\r\n                country = value.substr(0, 2);\r\n            } else if (typeof country !== 'string' || $.inArray(country.toUpperCase(), this.COUNTRY_CODES) === -1) {\r\n                // Determine the country code\r\n                country = validator.getDynamicOption($field, country);\r\n            }\r\n\r\n            if ($.inArray(country, this.COUNTRY_CODES) === -1) {\r\n                return {\r\n                    valid: false,\r\n                    message: $.fn.bootstrapValidator.helpers.format($.fn.bootstrapValidator.i18n.vat.countryNotSupported, country)\r\n                };\r\n            }\r\n\r\n            var method  = ['_', country.toLowerCase()].join('');\r\n            return this[method](value)\r\n                ? true\r\n                : {\r\n                    valid: false,\r\n                    message: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.vat.country, $.fn.bootstrapValidator.i18n.vat.countries[country.toUpperCase()])\r\n                };\r\n        },\r\n\r\n        // VAT validators\r\n\r\n        /**\r\n         * Validate Austrian VAT number\r\n         * Example:\r\n         * - Valid: ATU13585627\r\n         * - Invalid: ATU13585626\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _at: function(value) {\r\n            if (!/^ATU[0-9]{8}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(3);\r\n            var sum    = 0,\r\n                weight = [1, 2, 1, 2, 1, 2, 1],\r\n                temp   = 0;\r\n\r\n            for (var i = 0; i < 7; i++) {\r\n                temp = parseInt(value.charAt(i), 10) * weight[i];\r\n                if (temp > 9) {\r\n                    temp = Math.floor(temp / 10) + temp % 10;\r\n                }\r\n                sum += temp;\r\n            }\r\n\r\n            sum = 10 - (sum + 4) % 10;\r\n            if (sum === 10) {\r\n                sum = 0;\r\n            }\r\n\r\n            return (sum + '' === value.substr(7, 1));\r\n        },\r\n\r\n        /**\r\n         * Validate Belgian VAT number\r\n         * Example:\r\n         * - Valid: BE0428759497\r\n         * - Invalid: BE431150351\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _be: function(value) {\r\n            if (!/^BE[0]{0,1}[0-9]{9}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            if (value.length === 9) {\r\n                value = '0' + value;\r\n            }\r\n\r\n            if (value.substr(1, 1) === '0') {\r\n                return false;\r\n            }\r\n\r\n            var sum = parseInt(value.substr(0, 8), 10) + parseInt(value.substr(8, 2), 10);\r\n            return (sum % 97 === 0);\r\n        },\r\n\r\n        /**\r\n         * Validate Bulgarian VAT number\r\n         * Example:\r\n         * - Valid: BG175074752,\r\n         * BG7523169263, BG8032056031,\r\n         * BG7542011030,\r\n         * BG7111042925\r\n         * - Invalid: BG175074753, BG7552A10004, BG7111042922\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _bg: function(value) {\r\n            if (!/^BG[0-9]{9,10}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            var sum = 0, i = 0;\r\n\r\n            // Legal entities\r\n            if (value.length === 9) {\r\n                for (i = 0; i < 8; i++) {\r\n                    sum += parseInt(value.charAt(i), 10) * (i + 1);\r\n                }\r\n                sum = sum % 11;\r\n                if (sum === 10) {\r\n                    sum = 0;\r\n                    for (i = 0; i < 8; i++) {\r\n                        sum += parseInt(value.charAt(i), 10) * (i + 3);\r\n                    }\r\n                }\r\n                sum = sum % 10;\r\n                return (sum + '' === value.substr(8));\r\n            }\r\n            // Physical persons, foreigners and others\r\n            else if (value.length === 10) {\r\n                // Validate Bulgarian national identification numbers\r\n                var egn = function(value) {\r\n                        // Check the birth date\r\n                        var year  = parseInt(value.substr(0, 2), 10) + 1900,\r\n                            month = parseInt(value.substr(2, 2), 10),\r\n                            day   = parseInt(value.substr(4, 2), 10);\r\n                        if (month > 40) {\r\n                            year += 100;\r\n                            month -= 40;\r\n                        } else if (month > 20) {\r\n                            year -= 100;\r\n                            month -= 20;\r\n                        }\r\n\r\n                        if (!$.fn.bootstrapValidator.helpers.date(year, month, day)) {\r\n                            return false;\r\n                        }\r\n\r\n                        var sum    = 0,\r\n                            weight = [2, 4, 8, 5, 10, 9, 7, 3, 6];\r\n                        for (var i = 0; i < 9; i++) {\r\n                            sum += parseInt(value.charAt(i), 10) * weight[i];\r\n                        }\r\n                        sum = (sum % 11) % 10;\r\n                        return (sum + '' === value.substr(9, 1));\r\n                    },\r\n                    // Validate Bulgarian personal number of a foreigner\r\n                    pnf = function(value) {\r\n                        var sum    = 0,\r\n                            weight = [21, 19, 17, 13, 11, 9, 7, 3, 1];\r\n                        for (var i = 0; i < 9; i++) {\r\n                            sum += parseInt(value.charAt(i), 10) * weight[i];\r\n                        }\r\n                        sum = sum % 10;\r\n                        return (sum + '' === value.substr(9, 1));\r\n                    },\r\n                    // Finally, consider it as a VAT number\r\n                    vat = function(value) {\r\n                        var sum    = 0,\r\n                            weight = [4, 3, 2, 7, 6, 5, 4, 3, 2];\r\n                        for (var i = 0; i < 9; i++) {\r\n                            sum += parseInt(value.charAt(i), 10) * weight[i];\r\n                        }\r\n                        sum = 11 - sum % 11;\r\n                        if (sum === 10) {\r\n                            return false;\r\n                        }\r\n                        if (sum === 11) {\r\n                            sum = 0;\r\n                        }\r\n                        return (sum + '' === value.substr(9, 1));\r\n                    };\r\n                return (egn(value) || pnf(value) || vat(value));\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Validate Swiss VAT number\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _ch: function(value) {\r\n            if (!/^CHE[0-9]{9}(MWST)?$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(3);\r\n            var sum    = 0,\r\n                weight = [5, 4, 3, 2, 7, 6, 5, 4];\r\n            for (var i = 0; i < 8; i++) {\r\n                sum += parseInt(value.charAt(i), 10) * weight[i];\r\n            }\r\n\r\n            sum = 11 - sum % 11;\r\n            if (sum === 10) {\r\n                return false;\r\n            }\r\n            if (sum === 11) {\r\n                sum = 0;\r\n            }\r\n\r\n            return (sum + '' === value.substr(8, 1));\r\n        },\r\n\r\n        /**\r\n         * Validate Cypriot VAT number\r\n         * Examples:\r\n         * - Valid: CY10259033P\r\n         * - Invalid: CY10259033Z\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _cy: function(value) {\r\n            if (!/^CY[0-5|9]{1}[0-9]{7}[A-Z]{1}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n\r\n            // Do not allow to start with \"12\"\r\n            if (value.substr(0, 2) === '12') {\r\n                return false;\r\n            }\r\n\r\n            // Extract the next digit and multiply by the counter.\r\n            var sum         = 0,\r\n                translation = {\r\n                    '0': 1,  '1': 0,  '2': 5,  '3': 7,  '4': 9,\r\n                    '5': 13, '6': 15, '7': 17, '8': 19, '9': 21\r\n                };\r\n            for (var i = 0; i < 8; i++) {\r\n                var temp = parseInt(value.charAt(i), 10);\r\n                if (i % 2 === 0) {\r\n                    temp = translation[temp + ''];\r\n                }\r\n                sum += temp;\r\n            }\r\n\r\n            sum = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'[sum % 26];\r\n            return (sum + '' === value.substr(8, 1));\r\n        },\r\n\r\n        /**\r\n         * Validate Czech Republic VAT number\r\n         * Can be:\r\n         * i) Legal entities (8 digit numbers)\r\n         * ii) Individuals with a RC (the 9 or 10 digit Czech birth number)\r\n         * iii) Individuals without a RC (9 digit numbers beginning with 6)\r\n         *\r\n         * Examples:\r\n         * - Valid: i) CZ25123891; ii) CZ7103192745, CZ991231123; iii) CZ640903926\r\n         * - Invalid: i) CZ25123890; ii) CZ1103492745, CZ590312123\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _cz: function(value) {\r\n            if (!/^CZ[0-9]{8,10}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n\r\n            var sum = 0,\r\n                i   = 0;\r\n            if (value.length === 8) {\r\n                // Do not allow to start with '9'\r\n                if (value.charAt(0) + '' === '9') {\r\n                    return false;\r\n                }\r\n\r\n                sum = 0;\r\n                for (i = 0; i < 7; i++) {\r\n                    sum += parseInt(value.charAt(i), 10) * (8 - i);\r\n                }\r\n                sum = 11 - sum % 11;\r\n                if (sum === 10) {\r\n                    sum = 0;\r\n                }\r\n                if (sum === 11) {\r\n                    sum = 1;\r\n                }\r\n\r\n                return (sum + '' === value.substr(7, 1));\r\n            } else if (value.length === 9 && (value.charAt(0) + '' === '6')) {\r\n                sum = 0;\r\n                // Skip the first (which is 6)\r\n                for (i = 0; i < 7; i++) {\r\n                    sum += parseInt(value.charAt(i + 1), 10) * (8 - i);\r\n                }\r\n                sum = 11 - sum % 11;\r\n                if (sum === 10) {\r\n                    sum = 0;\r\n                }\r\n                if (sum === 11) {\r\n                    sum = 1;\r\n                }\r\n                sum = [8, 7, 6, 5, 4, 3, 2, 1, 0, 9, 10][sum - 1];\r\n                return (sum + '' === value.substr(8, 1));\r\n            } else if (value.length === 9 || value.length === 10) {\r\n                // Validate Czech birth number (Rodné číslo), which is also national identifier\r\n                var year  = 1900 + parseInt(value.substr(0, 2), 10),\r\n                    month = parseInt(value.substr(2, 2), 10) % 50 % 20,\r\n                    day   = parseInt(value.substr(4, 2), 10);\r\n                if (value.length === 9) {\r\n                    if (year >= 1980) {\r\n                        year -= 100;\r\n                    }\r\n                    if (year > 1953) {\r\n                        return false;\r\n                    }\r\n                } else if (year < 1954) {\r\n                    year += 100;\r\n                }\r\n\r\n                if (!$.fn.bootstrapValidator.helpers.date(year, month, day)) {\r\n                    return false;\r\n                }\r\n\r\n                // Check that the birth date is not in the future\r\n                if (value.length === 10) {\r\n                    var check = parseInt(value.substr(0, 9), 10) % 11;\r\n                    if (year < 1985) {\r\n                        check = check % 10;\r\n                    }\r\n                    return (check + '' === value.substr(9, 1));\r\n                }\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Validate German VAT number\r\n         * Examples:\r\n         * - Valid: DE136695976\r\n         * - Invalid: DE136695978\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _de: function(value) {\r\n            if (!/^DE[0-9]{9}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            return $.fn.bootstrapValidator.helpers.mod11And10(value);\r\n        },\r\n\r\n        /**\r\n         * Validate Danish VAT number\r\n         * Example:\r\n         * - Valid: DK13585628\r\n         * - Invalid: DK13585627\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _dk: function(value) {\r\n            if (!/^DK[0-9]{8}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            var sum    = 0,\r\n                weight = [2, 7, 6, 5, 4, 3, 2, 1];\r\n            for (var i = 0; i < 8; i++) {\r\n                sum += parseInt(value.charAt(i), 10) * weight[i];\r\n            }\r\n\r\n            return (sum % 11 === 0);\r\n        },\r\n\r\n        /**\r\n         * Validate Estonian VAT number\r\n         * Examples:\r\n         * - Valid: EE100931558, EE100594102\r\n         * - Invalid: EE100594103\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _ee: function(value) {\r\n            if (!/^EE[0-9]{9}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            var sum    = 0,\r\n                weight = [3, 7, 1, 3, 7, 1, 3, 7, 1];\r\n\r\n            for (var i = 0; i < 9; i++) {\r\n                sum += parseInt(value.charAt(i), 10) * weight[i];\r\n            }\r\n\r\n            return (sum % 10 === 0);\r\n        },\r\n\r\n        /**\r\n         * Validate Spanish VAT number (NIF - Número de Identificación Fiscal)\r\n         * Can be:\r\n         * i) DNI (Documento nacional de identidad), for Spaniards\r\n         * ii) NIE (Número de Identificación de Extranjeros), for foreigners\r\n         * iii) CIF (Certificado de Identificación Fiscal), for legal entities and others\r\n         *\r\n         * Examples:\r\n         * - Valid: i) ES54362315K; ii) ESX2482300W, ESX5253868R; iii) ESM1234567L, ESJ99216582, ESB58378431, ESB64717838\r\n         * - Invalid: i) ES54362315Z; ii) ESX2482300A; iii) ESJ99216583\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _es: function(value) {\r\n            if (!/^ES[0-9A-Z][0-9]{7}[0-9A-Z]$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            var dni = function(value) {\r\n                    var check = parseInt(value.substr(0, 8), 10);\r\n                    check = 'TRWAGMYFPDXBNJZSQVHLCKE'[check % 23];\r\n                    return (check + '' === value.substr(8, 1));\r\n                },\r\n                nie = function(value) {\r\n                    var check = ['XYZ'.indexOf(value.charAt(0)), value.substr(1)].join('');\r\n                    check = parseInt(check, 10);\r\n                    check = 'TRWAGMYFPDXBNJZSQVHLCKE'[check % 23];\r\n                    return (check + '' === value.substr(8, 1));\r\n                },\r\n                cif = function(value) {\r\n                    var first = value.charAt(0), check;\r\n                    if ('KLM'.indexOf(first) !== -1) {\r\n                        // K: Spanish younger than 14 year old\r\n                        // L: Spanish living outside Spain without DNI\r\n                        // M: Granted the tax to foreigners who have no NIE\r\n                        check = parseInt(value.substr(1, 8), 10);\r\n                        check = 'TRWAGMYFPDXBNJZSQVHLCKE'[check % 23];\r\n                        return (check + '' === value.substr(8, 1));\r\n                    } else if ('ABCDEFGHJNPQRSUVW'.indexOf(first) !== -1) {\r\n                        var sum    = 0,\r\n                            weight = [2, 1, 2, 1, 2, 1, 2],\r\n                            temp   = 0;\r\n\r\n                        for (var i = 0; i < 7; i++) {\r\n                            temp = parseInt(value.charAt(i + 1), 10) * weight[i];\r\n                            if (temp > 9) {\r\n                                temp = Math.floor(temp / 10) + temp % 10;\r\n                            }\r\n                            sum += temp;\r\n                        }\r\n                        sum = 10 - sum % 10;\r\n                        return (sum + '' === value.substr(8, 1) || 'JABCDEFGHI'[sum] === value.substr(8, 1));\r\n                    }\r\n\r\n                    return false;\r\n                };\r\n\r\n            var first = value.charAt(0);\r\n            if (/^[0-9]$/.test(first)) {\r\n                return dni(value);\r\n            } else if (/^[XYZ]$/.test(first)) {\r\n                return nie(value);\r\n            } else {\r\n                return cif(value);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Validate Finnish VAT number\r\n         * Examples:\r\n         * - Valid: FI20774740\r\n         * - Invalid: FI20774741\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _fi: function(value) {\r\n            if (!/^FI[0-9]{8}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            var sum    = 0,\r\n                weight = [7, 9, 10, 5, 8, 4, 2, 1];\r\n\r\n            for (var i = 0; i < 8; i++) {\r\n                sum += parseInt(value.charAt(i), 10) * weight[i];\r\n            }\r\n\r\n            return (sum % 11 === 0);\r\n        },\r\n\r\n        /**\r\n         * Validate French VAT number (TVA - taxe sur la valeur ajoutée)\r\n         * It's constructed by a SIREN number, prefixed by two characters.\r\n         *\r\n         * Examples:\r\n         * - Valid: FR40303265045, FR23334175221, FRK7399859412, FR4Z123456782\r\n         * - Invalid: FR84323140391\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _fr: function(value) {\r\n            if (!/^FR[0-9A-Z]{2}[0-9]{9}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n\r\n\t\t\tif (!$.fn.bootstrapValidator.helpers.luhn(value.substr(2))) {\r\n                return false;\r\n            }\r\n\r\n            if (/^[0-9]{2}$/.test(value.substr(0, 2))) {\r\n                // First two characters are digits\r\n                return value.substr(0, 2) === (parseInt(value.substr(2) + '12', 10) % 97 + '');\r\n            } else {\r\n                // The first characters cann't be O and I\r\n                var alphabet = '0123456789ABCDEFGHJKLMNPQRSTUVWXYZ',\r\n                    check;\r\n                // First one is digit\r\n                if (/^[0-9]{1}$/.test(value.charAt(0))) {\r\n                    check = alphabet.indexOf(value.charAt(0)) * 24 + alphabet.indexOf(value.charAt(1)) - 10;\r\n                } else {\r\n                    check = alphabet.indexOf(value.charAt(0)) * 34 + alphabet.indexOf(value.charAt(1)) - 100;\r\n                }\r\n                return ((parseInt(value.substr(2), 10) + 1 + Math.floor(check / 11)) % 11) === (check % 11);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Validate United Kingdom VAT number\r\n         * Example:\r\n         * - Valid: GB980780684\r\n         * - Invalid: GB802311781\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _gb: function(value) {\r\n            if (!/^GB[0-9]{9}$/.test(value)             /* Standard */\r\n                && !/^GB[0-9]{12}$/.test(value)         /* Branches */\r\n                && !/^GBGD[0-9]{3}$/.test(value)        /* Government department */\r\n                && !/^GBHA[0-9]{3}$/.test(value)        /* Health authority */\r\n                && !/^GB(GD|HA)8888[0-9]{5}$/.test(value))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            var length = value.length;\r\n            if (length === 5) {\r\n                var firstTwo  = value.substr(0, 2),\r\n                    lastThree = parseInt(value.substr(2), 10);\r\n                return ('GD' === firstTwo && lastThree < 500) || ('HA' === firstTwo && lastThree >= 500);\r\n            } else if (length === 11 && ('GD8888' === value.substr(0, 6) || 'HA8888' === value.substr(0, 6))) {\r\n                if (('GD' === value.substr(0, 2) && parseInt(value.substr(6, 3), 10) >= 500)\r\n                    || ('HA' === value.substr(0, 2) && parseInt(value.substr(6, 3), 10) < 500))\r\n                {\r\n                    return false;\r\n                }\r\n                return (parseInt(value.substr(6, 3), 10) % 97 === parseInt(value.substr(9, 2), 10));\r\n            } else if (length === 9 || length === 12) {\r\n                var sum    = 0,\r\n                    weight = [8, 7, 6, 5, 4, 3, 2, 10, 1];\r\n                for (var i = 0; i < 9; i++) {\r\n                    sum += parseInt(value.charAt(i), 10) * weight[i];\r\n                }\r\n                sum = sum % 97;\r\n\r\n                if (parseInt(value.substr(0, 3), 10) >= 100) {\r\n                    return (sum === 0 || sum === 42 || sum === 55);\r\n                } else {\r\n                    return (sum === 0);\r\n                }\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Validate Greek VAT number\r\n         * Examples:\r\n         * - Valid: GR023456780, EL094259216\r\n         * - Invalid: EL123456781\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _gr: function(value) {\r\n            if (!/^GR[0-9]{9}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            if (value.length === 8) {\r\n                value = '0' + value;\r\n            }\r\n\r\n            var sum    = 0,\r\n                weight = [256, 128, 64, 32, 16, 8, 4, 2];\r\n            for (var i = 0; i < 8; i++) {\r\n                sum += parseInt(value.charAt(i), 10) * weight[i];\r\n            }\r\n            sum = (sum % 11) % 10;\r\n\r\n            return (sum + '' === value.substr(8, 1));\r\n        },\r\n\r\n        // EL is traditionally prefix of Greek VAT numbers\r\n        _el: function(value) {\r\n            if (!/^EL[0-9]{9}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = 'GR' + value.substr(2);\r\n            return this._gr(value);\r\n        },\r\n\r\n        /**\r\n         * Validate Hungarian VAT number\r\n         * Examples:\r\n         * - Valid: HU12892312\r\n         * - Invalid: HU12892313\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _hu: function(value) {\r\n            if (!/^HU[0-9]{8}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            var sum    = 0,\r\n                weight = [9, 7, 3, 1, 9, 7, 3, 1];\r\n\r\n            for (var i = 0; i < 8; i++) {\r\n                sum += parseInt(value.charAt(i), 10) * weight[i];\r\n            }\r\n\r\n            return (sum % 10 === 0);\r\n        },\r\n\r\n        /**\r\n         * Validate Croatian VAT number\r\n         * Examples:\r\n         * - Valid: HR33392005961\r\n         * - Invalid: HR33392005962\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _hr: function(value) {\r\n            if (!/^HR[0-9]{11}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            return $.fn.bootstrapValidator.helpers.mod11And10(value);\r\n        },\r\n\r\n        /**\r\n         * Validate Irish VAT number\r\n         * Examples:\r\n         * - Valid: IE6433435F, IE6433435OA, IE8D79739I\r\n         * - Invalid: IE8D79738J\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _ie: function(value) {\r\n            if (!/^IE[0-9]{1}[0-9A-Z\\*\\+]{1}[0-9]{5}[A-Z]{1,2}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            var getCheckDigit = function(value) {\r\n                while (value.length < 7) {\r\n                    value = '0' + value;\r\n                }\r\n                var alphabet = 'WABCDEFGHIJKLMNOPQRSTUV',\r\n                    sum      = 0;\r\n                for (var i = 0; i < 7; i++) {\r\n                    sum += parseInt(value.charAt(i), 10) * (8 - i);\r\n                }\r\n                sum += 9 * alphabet.indexOf(value.substr(7));\r\n                return alphabet[sum % 23];\r\n            };\r\n\r\n            // The first 7 characters are digits\r\n            if (/^[0-9]+$/.test(value.substr(0, 7))) {\r\n                // New system\r\n                return value.charAt(7) === getCheckDigit(value.substr(0, 7) + value.substr(8) + '');\r\n            } else if ('ABCDEFGHIJKLMNOPQRSTUVWXYZ+*'.indexOf(value.charAt(1)) !== -1) {\r\n                // Old system\r\n                return value.charAt(7) === getCheckDigit(value.substr(2, 5) + value.substr(0, 1) + '');\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Validate Italian VAT number, which consists of 11 digits.\r\n         * - First 7 digits are a company identifier\r\n         * - Next 3 are the province of residence\r\n         * - The last one is a check digit\r\n         *\r\n         * Examples:\r\n         * - Valid: IT00743110157\r\n         * - Invalid: IT00743110158\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _it: function(value) {\r\n            if (!/^IT[0-9]{11}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            if (parseInt(value.substr(0, 7), 10) === 0) {\r\n                return false;\r\n            }\r\n\r\n            var lastThree = parseInt(value.substr(7, 3), 10);\r\n            if ((lastThree < 1) || (lastThree > 201) && lastThree !== 999 && lastThree !== 888) {\r\n                return false;\r\n            }\r\n\r\n            return $.fn.bootstrapValidator.helpers.luhn(value);\r\n        },\r\n\r\n        /**\r\n         * Validate Lithuanian VAT number\r\n         * It can be:\r\n         * - 9 digits, for legal entities\r\n         * - 12 digits, for temporarily registered taxpayers\r\n         *\r\n         * Examples:\r\n         * - Valid: LT119511515, LT100001919017, LT100004801610\r\n         * - Invalid: LT100001919018\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _lt: function(value) {\r\n            if (!/^LT([0-9]{7}1[0-9]{1}|[0-9]{10}1[0-9]{1})$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            var length = value.length,\r\n                sum    = 0,\r\n                i;\r\n            for (i = 0; i < length - 1; i++) {\r\n                sum += parseInt(value.charAt(i), 10) * (1 + i % 9);\r\n            }\r\n            var check = sum % 11;\r\n            if (check === 10) {\r\n                sum = 0;\r\n                for (i = 0; i < length - 1; i++) {\r\n                    sum += parseInt(value.charAt(i), 10) * (1 + (i + 2) % 9);\r\n                }\r\n            }\r\n            check = check % 11 % 10;\r\n            return (check + '' === value.charAt(length - 1));\r\n        },\r\n\r\n        /**\r\n         * Validate Luxembourg VAT number\r\n         * Examples:\r\n         * - Valid: LU15027442\r\n         * - Invalid: LU15027443\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _lu: function(value) {\r\n            if (!/^LU[0-9]{8}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            return ((parseInt(value.substr(0, 6), 10) % 89) + '' === value.substr(6, 2));\r\n        },\r\n\r\n        /**\r\n         * Validate Latvian VAT number\r\n         * Examples:\r\n         * - Valid: LV40003521600, LV16117519997\r\n         * - Invalid: LV40003521601, LV16137519997\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _lv: function(value) {\r\n            if (!/^LV[0-9]{11}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            var first  = parseInt(value.charAt(0), 10),\r\n                sum    = 0,\r\n                weight = [],\r\n                i,\r\n                length = value.length;\r\n            if (first > 3) {\r\n                // Legal entity\r\n                sum    = 0;\r\n                weight = [9, 1, 4, 8, 3, 10, 2, 5, 7, 6, 1];\r\n                for (i = 0; i < length; i++) {\r\n                    sum += parseInt(value.charAt(i), 10) * weight[i];\r\n                }\r\n                sum = sum % 11;\r\n                return (sum === 3);\r\n            } else {\r\n                // Check birth date\r\n                var day   = parseInt(value.substr(0, 2), 10),\r\n                    month = parseInt(value.substr(2, 2), 10),\r\n                    year  = parseInt(value.substr(4, 2), 10);\r\n                year = year + 1800 + parseInt(value.charAt(6), 10) * 100;\r\n\r\n                if (!$.fn.bootstrapValidator.helpers.date(year, month, day)) {\r\n                    return false;\r\n                }\r\n\r\n                // Check personal code\r\n                sum    = 0;\r\n                weight = [10, 5, 8, 4, 2, 1, 6, 3, 7, 9];\r\n                for (i = 0; i < length - 1; i++) {\r\n                    sum += parseInt(value.charAt(i), 10) * weight[i];\r\n                }\r\n                sum = (sum + 1) % 11 % 10;\r\n                return (sum + '' === value.charAt(length - 1));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Validate Maltese VAT number\r\n         * Examples:\r\n         * - Valid: MT11679112\r\n         * - Invalid: MT11679113\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _mt: function(value) {\r\n            if (!/^MT[0-9]{8}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            var sum    = 0,\r\n                weight = [3, 4, 6, 7, 8, 9, 10, 1];\r\n\r\n            for (var i = 0; i < 8; i++) {\r\n                sum += parseInt(value.charAt(i), 10) * weight[i];\r\n            }\r\n\r\n            return (sum % 37 === 0);\r\n        },\r\n\r\n        /**\r\n         * Validate Dutch VAT number\r\n         * Examples:\r\n         * - Valid: NL004495445B01\r\n         * - Invalid: NL123456789B90\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _nl: function(value) {\r\n            if (!/^NL[0-9]{9}B[0-9]{2}$/.test(value)) {\r\n               return false;\r\n            }\r\n            value = value.substr(2);\r\n            var sum    = 0,\r\n                weight = [9, 8, 7, 6, 5, 4, 3, 2];\r\n            for (var i = 0; i < 8; i++) {\r\n                sum += parseInt(value.charAt(i), 10) * weight[i];\r\n            }\r\n\r\n            sum = sum % 11;\r\n            if (sum > 9) {\r\n                sum = 0;\r\n            }\r\n            return (sum + '' === value.substr(8, 1));\r\n        },\r\n\r\n        /**\r\n         * Validate Norwegian VAT number\r\n         *\r\n         * @see http://www.brreg.no/english/coordination/number.html\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _no: function(value) {\r\n            if (!/^NO[0-9]{9}$/.test(value)) {\r\n               return false;\r\n            }\r\n            value = value.substr(2);\r\n            var sum    = 0,\r\n                weight = [3, 2, 7, 6, 5, 4, 3, 2];\r\n            for (var i = 0; i < 8; i++) {\r\n                sum += parseInt(value.charAt(i), 10) * weight[i];\r\n            }\r\n\r\n            sum = 11 - sum % 11;\r\n            if (sum === 11) {\r\n                sum = 0;\r\n            }\r\n            return (sum + '' === value.substr(8, 1));\r\n        },\r\n\r\n        /**\r\n         * Validate Polish VAT number\r\n         * Examples:\r\n         * - Valid: PL8567346215\r\n         * - Invalid: PL8567346216\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _pl: function(value) {\r\n            if (!/^PL[0-9]{10}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            var sum    = 0,\r\n                weight = [6, 5, 7, 2, 3, 4, 5, 6, 7, -1];\r\n\r\n            for (var i = 0; i < 10; i++) {\r\n                sum += parseInt(value.charAt(i), 10) * weight[i];\r\n            }\r\n\r\n            return (sum % 11 === 0);\r\n        },\r\n\r\n        /**\r\n         * Validate Portuguese VAT number\r\n         * Examples:\r\n         * - Valid: PT501964843\r\n         * - Invalid: PT501964842\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _pt: function(value) {\r\n            if (!/^PT[0-9]{9}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            var sum    = 0,\r\n                weight = [9, 8, 7, 6, 5, 4, 3, 2];\r\n\r\n            for (var i = 0; i < 8; i++) {\r\n                sum += parseInt(value.charAt(i), 10) * weight[i];\r\n            }\r\n            sum = 11 - sum % 11;\r\n            if (sum > 9) {\r\n                sum = 0;\r\n            }\r\n            return (sum + '' === value.substr(8, 1));\r\n        },\r\n\r\n        /**\r\n         * Validate Romanian VAT number\r\n         * Examples:\r\n         * - Valid: RO18547290\r\n         * - Invalid: RO18547291\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _ro: function(value) {\r\n            if (!/^RO[1-9][0-9]{1,9}$/.test(value)) {\r\n                return false;\r\n            }\r\n            value = value.substr(2);\r\n\r\n            var length = value.length,\r\n                weight = [7, 5, 3, 2, 1, 7, 5, 3, 2].slice(10 - length),\r\n                sum    = 0;\r\n            for (var i = 0; i < length - 1; i++) {\r\n                sum += parseInt(value.charAt(i), 10) * weight[i];\r\n            }\r\n\r\n            sum = (10 * sum) % 11 % 10;\r\n            return (sum + '' === value.substr(length - 1, 1));\r\n        },\r\n\r\n        /**\r\n         * Validate Russian VAT number (Taxpayer Identification Number - INN)\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _ru: function(value) {\r\n            if (!/^RU([0-9]{9}|[0-9]{12})$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            var i = 0;\r\n            if (value.length === 10) {\r\n                var sum    = 0,\r\n                    weight = [2, 4, 10, 3, 5, 9, 4, 6, 8, 0];\r\n                for (i = 0; i < 10; i++) {\r\n                    sum += parseInt(value.charAt(i), 10) * weight[i];\r\n                }\r\n                sum = sum % 11;\r\n                if (sum > 9) {\r\n                    sum = sum % 10;\r\n                }\r\n\r\n                return (sum + '' === value.substr(9, 1));\r\n            } else if (value.length === 12) {\r\n                var sum1    = 0,\r\n                    weight1 = [7, 2, 4, 10, 3, 5, 9, 4, 6, 8, 0],\r\n                    sum2    = 0,\r\n                    weight2 = [3, 7, 2, 4, 10, 3, 5, 9, 4, 6, 8, 0];\r\n\r\n                for (i = 0; i < 11; i++) {\r\n                    sum1 += parseInt(value.charAt(i), 10) * weight1[i];\r\n                    sum2 += parseInt(value.charAt(i), 10) * weight2[i];\r\n                }\r\n                sum1 = sum1 % 11;\r\n                if (sum1 > 9) {\r\n                    sum1 = sum1 % 10;\r\n                }\r\n                sum2 = sum2 % 11;\r\n                if (sum2 > 9) {\r\n                    sum2 = sum2 % 10;\r\n                }\r\n\r\n                return (sum1 + '' === value.substr(10, 1) && sum2 + '' === value.substr(11, 1));\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Validate Serbian VAT number\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _rs: function(value) {\r\n            if (!/^RS[0-9]{9}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            var sum  = 10,\r\n                temp = 0;\r\n            for (var i = 0; i < 8; i++) {\r\n                temp = (parseInt(value.charAt(i), 10) + sum) % 10;\r\n                if (temp === 0) {\r\n                    temp = 10;\r\n                }\r\n                sum = (2 * temp) % 11;\r\n            }\r\n\r\n            return ((sum + parseInt(value.substr(8, 1), 10)) % 10 === 1);\r\n        },\r\n\r\n        /**\r\n         * Validate Swedish VAT number\r\n         * Examples:\r\n         * - Valid: SE123456789701\r\n         * - Invalid: SE123456789101\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _se: function(value) {\r\n            if (!/^SE[0-9]{10}01$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2, 10);\r\n            return $.fn.bootstrapValidator.helpers.luhn(value);\r\n        },\r\n\r\n        /**\r\n         * Validate Slovenian VAT number\r\n         * Examples:\r\n         * - Valid: SI50223054\r\n         * - Invalid: SI50223055\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _si: function(value) {\r\n            if (!/^SI[0-9]{8}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            var sum    = 0,\r\n                weight = [8, 7, 6, 5, 4, 3, 2];\r\n\r\n            for (var i = 0; i < 7; i++) {\r\n                sum += parseInt(value.charAt(i), 10) * weight[i];\r\n            }\r\n            sum = 11 - sum % 11;\r\n            if (sum === 10) {\r\n                sum = 0;\r\n            }\r\n            return (sum + '' === value.substr(7, 1));\r\n        },\r\n\r\n        /**\r\n         * Validate Slovak VAT number\r\n         * Examples:\r\n         * - Valid: SK2022749619\r\n         * - Invalid: SK2022749618\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _sk: function(value) {\r\n            if (!/^SK[1-9][0-9][(2-4)|(6-9)][0-9]{7}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            return (parseInt(value.substr(2), 10) % 11 === 0);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.vin = $.extend($.fn.bootstrapValidator.i18n.vin || {}, {\r\n        'default': 'Please enter a valid VIN number'\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.vin = {\r\n        /**\r\n         * Validate an US VIN (Vehicle Identification Number)\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Consist of key:\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '') {\r\n                return true;\r\n            }\r\n\r\n            // Don't accept I, O, Q characters\r\n            if (!/^[a-hj-npr-z0-9]{8}[0-9xX][a-hj-npr-z0-9]{8}$/i.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.toUpperCase();\r\n            var chars   = {\r\n                    A: 1,   B: 2,   C: 3,   D: 4,   E: 5,   F: 6,   G: 7,   H: 8,\r\n                    J: 1,   K: 2,   L: 3,   M: 4,   N: 5,           P: 7,           R: 9,\r\n                            S: 2,   T: 3,   U: 4,   V: 5,   W: 6,   X: 7,   Y: 8,   Z: 9,\r\n                    '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9, '0': 0\r\n                },\r\n                weights = [8, 7, 6, 5, 4, 3, 2, 10, 0, 9, 8, 7, 6, 5, 4, 3, 2],\r\n                sum     = 0,\r\n                length  = value.length;\r\n            for (var i = 0; i < length; i++) {\r\n                sum += chars[value.charAt(i) + ''] * weights[i];\r\n            }\r\n\r\n            var reminder = sum % 11;\r\n            if (reminder === 10) {\r\n                reminder = 'X';\r\n            }\r\n\r\n            return (reminder + '') === value.charAt(8);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n\n(function($) {\r\n    $.fn.bootstrapValidator.i18n.zipCode = $.extend($.fn.bootstrapValidator.i18n.zipCode || {}, {\r\n        'default': 'Please enter a valid zip code',\r\n        countryNotSupported: 'The country code %s is not supported',\r\n        country: 'Please enter a valid %s',\r\n        countries: {\r\n            'CA': 'Canadian postal code',\r\n            'DK': 'Danish postal code',\r\n            'GB': 'United Kingdom postal code',\r\n            'IT': 'Italian postal code',\r\n            'NL': 'Dutch postal code',\r\n            'SE': 'Swiss postal code',\r\n            'SG': 'Singapore postal code',\r\n            'US': 'US zip code'\r\n        }\r\n    });\r\n\r\n    $.fn.bootstrapValidator.validators.zipCode = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            country: 'country'\r\n        },\r\n\r\n        COUNTRY_CODES: ['CA', 'DK', 'GB', 'IT', 'NL', 'SE', 'SG', 'US'],\r\n\r\n        /**\r\n         * Return true if and only if the input value is a valid country zip code\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Consist of key:\r\n         * - message: The invalid message\r\n         * - country: The country\r\n         *\r\n         * The country can be defined by:\r\n         * - An ISO 3166 country code\r\n         * Currently it supports the following countries:\r\n         *      - US (United States)\r\n         *      - CA (Canada)\r\n         *      - DK (Denmark)\r\n         *      - GB (United Kingdom)\r\n         *      - IT (Italy)\r\n         *      - NL (Netherlands)\r\n         *      - SE (Sweden)\r\n         *      - SG (Singapore)\r\n         *\r\n         * - Name of field which its value defines the country code\r\n         * - Name of callback function that returns the country code\r\n         * - A callback function that returns the country code\r\n         *\r\n         * callback: function(value, validator, $field) {\r\n         *      // value is the value of field\r\n         *      // validator is the BootstrapValidator instance\r\n         *      // $field is jQuery element representing the field\r\n         * }\r\n         *\r\n         * @returns {Boolean|Object}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value === '' || !options.country) {\r\n                return true;\r\n            }\r\n\r\n            var country = options.country;\r\n            if (typeof country !== 'string' || $.inArray(country, this.COUNTRY_CODES) === -1) {\r\n                // Try to determine the country\r\n                country = validator.getDynamicOption($field, country);\r\n            }\r\n\r\n            if (!country || $.inArray(country.toUpperCase(), this.COUNTRY_CODES) === -1) {\r\n                return { valid: false, message: $.fn.bootstrapValidator.helpers.format($.fn.bootstrapValidator.i18n.zipCode.countryNotSupported, country) };\r\n            }\r\n\r\n            var isValid = false;\r\n            country = country.toUpperCase();\r\n            switch (country) {\r\n                case 'CA':\r\n                    isValid = /^(?:A|B|C|E|G|H|J|K|L|M|N|P|R|S|T|V|X|Y){1}[0-9]{1}(?:A|B|C|E|G|H|J|K|L|M|N|P|R|S|T|V|W|X|Y|Z){1}\\s?[0-9]{1}(?:A|B|C|E|G|H|J|K|L|M|N|P|R|S|T|V|W|X|Y|Z){1}[0-9]{1}$/i.test(value);\r\n                    break;\r\n\r\n                case 'DK':\r\n                    isValid = /^(DK(-|\\s)?)?\\d{4}$/i.test(value);\r\n                    break;\r\n\r\n                case 'GB':\r\n                    isValid = this._gb(value);\r\n                    break;\r\n\r\n                // http://en.wikipedia.org/wiki/List_of_postal_codes_in_Italy\r\n                case 'IT':\r\n                    isValid = /^(I-|IT-)?\\d{5}$/i.test(value);\r\n                    break;\r\n\r\n                // http://en.wikipedia.org/wiki/Postal_codes_in_the_Netherlands\r\n                case 'NL':\r\n                    isValid = /^[1-9][0-9]{3} ?(?!sa|sd|ss)[a-z]{2}$/i.test(value);\r\n                    break;\r\n\r\n                case 'SE':\r\n                    isValid = /^(S-)?\\d{3}\\s?\\d{2}$/i.test(value);\r\n                    break;\r\n\r\n                case 'SG':\r\n                    isValid = /^([0][1-9]|[1-6][0-9]|[7]([0-3]|[5-9])|[8][0-2])(\\d{4})$/i.test(value);\r\n                    break;\r\n\r\n                case 'US':\r\n                /* falls through */\r\n                default:\r\n                    isValid = /^\\d{4,5}([\\-]?\\d{4})?$/.test(value);\r\n                    break;\r\n            }\r\n\r\n            return {\r\n                valid: isValid,\r\n                message: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.zipCode.country, $.fn.bootstrapValidator.i18n.zipCode.countries[country])\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Validate United Kingdom postcode\r\n         * Examples:\r\n         * - Standard: EC1A 1BB, W1A 1HQ, M1 1AA, B33 8TH, CR2 6XH, DN55 1PT\r\n         * - Special cases:\r\n         * AI-2640, ASCN 1ZZ, GIR 0AA\r\n         *\r\n         * @see http://en.wikipedia.org/wiki/Postcodes_in_the_United_Kingdom\r\n         * @param {String} value The postcode\r\n         * @returns {Boolean}\r\n         */\r\n        _gb: function(value) {\r\n            var firstChar  = '[ABCDEFGHIJKLMNOPRSTUWYZ]',     // Does not accept QVX\r\n                secondChar = '[ABCDEFGHKLMNOPQRSTUVWXY]',     // Does not accept IJZ\r\n                thirdChar  = '[ABCDEFGHJKPMNRSTUVWXY]',\r\n                fourthChar = '[ABEHMNPRVWXY]',\r\n                fifthChar  = '[ABDEFGHJLNPQRSTUWXYZ]',\r\n                regexps    = [\r\n                    // AN NAA, ANN NAA, AAN NAA, AANN NAA format\r\n                    new RegExp('^(' + firstChar + '{1}' + secondChar + '?[0-9]{1,2})(\\\\s*)([0-9]{1}' + fifthChar + '{2})$', 'i'),\r\n                    // ANA NAA\r\n                    new RegExp('^(' + firstChar + '{1}[0-9]{1}' + thirdChar + '{1})(\\\\s*)([0-9]{1}' + fifthChar + '{2})$', 'i'),\r\n                    // AANA NAA\r\n                    new RegExp('^(' + firstChar + '{1}' + secondChar + '{1}?[0-9]{1}' + fourthChar + '{1})(\\\\s*)([0-9]{1}' + fifthChar + '{2})$', 'i'),\r\n\r\n                    new RegExp('^(BF1)(\\\\s*)([0-6]{1}[ABDEFGHJLNPQRST]{1}[ABDEFGHJLNPQRSTUWZYZ]{1})$', 'i'),        // BFPO postcodes\r\n                    /^(GIR)(\\s*)(0AA)$/i,                       // Special postcode GIR 0AA\r\n                    /^(BFPO)(\\s*)([0-9]{1,4})$/i,               // Standard BFPO numbers\r\n                    /^(BFPO)(\\s*)(c\\/o\\s*[0-9]{1,3})$/i,        // c/o BFPO numbers\r\n                    /^([A-Z]{4})(\\s*)(1ZZ)$/i,                  // Overseas Territories\r\n                    /^(AI-2640)$/i                              // Anguilla\r\n                ];\r\n            for (var i = 0; i < regexps.length; i++) {\r\n                if (regexps[i].test(value)) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        }\r\n    };\r\n}(window.jQuery));\r\n"],"sourceRoot":"/source/"}